{
  "address": "0xabAF8C96597BB2Ba4Fcb966FB01b79B6F29490D2",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "initialSupply",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "_maxTxAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_maxWalletSize",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_tradingOpen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "bots_",
          "type": "address[]"
        }
      ],
      "name": "blockBots",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "bots",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getUniswapV2Pair",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "buyTax",
          "type": "uint256"
        }
      ],
      "name": "setBuyTax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "maxTxAmount",
          "type": "uint256"
        }
      ],
      "name": "setMaxTxnAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "maxWalletSize",
          "type": "uint256"
        }
      ],
      "name": "setMaxWalletSize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "sellTax",
          "type": "uint256"
        }
      ],
      "name": "setSellTax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "tradingOpen",
          "type": "bool"
        }
      ],
      "name": "setTrading",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "uniswapV2Pair",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "uniswapV2Router",
      "outputs": [
        {
          "internalType": "contract IUniswapV2Router02",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x8c831edcdf4d23d7d401a063a052e419e91b0aab38d8584691721a2a9e48d133",
  "receipt": {
    "to": null,
    "from": "0x8ee9B41620d01dAF068019fEE95D3aC855648B50",
    "contractAddress": "0xabAF8C96597BB2Ba4Fcb966FB01b79B6F29490D2",
    "transactionIndex": 114,
    "gasUsed": "5202179",
    "logsBloom": "0x
    "blockHash": "0x8799e56495f4add1e658e85a12d4cfb5efc6f9b194408c29826ec8be35aaae79",
    "transactionHash": "0x8c831edcdf4d23d7d401a063a052e419e91b0aab38d8584691721a2a9e48d133",
    "logs": [
      {
        "transactionIndex": 114,
        "blockNumber": 17191695,
        "transactionHash": "0x8c831edcdf4d23d7d401a063a052e419e91b0aab38d8584691721a2a9e48d133",
        "address": "0xabAF8C96597BB2Ba4Fcb966FB01b79B6F29490D2",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000008ee9b41620d01daf068019fee95d3ac855648b50"
        ],
        "data": "0x",
        "logIndex": 225,
        "blockHash": "0x8799e56495f4add1e658e85a12d4cfb5efc6f9b194408c29826ec8be35aaae79"
      },
      {
        "transactionIndex": 114,
        "blockNumber": 17191695,
        "transactionHash": "0x8c831edcdf4d23d7d401a063a052e419e91b0aab38d8584691721a2a9e48d133",
        "address": "0xabAF8C96597BB2Ba4Fcb966FB01b79B6F29490D2",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000008ee9b41620d01daf068019fee95d3ac855648b50"
        ],
        "data": "0x00000000000000000000000000000000000000001921a082258a73bfc3240000",
        "logIndex": 226,
        "blockHash": "0x8799e56495f4add1e658e85a12d4cfb5efc6f9b194408c29826ec8be35aaae79"
      },
      {
        "transactionIndex": 114,
        "blockNumber": 17191695,
        "transactionHash": "0x8c831edcdf4d23d7d401a063a052e419e91b0aab38d8584691721a2a9e48d133",
        "address": "0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f",
        "topics": [
          "0x0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9",
          "0x000000000000000000000000abaf8c96597bb2ba4fcb966fb01b79b6f29490d2",
          "0x000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"
        ],
        "data": "0x0000000000000000000000005146cb81947014771465d8775b2c3e4aa65539e7000000000000000000000000000000000000000000000000000000000002a3ac",
        "logIndex": 227,
        "blockHash": "0x8799e56495f4add1e658e85a12d4cfb5efc6f9b194408c29826ec8be35aaae79"
      }
    ],
    "blockNumber": 17191695,
    "cumulativeGasUsed": "13213940",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "7777777777000000000000000000"
  ],
  "numDeployments": 1,
  "solcInputHash": "d39d6045a44dab327462b03d69631228",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_maxTxAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_maxWalletSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_tradingOpen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"bots_\",\"type\":\"address[]\"}],\"name\":\"blockBots\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"bots\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUniswapV2Pair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"buyTax\",\"type\":\"uint256\"}],\"name\":\"setBuyTax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxTxAmount\",\"type\":\"uint256\"}],\"name\":\"setMaxTxnAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxWalletSize\",\"type\":\"uint256\"}],\"name\":\"setMaxWalletSize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"sellTax\",\"type\":\"uint256\"}],\"name\":\"setSellTax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"tradingOpen\",\"type\":\"bool\"}],\"name\":\"setTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Pair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Router\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router02\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GMUSSY.sol\":\"GMUSSY\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/GMUSSY.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nabstract contract Context {\\n  function _msgSender() internal view virtual returns (address) {\\n    return msg.sender;\\n  }\\n\\n  function _msgData() internal view virtual returns (bytes calldata) {\\n    return msg.data;\\n  }\\n}\\n\\ncontract Ownable is Context {\\n  address private _owner;\\n  address private _previousOwner;\\n  event OwnershipTransferred(\\n    address indexed previousOwner,\\n    address indexed newOwner\\n  );\\n\\n  constructor() {\\n    address msgSender = _msgSender();\\n    _owner = msgSender;\\n    emit OwnershipTransferred(address(0), msgSender);\\n  }\\n\\n  function owner() public view returns (address) {\\n    return _owner;\\n  }\\n\\n  modifier onlyOwner() {\\n    require(_owner == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    _;\\n  }\\n\\n  function renounceOwnership() public virtual onlyOwner {\\n    emit OwnershipTransferred(_owner, address(0));\\n    _owner = address(0);\\n  }\\n\\n  function transferOwnership(address newOwner) public virtual onlyOwner {\\n    require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n    emit OwnershipTransferred(_owner, newOwner);\\n    _owner = newOwner;\\n  }\\n}\\n\\nlibrary SafeMath {\\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n    uint256 c = a + b;\\n    require(c >= a, \\\"SafeMath: addition overflow\\\");\\n    return c;\\n  }\\n\\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n  }\\n\\n  function sub(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    require(b <= a, errorMessage);\\n    uint256 c = a - b;\\n    return c;\\n  }\\n\\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n    if (a == 0) {\\n      return 0;\\n    }\\n    uint256 c = a * b;\\n    require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n    return c;\\n  }\\n\\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return div(a, b, \\\"SafeMath: division by zero\\\");\\n  }\\n\\n  function div(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    require(b > 0, errorMessage);\\n    uint256 c = a / b;\\n    return c;\\n  }\\n}\\n\\ninterface IERC20 {\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n  function totalSupply() external view returns (uint256);\\n\\n  function balanceOf(address account) external view returns (uint256);\\n\\n  function transfer(address to, uint256 amount) external returns (bool);\\n\\n  function allowance(\\n    address owner,\\n    address spender\\n  ) external view returns (uint256);\\n\\n  function approve(address spender, uint256 amount) external returns (bool);\\n\\n  function transferFrom(\\n    address from,\\n    address to,\\n    uint256 amount\\n  ) external returns (bool);\\n}\\n\\ninterface IERC20Metadata is IERC20 {\\n  function name() external view returns (string memory);\\n\\n  function symbol() external view returns (string memory);\\n\\n  function decimals() external view returns (uint8);\\n}\\n\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n  mapping(address => uint256) private _balances;\\n  mapping(address => mapping(address => uint256)) private _allowances;\\n\\n  uint256 private _totalSupply;\\n  string private _name;\\n  string private _symbol;\\n\\n  constructor(string memory name_, string memory symbol_) {\\n    _name = name_;\\n    _symbol = symbol_;\\n  }\\n\\n  function name() public view virtual override returns (string memory) {\\n    return _name;\\n  }\\n\\n  function symbol() public view virtual override returns (string memory) {\\n    return _symbol;\\n  }\\n\\n  function decimals() public view virtual override returns (uint8) {\\n    return 18;\\n  }\\n\\n  function totalSupply() public view virtual override returns (uint256) {\\n    return _totalSupply;\\n  }\\n\\n  function balanceOf(\\n    address account\\n  ) public view virtual override returns (uint256) {\\n    return _balances[account];\\n  }\\n\\n  function transfer(\\n    address to,\\n    uint256 amount\\n  ) public virtual override returns (bool) {\\n    address owner = _msgSender();\\n    _transfer(owner, to, amount);\\n    return true;\\n  }\\n\\n  function allowance(\\n    address owner,\\n    address spender\\n  ) public view virtual override returns (uint256) {\\n    return _allowances[owner][spender];\\n  }\\n\\n  function approve(\\n    address spender,\\n    uint256 amount\\n  ) public virtual override returns (bool) {\\n    address owner = _msgSender();\\n    _approve(owner, spender, amount);\\n    return true;\\n  }\\n\\n  function transferFrom(\\n    address from,\\n    address to,\\n    uint256 amount\\n  ) public virtual override returns (bool) {\\n    address spender = _msgSender();\\n    _spendAllowance(from, spender, amount);\\n    _transfer(from, to, amount);\\n    return true;\\n  }\\n\\n  function increaseAllowance(\\n    address spender,\\n    uint256 addedValue\\n  ) public virtual returns (bool) {\\n    address owner = _msgSender();\\n    _approve(owner, spender, allowance(owner, spender) + addedValue);\\n    return true;\\n  }\\n\\n  function decreaseAllowance(\\n    address spender,\\n    uint256 subtractedValue\\n  ) public virtual returns (bool) {\\n    address owner = _msgSender();\\n    uint256 currentAllowance = allowance(owner, spender);\\n    require(\\n      currentAllowance >= subtractedValue,\\n      \\\"ERC20: decreased allowance below zero\\\"\\n    );\\n    unchecked {\\n      _approve(owner, spender, currentAllowance - subtractedValue);\\n    }\\n\\n    return true;\\n  }\\n\\n  function _transfer(\\n    address from,\\n    address to,\\n    uint256 amount\\n  ) internal virtual {\\n    require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n    require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n    _beforeTokenTransfer(from, to, amount);\\n\\n    uint256 fromBalance = _balances[from];\\n    require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n    unchecked {\\n      _balances[from] = fromBalance - amount;\\n      _balances[to] += amount;\\n    }\\n\\n    emit Transfer(from, to, amount);\\n\\n    _afterTokenTransfer(from, to, amount);\\n  }\\n\\n  function _mint(address account, uint256 amount) internal virtual {\\n    require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n    _beforeTokenTransfer(address(0), account, amount);\\n\\n    _totalSupply += amount;\\n    unchecked {\\n      _balances[account] += amount;\\n    }\\n    emit Transfer(address(0), account, amount);\\n\\n    _afterTokenTransfer(address(0), account, amount);\\n  }\\n\\n  function _burn(address account, uint256 amount) internal virtual {\\n    require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n    _beforeTokenTransfer(account, address(0), amount);\\n\\n    uint256 accountBalance = _balances[account];\\n    require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n    unchecked {\\n      _balances[account] = accountBalance - amount;\\n      _totalSupply -= amount;\\n    }\\n\\n    emit Transfer(account, address(0), amount);\\n\\n    _afterTokenTransfer(account, address(0), amount);\\n  }\\n\\n  function _approve(\\n    address owner,\\n    address spender,\\n    uint256 amount\\n  ) internal virtual {\\n    require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n    require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n    _allowances[owner][spender] = amount;\\n    emit Approval(owner, spender, amount);\\n  }\\n\\n  function _spendAllowance(\\n    address owner,\\n    address spender,\\n    uint256 amount\\n  ) internal virtual {\\n    uint256 currentAllowance = allowance(owner, spender);\\n    if (currentAllowance != type(uint256).max) {\\n      require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n      unchecked {\\n        _approve(owner, spender, currentAllowance - amount);\\n      }\\n    }\\n  }\\n\\n  function _beforeTokenTransfer(\\n    address from,\\n    address to,\\n    uint256 amount\\n  ) internal virtual {}\\n\\n  function _afterTokenTransfer(\\n    address from,\\n    address to,\\n    uint256 amount\\n  ) internal virtual {}\\n}\\n\\ninterface IUniswapV2Pair {\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n  function name() external pure returns (string memory);\\n\\n  function symbol() external pure returns (string memory);\\n\\n  function decimals() external pure returns (uint8);\\n\\n  function totalSupply() external view returns (uint256);\\n\\n  function balanceOf(address owner) external view returns (uint256);\\n\\n  function allowance(\\n    address owner,\\n    address spender\\n  ) external view returns (uint256);\\n\\n  function approve(address spender, uint256 value) external returns (bool);\\n\\n  function transfer(address to, uint256 value) external returns (bool);\\n\\n  function transferFrom(\\n    address from,\\n    address to,\\n    uint256 value\\n  ) external returns (bool);\\n\\n  function DOMAIN_SEPARATOR() external view returns (bytes32);\\n\\n  function PERMIT_TYPEHASH() external pure returns (bytes32);\\n\\n  function nonces(address owner) external view returns (uint256);\\n\\n  function permit(\\n    address owner,\\n    address spender,\\n    uint256 value,\\n    uint256 deadline,\\n    uint8 v,\\n    bytes32 r,\\n    bytes32 s\\n  ) external;\\n\\n  event Mint(address indexed sender, uint256 amount0, uint256 amount1);\\n  event Burn(\\n    address indexed sender,\\n    uint256 amount0,\\n    uint256 amount1,\\n    address indexed to\\n  );\\n  event Swap(\\n    address indexed sender,\\n    uint256 amount0In,\\n    uint256 amount1In,\\n    uint256 amount0Out,\\n    uint256 amount1Out,\\n    address indexed to\\n  );\\n  event Sync(uint112 reserve0, uint112 reserve1);\\n\\n  function MINIMUM_LIQUIDITY() external pure returns (uint256);\\n\\n  function factory() external view returns (address);\\n\\n  function token0() external view returns (address);\\n\\n  function token1() external view returns (address);\\n\\n  function getReserves()\\n    external\\n    view\\n    returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\\n\\n  function price0CumulativeLast() external view returns (uint256);\\n\\n  function price1CumulativeLast() external view returns (uint256);\\n\\n  function kLast() external view returns (uint256);\\n\\n  function mint(address to) external returns (uint256 liquidity);\\n\\n  function burn(address to) external returns (uint256 amount0, uint256 amount1);\\n\\n  function swap(\\n    uint256 amount0Out,\\n    uint256 amount1Out,\\n    address to,\\n    bytes calldata data\\n  ) external;\\n\\n  function skim(address to) external;\\n\\n  function sync() external;\\n\\n  function initialize(address, address) external;\\n}\\n\\ninterface IUniswapV2Router01 {\\n  function factory() external pure returns (address);\\n\\n  function WETH() external pure returns (address);\\n\\n  function addLiquidity(\\n    address tokenA,\\n    address tokenB,\\n    uint256 amountADesired,\\n    uint256 amountBDesired,\\n    uint256 amountAMin,\\n    uint256 amountBMin,\\n    address to,\\n    uint256 deadline\\n  ) external returns (uint256 amountA, uint256 amountB, uint256 liquidity);\\n\\n  function addLiquidityETH(\\n    address token,\\n    uint256 amountTokenDesired,\\n    uint256 amountTokenMin,\\n    uint256 amountETHMin,\\n    address to,\\n    uint256 deadline\\n  )\\n    external\\n    payable\\n    returns (uint256 amountToken, uint256 amountETH, uint256 liquidity);\\n\\n  function removeLiquidity(\\n    address tokenA,\\n    address tokenB,\\n    uint256 liquidity,\\n    uint256 amountAMin,\\n    uint256 amountBMin,\\n    address to,\\n    uint256 deadline\\n  ) external returns (uint256 amountA, uint256 amountB);\\n\\n  function removeLiquidityETH(\\n    address token,\\n    uint256 liquidity,\\n    uint256 amountTokenMin,\\n    uint256 amountETHMin,\\n    address to,\\n    uint256 deadline\\n  ) external returns (uint256 amountToken, uint256 amountETH);\\n\\n  function removeLiquidityWithPermit(\\n    address tokenA,\\n    address tokenB,\\n    uint256 liquidity,\\n    uint256 amountAMin,\\n    uint256 amountBMin,\\n    address to,\\n    uint256 deadline,\\n    bool approveMax,\\n    uint8 v,\\n    bytes32 r,\\n    bytes32 s\\n  ) external returns (uint256 amountA, uint256 amountB);\\n\\n  function removeLiquidityETHWithPermit(\\n    address token,\\n    uint256 liquidity,\\n    uint256 amountTokenMin,\\n    uint256 amountETHMin,\\n    address to,\\n    uint256 deadline,\\n    bool approveMax,\\n    uint8 v,\\n    bytes32 r,\\n    bytes32 s\\n  ) external returns (uint256 amountToken, uint256 amountETH);\\n\\n  function swapExactTokensForTokens(\\n    uint256 amountIn,\\n    uint256 amountOutMin,\\n    address[] calldata path,\\n    address to,\\n    uint256 deadline\\n  ) external returns (uint256[] memory amounts);\\n\\n  function swapTokensForExactTokens(\\n    uint256 amountOut,\\n    uint256 amountInMax,\\n    address[] calldata path,\\n    address to,\\n    uint256 deadline\\n  ) external returns (uint256[] memory amounts);\\n\\n  function swapExactETHForTokens(\\n    uint256 amountOutMin,\\n    address[] calldata path,\\n    address to,\\n    uint256 deadline\\n  ) external payable returns (uint256[] memory amounts);\\n\\n  function swapTokensForExactETH(\\n    uint256 amountOut,\\n    uint256 amountInMax,\\n    address[] calldata path,\\n    address to,\\n    uint256 deadline\\n  ) external returns (uint256[] memory amounts);\\n\\n  function swapExactTokensForETH(\\n    uint256 amountIn,\\n    uint256 amountOutMin,\\n    address[] calldata path,\\n    address to,\\n    uint256 deadline\\n  ) external returns (uint256[] memory amounts);\\n\\n  function swapETHForExactTokens(\\n    uint256 amountOut,\\n    address[] calldata path,\\n    address to,\\n    uint256 deadline\\n  ) external payable returns (uint256[] memory amounts);\\n\\n  function quote(\\n    uint256 amountA,\\n    uint256 reserveA,\\n    uint256 reserveB\\n  ) external pure returns (uint256 amountB);\\n\\n  function getAmountOut(\\n    uint256 amountIn,\\n    uint256 reserveIn,\\n    uint256 reserveOut\\n  ) external pure returns (uint256 amountOut);\\n\\n  function getAmountIn(\\n    uint256 amountOut,\\n    uint256 reserveIn,\\n    uint256 reserveOut\\n  ) external pure returns (uint256 amountIn);\\n\\n  function getAmountsOut(\\n    uint256 amountIn,\\n    address[] calldata path\\n  ) external view returns (uint256[] memory amounts);\\n\\n  function getAmountsIn(\\n    uint256 amountOut,\\n    address[] calldata path\\n  ) external view returns (uint256[] memory amounts);\\n}\\n\\ninterface IUniswapV2Router02 is IUniswapV2Router01 {\\n  function removeLiquidityETHSupportingFeeOnTransferTokens(\\n    address token,\\n    uint256 liquidity,\\n    uint256 amountTokenMin,\\n    uint256 amountETHMin,\\n    address to,\\n    uint256 deadline\\n  ) external returns (uint256 amountETH);\\n\\n  function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\\n    address token,\\n    uint256 liquidity,\\n    uint256 amountTokenMin,\\n    uint256 amountETHMin,\\n    address to,\\n    uint256 deadline,\\n    bool approveMax,\\n    uint8 v,\\n    bytes32 r,\\n    bytes32 s\\n  ) external returns (uint256 amountETH);\\n\\n  function swapExactTokensForTokensSupportingFeeOnTransferTokens(\\n    uint256 amountIn,\\n    uint256 amountOutMin,\\n    address[] calldata path,\\n    address to,\\n    uint256 deadline\\n  ) external;\\n\\n  function swapExactETHForTokensSupportingFeeOnTransferTokens(\\n    uint256 amountOutMin,\\n    address[] calldata path,\\n    address to,\\n    uint256 deadline\\n  ) external payable;\\n\\n  function swapExactTokensForETHSupportingFeeOnTransferTokens(\\n    uint256 amountIn,\\n    uint256 amountOutMin,\\n    address[] calldata path,\\n    address to,\\n    uint256 deadline\\n  ) external;\\n\\n  function WETH() external pure override returns (address);\\n}\\n\\ninterface IUniswapV2Factory {\\n  event PairCreated(\\n    address indexed token0,\\n    address indexed token1,\\n    address pair,\\n    uint256\\n  );\\n\\n  function feeTo() external view returns (address);\\n\\n  function feeToSetter() external view returns (address);\\n\\n  function getPair(\\n    address tokenA,\\n    address tokenB\\n  ) external view returns (address pair);\\n\\n  function allPairs(uint256) external view returns (address pair);\\n\\n  function allPairsLength() external view returns (uint256);\\n\\n  function createPair(\\n    address tokenA,\\n    address tokenB\\n  ) external returns (address pair);\\n\\n  function setFeeTo(address) external;\\n\\n  function setFeeToSetter(address) external;\\n}\\n\\ncontract GMUSSY is ERC20, Ownable {\\n  using SafeMath for uint256;\\n\\n  IUniswapV2Router02 public uniswapV2Router;\\n  address public uniswapV2Pair;\\n\\n  uint256 private constant _supply = 7777777777 * 1e18;\\n  uint256 public _maxTxAmount = SafeMath.div(_supply, 100);\\n  uint256 public _maxWalletSize = SafeMath.div(_supply, 100);\\n  uint256 private _buyTax = 4;\\n  uint256 private _sellTax = 3;\\n  address payable private _teamWallet;\\n  bool public _tradingOpen = true;\\n  mapping(address => bool) public bots;\\n\\n  constructor(uint256 initialSupply) ERC20(\\\"GMUSSY\\\", \\\"GMUSSY\\\") {\\n    _mint(msg.sender, initialSupply);\\n    _teamWallet = payable(0x8ee9B41620d01dAF068019fEE95D3aC855648B50);\\n\\n    IUniswapV2Router02 _uniswapV2Router = IUniswapV2Router02(\\n      0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D\\n    );\\n    uniswapV2Router = _uniswapV2Router;\\n    uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(\\n      address(this),\\n      _uniswapV2Router.WETH()\\n    );\\n  }\\n\\n  function _transfer(\\n    address sender,\\n    address recipient,\\n    uint256 amount\\n  ) internal override {\\n    uint256 tax = 0;\\n    require(_tradingOpen == true);\\n    require(\\n      !bots[sender] && !bots[recipient],\\n      \\\"TOKEN: Your account is blacklisted!\\\"\\n    );\\n    require(amount <= _maxTxAmount, \\\"TOKEN: Max Transaction Limit\\\");\\n\\n    if (recipient != uniswapV2Pair) {\\n      require(\\n        balanceOf(recipient) + amount < _maxWalletSize,\\n        \\\"TOKEN: Balance exceeds wallet size!\\\"\\n      );\\n    }\\n\\n    if (sender == uniswapV2Pair) {\\n      tax = amount.mul(_buyTax).div(100);\\n      super._transfer(sender, address(this), tax);\\n      super._transfer(address(this), uniswapV2Pair, tax);\\n    } else if (recipient == uniswapV2Pair) {\\n      tax = amount.mul(_sellTax).div(100);\\n      super._transfer(sender, _teamWallet, tax);\\n    } else if (\\n      sender == owner() ||\\n      recipient == owner() ||\\n      sender == _teamWallet ||\\n      recipient == _teamWallet\\n    ) {\\n      super._transfer(sender, recipient, amount);\\n    }\\n\\n    super._transfer(sender, recipient, amount - tax);\\n  }\\n\\n  function getUniswapV2Pair() public view returns (address) {\\n    return uniswapV2Pair;\\n  }\\n\\n  function setTrading(bool tradingOpen) public onlyOwner {\\n    _tradingOpen = tradingOpen;\\n  }\\n\\n  function swapTokensForEth(uint256 tokenAmount) private {\\n    address[] memory path = new address[](2);\\n    path[0] = address(this);\\n    path[1] = uniswapV2Router.WETH();\\n    _approve(address(this), address(uniswapV2Router), tokenAmount);\\n    uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(\\n      tokenAmount,\\n      0,\\n      path,\\n      address(this),\\n      block.timestamp\\n    );\\n  }\\n\\n  function sendETHToFee(uint256 amount) private {\\n    _teamWallet.transfer(amount);\\n  }\\n\\n  function blockBots(address[] memory bots_) public onlyOwner {\\n    for (uint256 i = 0; i < bots_.length; i++) {\\n      bots[bots_[i]] = true;\\n    }\\n  }\\n\\n  function setMaxTxnAmount(uint256 maxTxAmount) public onlyOwner {\\n    _maxTxAmount = maxTxAmount;\\n  }\\n\\n  function setMaxWalletSize(uint256 maxWalletSize) public onlyOwner {\\n    _maxWalletSize = maxWalletSize;\\n  }\\n\\n  function setBuyTax(uint256 buyTax) public onlyOwner {\\n    _buyTax = buyTax;\\n  }\\n\\n  function setSellTax(uint256 sellTax) public onlyOwner {\\n    _sellTax = sellTax;\\n  }\\n\\n  function setTeamWallet(address teamWallet) private onlyOwner {\\n    _teamWallet = payable(teamWallet);\\n  }\\n}\\n\",\"keccak256\":\"0xa6716f92e2c9e52c3bc2ae45957d9c97c8b153e7d43973253eaa1ef3296b2a0a\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080604052620000286b1921a082258a73bfc324000060646200045b60201b620010cf1760201c565b6009556200004f6b1921a082258a73bfc324000060646200045b60201b620010cf1760201c565b600a556004600b556003600c556001600d60146101000a81548160ff0219169083151502179055503480156200008457600080fd5b50604051620037d9380380620037d98339818101604052810190620000aa9190620006d4565b6040518060400160405280600681526020017f474d5553535900000000000000000000000000000000000000000000000000008152506040518060400160405280600681526020017f474d555353590000000000000000000000000000000000000000000000000000815250816003908162000127919062000976565b50806004908162000139919062000976565b50505060006200014e620004ad60201b60201c565b905080600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350620001ff3382620004b560201b60201c565b738ee9b41620d01daf068019fee95d3ac855648b50600d60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000737a250d5630b4cf539739df2c5dacb4c659f2488d905080600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015620002fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000320919062000ac2565b73ffffffffffffffffffffffffffffffffffffffff1663c9c65396308373ffffffffffffffffffffffffffffffffffffffff1663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000388573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003ae919062000ac2565b6040518363ffffffff1660e01b8152600401620003cd92919062000b05565b6020604051808303816000875af1158015620003ed573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000413919062000ac2565b600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000d56565b6000620004a583836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506200062260201b60201c565b905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160362000527576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200051e9062000b93565b60405180910390fd5b6200053b600083836200068a60201b60201c565b80600260008282546200054f919062000be4565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405162000602919062000c30565b60405180910390a36200061e600083836200068f60201b60201c565b5050565b600080831182906200066c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000663919062000ccb565b60405180910390fd5b50600083856200067d919062000d1e565b9050809150509392505050565b505050565b505050565b600080fd5b6000819050919050565b620006ae8162000699565b8114620006ba57600080fd5b50565b600081519050620006ce81620006a3565b92915050565b600060208284031215620006ed57620006ec62000694565b5b6000620006fd84828501620006bd565b91505092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200078857607f821691505b6020821081036200079e576200079d62000740565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620008087fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620007c9565b620008148683620007c9565b95508019841693508086168417925050509392505050565b6000819050919050565b600062000857620008516200084b8462000699565b6200082c565b62000699565b9050919050565b6000819050919050565b620008738362000836565b6200088b62000882826200085e565b848454620007d6565b825550505050565b600090565b620008a262000893565b620008af81848462000868565b505050565b5b81811015620008d757620008cb60008262000898565b600181019050620008b5565b5050565b601f8211156200092657620008f081620007a4565b620008fb84620007b9565b810160208510156200090b578190505b620009236200091a85620007b9565b830182620008b4565b50505b505050565b600082821c905092915050565b60006200094b600019846008026200092b565b1980831691505092915050565b600062000966838362000938565b9150826002028217905092915050565b620009818262000706565b67ffffffffffffffff8111156200099d576200099c62000711565b5b620009a982546200076f565b620009b6828285620008db565b600060209050601f831160018114620009ee5760008415620009d9578287015190505b620009e5858262000958565b86555062000a55565b601f198416620009fe86620007a4565b60005b8281101562000a285784890151825560018201915060208501945060208101905062000a01565b8683101562000a48578489015162000a44601f89168262000938565b8355505b6001600288020188555050505b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000a8a8262000a5d565b9050919050565b62000a9c8162000a7d565b811462000aa857600080fd5b50565b60008151905062000abc8162000a91565b92915050565b60006020828403121562000adb5762000ada62000694565b5b600062000aeb8482850162000aab565b91505092915050565b62000aff8162000a7d565b82525050565b600060408201905062000b1c600083018562000af4565b62000b2b602083018462000af4565b9392505050565b600082825260208201905092915050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b600062000b7b601f8362000b32565b915062000b888262000b43565b602082019050919050565b6000602082019050818103600083015262000bae8162000b6c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600062000bf18262000699565b915062000bfe8362000699565b925082820190508082111562000c195762000c1862000bb5565b5b92915050565b62000c2a8162000699565b82525050565b600060208201905062000c47600083018462000c1f565b92915050565b60005b8381101562000c6d57808201518184015260208101905062000c50565b60008484015250505050565b6000601f19601f8301169050919050565b600062000c978262000706565b62000ca3818562000b32565b935062000cb581856020860162000c4d565b62000cc08162000c79565b840191505092915050565b6000602082019050818103600083015262000ce7818462000c8a565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600062000d2b8262000699565b915062000d388362000699565b92508262000d4b5762000d4a62000cef565b5b828204905092915050565b612a738062000d666000396000f3fe608060405234801561001057600080fd5b50600436106101a85760003560e01c80637d1db4a5116100f9578063a9059cbb11610097578063dc1052e211610071578063dc1052e2146104c1578063dd62ed3e146104dd578063ea1644d51461050d578063f2fde38b14610529576101a8565b8063a9059cbb14610443578063bfd7928414610473578063cd52c701146104a3576101a8565b80638f70ccf7116100d35780638f70ccf7146103bb5780638f9a55c0146103d757806395d89b41146103f5578063a457c2d714610413576101a8565b80637d1db4a5146103635780638cd09d50146103815780638da5cb5b1461039d576101a8565b806323b872dd1161016657806349bd5a5e1161014057806349bd5a5e146102ef57806370a082311461030d578063715018a61461033d57806374010ece14610347576101a8565b806323b872dd14610271578063313ce567146102a157806339509351146102bf576101a8565b8062b8cf2a146101ad57806306fdde03146101c9578063095ea7b3146101e75780631694505e1461021757806318160ddd146102355780631abfa62914610253575b600080fd5b6101c760048036038101906101c29190611d54565b610545565b005b6101d1610671565b6040516101de9190611e1c565b60405180910390f35b61020160048036038101906101fc9190611e74565b610703565b60405161020e9190611ecf565b60405180910390f35b61021f610726565b60405161022c9190611f49565b60405180910390f35b61023d61074c565b60405161024a9190611f73565b60405180910390f35b61025b610756565b6040516102689190611f9d565b60405180910390f35b61028b60048036038101906102869190611fb8565b610780565b6040516102989190611ecf565b60405180910390f35b6102a96107af565b6040516102b69190612027565b60405180910390f35b6102d960048036038101906102d49190611e74565b6107b8565b6040516102e69190611ecf565b60405180910390f35b6102f76107ef565b6040516103049190611f9d565b60405180910390f35b61032760048036038101906103229190612042565b610815565b6040516103349190611f73565b60405180910390f35b61034561085d565b005b610361600480360381019061035c919061206f565b6109b5565b005b61036b610a56565b6040516103789190611f73565b60405180910390f35b61039b6004803603810190610396919061206f565b610a5c565b005b6103a5610afd565b6040516103b29190611f9d565b60405180910390f35b6103d560048036038101906103d091906120c8565b610b27565b005b6103df610bdb565b6040516103ec9190611f73565b60405180910390f35b6103fd610be1565b60405161040a9190611e1c565b60405180910390f35b61042d60048036038101906104289190611e74565b610c73565b60405161043a9190611ecf565b60405180910390f35b61045d60048036038101906104589190611e74565b610cea565b60405161046a9190611ecf565b60405180910390f35b61048d60048036038101906104889190612042565b610d0d565b60405161049a9190611ecf565b60405180910390f35b6104ab610d2d565b6040516104b89190611ecf565b60405180910390f35b6104db60048036038101906104d6919061206f565b610d40565b005b6104f760048036038101906104f291906120f5565b610de1565b6040516105049190611f73565b60405180910390f35b6105276004803603810190610522919061206f565b610e68565b005b610543600480360381019061053e9190612042565b610f09565b005b61054d611119565b73ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146105dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d390612181565b60405180910390fd5b60005b815181101561066d576001600e6000848481518110610601576106006121a1565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508080610665906121ff565b9150506105df565b5050565b60606003805461068090612276565b80601f01602080910402602001604051908101604052809291908181526020018280546106ac90612276565b80156106f95780601f106106ce576101008083540402835291602001916106f9565b820191906000526020600020905b8154815290600101906020018083116106dc57829003601f168201915b5050505050905090565b60008061070e611119565b905061071b818585611121565b600191505092915050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600254905090565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008061078b611119565b90506107988582856112ea565b6107a3858585611376565b60019150509392505050565b60006012905090565b6000806107c3611119565b90506107e48185856107d58589610de1565b6107df91906122a7565b611121565b600191505092915050565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610865611119565b73ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146108f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108eb90612181565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6109bd611119565b73ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610a4c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4390612181565b60405180910390fd5b8060098190555050565b60095481565b610a64611119565b73ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610af3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aea90612181565b60405180910390fd5b80600c8190555050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610b2f611119565b73ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610bbe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bb590612181565b60405180910390fd5b80600d60146101000a81548160ff02191690831515021790555050565b600a5481565b606060048054610bf090612276565b80601f0160208091040260200160405190810160405280929190818152602001828054610c1c90612276565b8015610c695780601f10610c3e57610100808354040283529160200191610c69565b820191906000526020600020905b815481529060010190602001808311610c4c57829003601f168201915b5050505050905090565b600080610c7e611119565b90506000610c8c8286610de1565b905083811015610cd1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cc89061234d565b60405180910390fd5b610cde8286868403611121565b60019250505092915050565b600080610cf5611119565b9050610d02818585611376565b600191505092915050565b600e6020528060005260406000206000915054906101000a900460ff1681565b600d60149054906101000a900460ff1681565b610d48611119565b73ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610dd7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dce90612181565b60405180910390fd5b80600b8190555050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610e70611119565b73ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610eff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ef690612181565b60405180910390fd5b80600a8190555050565b610f11611119565b73ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610fa0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f9790612181565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361100f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611006906123df565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600061111183836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061182c565b905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611190576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161118790612471565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036111ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111f690612503565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516112dd9190611f73565b60405180910390a3505050565b60006112f68484610de1565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146113705781811015611362576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113599061256f565b60405180910390fd5b61136f8484848403611121565b5b50505050565b600060011515600d60149054906101000a900460ff1615151461139857600080fd5b600e60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615801561143c5750600e60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16155b61147b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161147290612601565b60405180910390fd5b6009548211156114c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114b79061266d565b60405180910390fd5b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161461156d57600a548261152285610815565b61152c91906122a7565b1061156c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611563906126ff565b60405180910390fd5b5b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611629576115ea60646115dc600b548561188f90919063ffffffff16565b6110cf90919063ffffffff16565b90506115f7843083611909565b61162430600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683611909565b611810565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036116da576116a66064611698600c548561188f90919063ffffffff16565b6110cf90919063ffffffff16565b90506116d584600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683611909565b61180f565b6116e2610afd565b73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061174d575061171e610afd565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16145b806117a55750600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16145b806117fd5750600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16145b1561180e5761180d848484611909565b5b5b5b61182684848385611821919061271f565b611909565b50505050565b60008083118290611873576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161186a9190611e1c565b60405180910390fd5b50600083856118829190612782565b9050809150509392505050565b60008083036118a15760009050611903565b600082846118af91906127b3565b90508284826118be9190612782565b146118fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118f590612867565b60405180910390fd5b809150505b92915050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611978576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161196f906128f9565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036119e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119de9061298b565b60405180910390fd5b6119f2838383611b7f565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015611a78576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a6f90612a1d565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051611b669190611f73565b60405180910390a3611b79848484611b84565b50505050565b505050565b505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611beb82611ba2565b810181811067ffffffffffffffff82111715611c0a57611c09611bb3565b5b80604052505050565b6000611c1d611b89565b9050611c298282611be2565b919050565b600067ffffffffffffffff821115611c4957611c48611bb3565b5b602082029050602081019050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611c8a82611c5f565b9050919050565b611c9a81611c7f565b8114611ca557600080fd5b50565b600081359050611cb781611c91565b92915050565b6000611cd0611ccb84611c2e565b611c13565b90508083825260208201905060208402830185811115611cf357611cf2611c5a565b5b835b81811015611d1c5780611d088882611ca8565b845260208401935050602081019050611cf5565b5050509392505050565b600082601f830112611d3b57611d3a611b9d565b5b8135611d4b848260208601611cbd565b91505092915050565b600060208284031215611d6a57611d69611b93565b5b600082013567ffffffffffffffff811115611d8857611d87611b98565b5b611d9484828501611d26565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611dd7578082015181840152602081019050611dbc565b60008484015250505050565b6000611dee82611d9d565b611df88185611da8565b9350611e08818560208601611db9565b611e1181611ba2565b840191505092915050565b60006020820190508181036000830152611e368184611de3565b905092915050565b6000819050919050565b611e5181611e3e565b8114611e5c57600080fd5b50565b600081359050611e6e81611e48565b92915050565b60008060408385031215611e8b57611e8a611b93565b5b6000611e9985828601611ca8565b9250506020611eaa85828601611e5f565b9150509250929050565b60008115159050919050565b611ec981611eb4565b82525050565b6000602082019050611ee46000830184611ec0565b92915050565b6000819050919050565b6000611f0f611f0a611f0584611c5f565b611eea565b611c5f565b9050919050565b6000611f2182611ef4565b9050919050565b6000611f3382611f16565b9050919050565b611f4381611f28565b82525050565b6000602082019050611f5e6000830184611f3a565b92915050565b611f6d81611e3e565b82525050565b6000602082019050611f886000830184611f64565b92915050565b611f9781611c7f565b82525050565b6000602082019050611fb26000830184611f8e565b92915050565b600080600060608486031215611fd157611fd0611b93565b5b6000611fdf86828701611ca8565b9350506020611ff086828701611ca8565b925050604061200186828701611e5f565b9150509250925092565b600060ff82169050919050565b6120218161200b565b82525050565b600060208201905061203c6000830184612018565b92915050565b60006020828403121561205857612057611b93565b5b600061206684828501611ca8565b91505092915050565b60006020828403121561208557612084611b93565b5b600061209384828501611e5f565b91505092915050565b6120a581611eb4565b81146120b057600080fd5b50565b6000813590506120c28161209c565b92915050565b6000602082840312156120de576120dd611b93565b5b60006120ec848285016120b3565b91505092915050565b6000806040838503121561210c5761210b611b93565b5b600061211a85828601611ca8565b925050602061212b85828601611ca8565b9150509250929050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061216b602083611da8565b915061217682612135565b602082019050919050565b6000602082019050818103600083015261219a8161215e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061220a82611e3e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361223c5761223b6121d0565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061228e57607f821691505b6020821081036122a1576122a0612247565b5b50919050565b60006122b282611e3e565b91506122bd83611e3e565b92508282019050808211156122d5576122d46121d0565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000612337602583611da8565b9150612342826122db565b604082019050919050565b600060208201905081810360008301526123668161232a565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006123c9602683611da8565b91506123d48261236d565b604082019050919050565b600060208201905081810360008301526123f8816123bc565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b600061245b602483611da8565b9150612466826123ff565b604082019050919050565b6000602082019050818103600083015261248a8161244e565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b60006124ed602283611da8565b91506124f882612491565b604082019050919050565b6000602082019050818103600083015261251c816124e0565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000612559601d83611da8565b915061256482612523565b602082019050919050565b600060208201905081810360008301526125888161254c565b9050919050565b7f544f4b454e3a20596f7572206163636f756e7420697320626c61636b6c69737460008201527f6564210000000000000000000000000000000000000000000000000000000000602082015250565b60006125eb602383611da8565b91506125f68261258f565b604082019050919050565b6000602082019050818103600083015261261a816125de565b9050919050565b7f544f4b454e3a204d6178205472616e73616374696f6e204c696d697400000000600082015250565b6000612657601c83611da8565b915061266282612621565b602082019050919050565b600060208201905081810360008301526126868161264a565b9050919050565b7f544f4b454e3a2042616c616e636520657863656564732077616c6c657420736960008201527f7a65210000000000000000000000000000000000000000000000000000000000602082015250565b60006126e9602383611da8565b91506126f48261268d565b604082019050919050565b60006020820190508181036000830152612718816126dc565b9050919050565b600061272a82611e3e565b915061273583611e3e565b925082820390508181111561274d5761274c6121d0565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061278d82611e3e565b915061279883611e3e565b9250826127a8576127a7612753565b5b828204905092915050565b60006127be82611e3e565b91506127c983611e3e565b92508282026127d781611e3e565b915082820484148315176127ee576127ed6121d0565b5b5092915050565b7f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60008201527f7700000000000000000000000000000000000000000000000000000000000000602082015250565b6000612851602183611da8565b915061285c826127f5565b604082019050919050565b6000602082019050818103600083015261288081612844565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006128e3602583611da8565b91506128ee82612887565b604082019050919050565b60006020820190508181036000830152612912816128d6565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000612975602383611da8565b915061298082612919565b604082019050919050565b600060208201905081810360008301526129a481612968565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000612a07602683611da8565b9150612a12826129ab565b604082019050919050565b60006020820190508181036000830152612a36816129fa565b905091905056fea2646970667358221220a1c776cc375a7a3eed50b600a7aaac03857f00880776be99fb929658e784bf0164736f6c63430008120033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101a85760003560e01c80637d1db4a5116100f9578063a9059cbb11610097578063dc1052e211610071578063dc1052e2146104c1578063dd62ed3e146104dd578063ea1644d51461050d578063f2fde38b14610529576101a8565b8063a9059cbb14610443578063bfd7928414610473578063cd52c701146104a3576101a8565b80638f70ccf7116100d35780638f70ccf7146103bb5780638f9a55c0146103d757806395d89b41146103f5578063a457c2d714610413576101a8565b80637d1db4a5146103635780638cd09d50146103815780638da5cb5b1461039d576101a8565b806323b872dd1161016657806349bd5a5e1161014057806349bd5a5e146102ef57806370a082311461030d578063715018a61461033d57806374010ece14610347576101a8565b806323b872dd14610271578063313ce567146102a157806339509351146102bf576101a8565b8062b8cf2a146101ad57806306fdde03146101c9578063095ea7b3146101e75780631694505e1461021757806318160ddd146102355780631abfa62914610253575b600080fd5b6101c760048036038101906101c29190611d54565b610545565b005b6101d1610671565b6040516101de9190611e1c565b60405180910390f35b61020160048036038101906101fc9190611e74565b610703565b60405161020e9190611ecf565b60405180910390f35b61021f610726565b60405161022c9190611f49565b60405180910390f35b61023d61074c565b60405161024a9190611f73565b60405180910390f35b61025b610756565b6040516102689190611f9d565b60405180910390f35b61028b60048036038101906102869190611fb8565b610780565b6040516102989190611ecf565b60405180910390f35b6102a96107af565b6040516102b69190612027565b60405180910390f35b6102d960048036038101906102d49190611e74565b6107b8565b6040516102e69190611ecf565b60405180910390f35b6102f76107ef565b6040516103049190611f9d565b60405180910390f35b61032760048036038101906103229190612042565b610815565b6040516103349190611f73565b60405180910390f35b61034561085d565b005b610361600480360381019061035c919061206f565b6109b5565b005b61036b610a56565b6040516103789190611f73565b60405180910390f35b61039b6004803603810190610396919061206f565b610a5c565b005b6103a5610afd565b6040516103b29190611f9d565b60405180910390f35b6103d560048036038101906103d091906120c8565b610b27565b005b6103df610bdb565b6040516103ec9190611f73565b60405180910390f35b6103fd610be1565b60405161040a9190611e1c565b60405180910390f35b61042d60048036038101906104289190611e74565b610c73565b60405161043a9190611ecf565b60405180910390f35b61045d60048036038101906104589190611e74565b610cea565b60405161046a9190611ecf565b60405180910390f35b61048d60048036038101906104889190612042565b610d0d565b60405161049a9190611ecf565b60405180910390f35b6104ab610d2d565b6040516104b89190611ecf565b60405180910390f35b6104db60048036038101906104d6919061206f565b610d40565b005b6104f760048036038101906104f291906120f5565b610de1565b6040516105049190611f73565b60405180910390f35b6105276004803603810190610522919061206f565b610e68565b005b610543600480360381019061053e9190612042565b610f09565b005b61054d611119565b73ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146105dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d390612181565b60405180910390fd5b60005b815181101561066d576001600e6000848481518110610601576106006121a1565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508080610665906121ff565b9150506105df565b5050565b60606003805461068090612276565b80601f01602080910402602001604051908101604052809291908181526020018280546106ac90612276565b80156106f95780601f106106ce576101008083540402835291602001916106f9565b820191906000526020600020905b8154815290600101906020018083116106dc57829003601f168201915b5050505050905090565b60008061070e611119565b905061071b818585611121565b600191505092915050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600254905090565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008061078b611119565b90506107988582856112ea565b6107a3858585611376565b60019150509392505050565b60006012905090565b6000806107c3611119565b90506107e48185856107d58589610de1565b6107df91906122a7565b611121565b600191505092915050565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610865611119565b73ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146108f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108eb90612181565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6109bd611119565b73ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610a4c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4390612181565b60405180910390fd5b8060098190555050565b60095481565b610a64611119565b73ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610af3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aea90612181565b60405180910390fd5b80600c8190555050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610b2f611119565b73ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610bbe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bb590612181565b60405180910390fd5b80600d60146101000a81548160ff02191690831515021790555050565b600a5481565b606060048054610bf090612276565b80601f0160208091040260200160405190810160405280929190818152602001828054610c1c90612276565b8015610c695780601f10610c3e57610100808354040283529160200191610c69565b820191906000526020600020905b815481529060010190602001808311610c4c57829003601f168201915b5050505050905090565b600080610c7e611119565b90506000610c8c8286610de1565b905083811015610cd1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cc89061234d565b60405180910390fd5b610cde8286868403611121565b60019250505092915050565b600080610cf5611119565b9050610d02818585611376565b600191505092915050565b600e6020528060005260406000206000915054906101000a900460ff1681565b600d60149054906101000a900460ff1681565b610d48611119565b73ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610dd7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dce90612181565b60405180910390fd5b80600b8190555050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610e70611119565b73ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610eff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ef690612181565b60405180910390fd5b80600a8190555050565b610f11611119565b73ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610fa0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f9790612181565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361100f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611006906123df565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600061111183836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061182c565b905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611190576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161118790612471565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036111ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111f690612503565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516112dd9190611f73565b60405180910390a3505050565b60006112f68484610de1565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146113705781811015611362576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113599061256f565b60405180910390fd5b61136f8484848403611121565b5b50505050565b600060011515600d60149054906101000a900460ff1615151461139857600080fd5b600e60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615801561143c5750600e60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16155b61147b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161147290612601565b60405180910390fd5b6009548211156114c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114b79061266d565b60405180910390fd5b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161461156d57600a548261152285610815565b61152c91906122a7565b1061156c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611563906126ff565b60405180910390fd5b5b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611629576115ea60646115dc600b548561188f90919063ffffffff16565b6110cf90919063ffffffff16565b90506115f7843083611909565b61162430600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683611909565b611810565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036116da576116a66064611698600c548561188f90919063ffffffff16565b6110cf90919063ffffffff16565b90506116d584600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683611909565b61180f565b6116e2610afd565b73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061174d575061171e610afd565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16145b806117a55750600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16145b806117fd5750600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16145b1561180e5761180d848484611909565b5b5b5b61182684848385611821919061271f565b611909565b50505050565b60008083118290611873576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161186a9190611e1c565b60405180910390fd5b50600083856118829190612782565b9050809150509392505050565b60008083036118a15760009050611903565b600082846118af91906127b3565b90508284826118be9190612782565b146118fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118f590612867565b60405180910390fd5b809150505b92915050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611978576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161196f906128f9565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036119e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119de9061298b565b60405180910390fd5b6119f2838383611b7f565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015611a78576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a6f90612a1d565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051611b669190611f73565b60405180910390a3611b79848484611b84565b50505050565b505050565b505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611beb82611ba2565b810181811067ffffffffffffffff82111715611c0a57611c09611bb3565b5b80604052505050565b6000611c1d611b89565b9050611c298282611be2565b919050565b600067ffffffffffffffff821115611c4957611c48611bb3565b5b602082029050602081019050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611c8a82611c5f565b9050919050565b611c9a81611c7f565b8114611ca557600080fd5b50565b600081359050611cb781611c91565b92915050565b6000611cd0611ccb84611c2e565b611c13565b90508083825260208201905060208402830185811115611cf357611cf2611c5a565b5b835b81811015611d1c5780611d088882611ca8565b845260208401935050602081019050611cf5565b5050509392505050565b600082601f830112611d3b57611d3a611b9d565b5b8135611d4b848260208601611cbd565b91505092915050565b600060208284031215611d6a57611d69611b93565b5b600082013567ffffffffffffffff811115611d8857611d87611b98565b5b611d9484828501611d26565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611dd7578082015181840152602081019050611dbc565b60008484015250505050565b6000611dee82611d9d565b611df88185611da8565b9350611e08818560208601611db9565b611e1181611ba2565b840191505092915050565b60006020820190508181036000830152611e368184611de3565b905092915050565b6000819050919050565b611e5181611e3e565b8114611e5c57600080fd5b50565b600081359050611e6e81611e48565b92915050565b60008060408385031215611e8b57611e8a611b93565b5b6000611e9985828601611ca8565b9250506020611eaa85828601611e5f565b9150509250929050565b60008115159050919050565b611ec981611eb4565b82525050565b6000602082019050611ee46000830184611ec0565b92915050565b6000819050919050565b6000611f0f611f0a611f0584611c5f565b611eea565b611c5f565b9050919050565b6000611f2182611ef4565b9050919050565b6000611f3382611f16565b9050919050565b611f4381611f28565b82525050565b6000602082019050611f5e6000830184611f3a565b92915050565b611f6d81611e3e565b82525050565b6000602082019050611f886000830184611f64565b92915050565b611f9781611c7f565b82525050565b6000602082019050611fb26000830184611f8e565b92915050565b600080600060608486031215611fd157611fd0611b93565b5b6000611fdf86828701611ca8565b9350506020611ff086828701611ca8565b925050604061200186828701611e5f565b9150509250925092565b600060ff82169050919050565b6120218161200b565b82525050565b600060208201905061203c6000830184612018565b92915050565b60006020828403121561205857612057611b93565b5b600061206684828501611ca8565b91505092915050565b60006020828403121561208557612084611b93565b5b600061209384828501611e5f565b91505092915050565b6120a581611eb4565b81146120b057600080fd5b50565b6000813590506120c28161209c565b92915050565b6000602082840312156120de576120dd611b93565b5b60006120ec848285016120b3565b91505092915050565b6000806040838503121561210c5761210b611b93565b5b600061211a85828601611ca8565b925050602061212b85828601611ca8565b9150509250929050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061216b602083611da8565b915061217682612135565b602082019050919050565b6000602082019050818103600083015261219a8161215e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061220a82611e3e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361223c5761223b6121d0565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061228e57607f821691505b6020821081036122a1576122a0612247565b5b50919050565b60006122b282611e3e565b91506122bd83611e3e565b92508282019050808211156122d5576122d46121d0565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000612337602583611da8565b9150612342826122db565b604082019050919050565b600060208201905081810360008301526123668161232a565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006123c9602683611da8565b91506123d48261236d565b604082019050919050565b600060208201905081810360008301526123f8816123bc565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b600061245b602483611da8565b9150612466826123ff565b604082019050919050565b6000602082019050818103600083015261248a8161244e565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b60006124ed602283611da8565b91506124f882612491565b604082019050919050565b6000602082019050818103600083015261251c816124e0565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000612559601d83611da8565b915061256482612523565b602082019050919050565b600060208201905081810360008301526125888161254c565b9050919050565b7f544f4b454e3a20596f7572206163636f756e7420697320626c61636b6c69737460008201527f6564210000000000000000000000000000000000000000000000000000000000602082015250565b60006125eb602383611da8565b91506125f68261258f565b604082019050919050565b6000602082019050818103600083015261261a816125de565b9050919050565b7f544f4b454e3a204d6178205472616e73616374696f6e204c696d697400000000600082015250565b6000612657601c83611da8565b915061266282612621565b602082019050919050565b600060208201905081810360008301526126868161264a565b9050919050565b7f544f4b454e3a2042616c616e636520657863656564732077616c6c657420736960008201527f7a65210000000000000000000000000000000000000000000000000000000000602082015250565b60006126e9602383611da8565b91506126f48261268d565b604082019050919050565b60006020820190508181036000830152612718816126dc565b9050919050565b600061272a82611e3e565b915061273583611e3e565b925082820390508181111561274d5761274c6121d0565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061278d82611e3e565b915061279883611e3e565b9250826127a8576127a7612753565b5b828204905092915050565b60006127be82611e3e565b91506127c983611e3e565b92508282026127d781611e3e565b915082820484148315176127ee576127ed6121d0565b5b5092915050565b7f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60008201527f7700000000000000000000000000000000000000000000000000000000000000602082015250565b6000612851602183611da8565b915061285c826127f5565b604082019050919050565b6000602082019050818103600083015261288081612844565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006128e3602583611da8565b91506128ee82612887565b604082019050919050565b60006020820190508181036000830152612912816128d6565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000612975602383611da8565b915061298082612919565b604082019050919050565b600060208201905081810360008301526129a481612968565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000612a07602683611da8565b9150612a12826129ab565b604082019050919050565b60006020820190508181036000830152612a36816129fa565b905091905056fea2646970667358221220a1c776cc375a7a3eed50b600a7aaac03857f00880776be99fb929658e784bf0164736f6c63430008120033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 363,
        "contract": "contracts/GMUSSY.sol:GMUSSY",
        "label": "_balances",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 369,
        "contract": "contracts/GMUSSY.sol:GMUSSY",
        "label": "_allowances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 371,
        "contract": "contracts/GMUSSY.sol:GMUSSY",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 373,
        "contract": "contracts/GMUSSY.sol:GMUSSY",
        "label": "_name",
        "offset": 0,
        "slot": "3",
        "type": "t_string_storage"
      },
      {
        "astId": 375,
        "contract": "contracts/GMUSSY.sol:GMUSSY",
        "label": "_symbol",
        "offset": 0,
        "slot": "4",
        "type": "t_string_storage"
      },
      {
        "astId": 24,
        "contract": "contracts/GMUSSY.sol:GMUSSY",
        "label": "_owner",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 26,
        "contract": "contracts/GMUSSY.sol:GMUSSY",
        "label": "_previousOwner",
        "offset": 0,
        "slot": "6",
        "type": "t_address"
      },
      {
        "astId": 1623,
        "contract": "contracts/GMUSSY.sol:GMUSSY",
        "label": "uniswapV2Router",
        "offset": 0,
        "slot": "7",
        "type": "t_contract(IUniswapV2Router02)1552"
      },
      {
        "astId": 1625,
        "contract": "contracts/GMUSSY.sol:GMUSSY",
        "label": "uniswapV2Pair",
        "offset": 0,
        "slot": "8",
        "type": "t_address"
      },
      {
        "astId": 1637,
        "contract": "contracts/GMUSSY.sol:GMUSSY",
        "label": "_maxTxAmount",
        "offset": 0,
        "slot": "9",
        "type": "t_uint256"
      },
      {
        "astId": 1644,
        "contract": "contracts/GMUSSY.sol:GMUSSY",
        "label": "_maxWalletSize",
        "offset": 0,
        "slot": "10",
        "type": "t_uint256"
      },
      {
        "astId": 1647,
        "contract": "contracts/GMUSSY.sol:GMUSSY",
        "label": "_buyTax",
        "offset": 0,
        "slot": "11",
        "type": "t_uint256"
      },
      {
        "astId": 1650,
        "contract": "contracts/GMUSSY.sol:GMUSSY",
        "label": "_sellTax",
        "offset": 0,
        "slot": "12",
        "type": "t_uint256"
      },
      {
        "astId": 1652,
        "contract": "contracts/GMUSSY.sol:GMUSSY",
        "label": "_teamWallet",
        "offset": 0,
        "slot": "13",
        "type": "t_address_payable"
      },
      {
        "astId": 1655,
        "contract": "contracts/GMUSSY.sol:GMUSSY",
        "label": "_tradingOpen",
        "offset": 20,
        "slot": "13",
        "type": "t_bool"
      },
      {
        "astId": 1659,
        "contract": "contracts/GMUSSY.sol:GMUSSY",
        "label": "bots",
        "offset": 0,
        "slot": "14",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IUniswapV2Router02)1552": {
        "encoding": "inplace",
        "label": "contract IUniswapV2Router02",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}