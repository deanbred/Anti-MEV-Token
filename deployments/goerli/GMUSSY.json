{
  "address": "0xff697e46AbD0cF56aD352a17AAdC64E0AA4d66A6",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_maxTxAmount",
          "type": "uint256"
        }
      ],
      "name": "MaxTxAmountUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "_buyMap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_maxTxAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_maxWalletSize",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_swapTokensAtAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "bots_",
          "type": "address[]"
        }
      ],
      "name": "blockBots",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "bots",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        },
        {
          "internalType": "bool",
          "name": "excluded",
          "type": "bool"
        }
      ],
      "name": "excludeMultipleAccountsFromFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "manualsend",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "manualswap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "redisFeeOnBuy",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "redisFeeOnSell",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "taxFeeOnBuy",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "taxFeeOnSell",
          "type": "uint256"
        }
      ],
      "name": "setFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "maxTxAmount",
          "type": "uint256"
        }
      ],
      "name": "setMaxTxnAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "maxWalletSize",
          "type": "uint256"
        }
      ],
      "name": "setMaxWalletSize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "swapTokensAtAmount",
          "type": "uint256"
        }
      ],
      "name": "setMinSwapTokensThreshold",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_tradingOpen",
          "type": "bool"
        }
      ],
      "name": "setTrading",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_swapEnabled",
          "type": "bool"
        }
      ],
      "name": "toggleSwap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "notbot",
          "type": "address"
        }
      ],
      "name": "unblockBot",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "uniswapV2Pair",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "uniswapV2Router",
      "outputs": [
        {
          "internalType": "contract IUniswapV2Router02",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xae5bc2c8bb052db16f03ae99d4e937d4c5d84c277596e90900ad3b84c0547a8f",
  "receipt": {
    "to": null,
    "from": "0x8ee9B41620d01dAF068019fEE95D3aC855648B50",
    "contractAddress": "0xff697e46AbD0cF56aD352a17AAdC64E0AA4d66A6",
    "transactionIndex": 17,
    "gasUsed": "6339307",
    "logsBloom": "0x
    "blockHash": "0x44c316db9aaf71d6c8ef430b1c029de89eaa8cde24d1bb6932771af393e07dd4",
    "transactionHash": "0xae5bc2c8bb052db16f03ae99d4e937d4c5d84c277596e90900ad3b84c0547a8f",
    "logs": [
      {
        "transactionIndex": 17,
        "blockNumber": 8945746,
        "transactionHash": "0xae5bc2c8bb052db16f03ae99d4e937d4c5d84c277596e90900ad3b84c0547a8f",
        "address": "0xff697e46AbD0cF56aD352a17AAdC64E0AA4d66A6",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000008ee9b41620d01daf068019fee95d3ac855648b50"
        ],
        "data": "0x",
        "logIndex": 9,
        "blockHash": "0x44c316db9aaf71d6c8ef430b1c029de89eaa8cde24d1bb6932771af393e07dd4"
      },
      {
        "transactionIndex": 17,
        "blockNumber": 8945746,
        "transactionHash": "0xae5bc2c8bb052db16f03ae99d4e937d4c5d84c277596e90900ad3b84c0547a8f",
        "address": "0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f",
        "topics": [
          "0x0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9",
          "0x000000000000000000000000b4fbf271143f4fbf7b91a5ded31805e42b2208d6",
          "0x000000000000000000000000ff697e46abd0cf56ad352a17aadc64e0aa4d66a6"
        ],
        "data": "0x000000000000000000000000cce82e3d42059ed58774a455851df578a719e9c7000000000000000000000000000000000000000000000000000000000000c9d4",
        "logIndex": 10,
        "blockHash": "0x44c316db9aaf71d6c8ef430b1c029de89eaa8cde24d1bb6932771af393e07dd4"
      },
      {
        "transactionIndex": 17,
        "blockNumber": 8945746,
        "transactionHash": "0xae5bc2c8bb052db16f03ae99d4e937d4c5d84c277596e90900ad3b84c0547a8f",
        "address": "0xff697e46AbD0cF56aD352a17AAdC64E0AA4d66A6",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000008ee9b41620d01daf068019fee95d3ac855648b50"
        ],
        "data": "0x000000000000000000000000000000000000000002835cd9c6d6f2156b240000",
        "logIndex": 11,
        "blockHash": "0x44c316db9aaf71d6c8ef430b1c029de89eaa8cde24d1bb6932771af393e07dd4"
      }
    ],
    "blockNumber": 8945746,
    "cumulativeGasUsed": "6942798",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 2,
  "solcInputHash": "de91a19fbee97b721936aee20b65e5a2",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_maxTxAmount\",\"type\":\"uint256\"}],\"name\":\"MaxTxAmountUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_buyMap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_maxTxAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_maxWalletSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_swapTokensAtAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"bots_\",\"type\":\"address[]\"}],\"name\":\"blockBots\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"bots\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"excluded\",\"type\":\"bool\"}],\"name\":\"excludeMultipleAccountsFromFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manualsend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manualswap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"redisFeeOnBuy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"redisFeeOnSell\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"taxFeeOnBuy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"taxFeeOnSell\",\"type\":\"uint256\"}],\"name\":\"setFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxTxAmount\",\"type\":\"uint256\"}],\"name\":\"setMaxTxnAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxWalletSize\",\"type\":\"uint256\"}],\"name\":\"setMaxWalletSize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"swapTokensAtAmount\",\"type\":\"uint256\"}],\"name\":\"setMinSwapTokensThreshold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_tradingOpen\",\"type\":\"bool\"}],\"name\":\"setTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_swapEnabled\",\"type\":\"bool\"}],\"name\":\"toggleSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"notbot\",\"type\":\"address\"}],\"name\":\"unblockBot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Pair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Router\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router02\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GMUSSY.sol\":\"GMUSSY\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/GMUSSY.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nabstract contract Context {\\n  function _msgSender() internal view virtual returns (address) {\\n    return msg.sender;\\n  }\\n}\\n\\ninterface IERC20 {\\n  function totalSupply() external view returns (uint256);\\n\\n  function approve(address spender, uint256 amount) external returns (bool);\\n\\n  function balanceOf(address account) external view returns (uint256);\\n\\n  function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n  function allowance(\\n    address owner,\\n    address spender\\n  ) external view returns (uint256);\\n\\n  function transferFrom(\\n    address sender,\\n    address recipient,\\n    uint256 amount\\n  ) external returns (bool);\\n\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\\ncontract Ownable is Context {\\n  address private _owner;\\n  address private _previousOwner;\\n  event OwnershipTransferred(\\n    address indexed previousOwner,\\n    address indexed newOwner\\n  );\\n\\n  constructor() {\\n    address msgSender = _msgSender();\\n    _owner = msgSender;\\n    emit OwnershipTransferred(address(0), msgSender);\\n  }\\n\\n  function owner() public view returns (address) {\\n    return _owner;\\n  }\\n\\n  modifier onlyOwner() {\\n    require(_owner == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    _;\\n  }\\n\\n  function renounceOwnership() public virtual onlyOwner {\\n    emit OwnershipTransferred(_owner, address(0));\\n    _owner = address(0);\\n  }\\n\\n  function transferOwnership(address newOwner) public virtual onlyOwner {\\n    require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n    emit OwnershipTransferred(_owner, newOwner);\\n    _owner = newOwner;\\n  }\\n}\\n\\nlibrary SafeMath {\\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n    uint256 c = a + b;\\n    require(c >= a, \\\"SafeMath: addition overflow\\\");\\n    return c;\\n  }\\n\\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n  }\\n\\n  function sub(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    require(b <= a, errorMessage);\\n    uint256 c = a - b;\\n    return c;\\n  }\\n\\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n    if (a == 0) {\\n      return 0;\\n    }\\n    uint256 c = a * b;\\n    require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n    return c;\\n  }\\n\\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return div(a, b, \\\"SafeMath: division by zero\\\");\\n  }\\n\\n  function div(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    require(b > 0, errorMessage);\\n    uint256 c = a / b;\\n    return c;\\n  }\\n}\\n\\ninterface IUniswapV2Factory {\\n  function createPair(\\n    address tokenA,\\n    address tokenB\\n  ) external returns (address pair);\\n}\\n\\ninterface IUniswapV2Router02 {\\n  function swapExactTokensForETHSupportingFeeOnTransferTokens(\\n    uint256 amountIn,\\n    uint256 amountOutMin,\\n    address[] calldata path,\\n    address to,\\n    uint256 deadline\\n  ) external;\\n\\n  function factory() external pure returns (address);\\n\\n  function WETH() external pure returns (address);\\n\\n  function addLiquidityETH(\\n    address token,\\n    uint256 amountTokenDesired,\\n    uint256 amountTokenMin,\\n    uint256 amountETHMin,\\n    address to,\\n    uint256 deadline\\n  )\\n    external\\n    payable\\n    returns (uint256 amountToken, uint256 amountETH, uint256 liquidity);\\n}\\n\\ncontract GMUSSY is Context, IERC20, Ownable {\\n  using SafeMath for uint256;\\n\\n  string private constant _name = \\\"GMUSSY\\\";\\n  string private constant _symbol = \\\"GMUSSY\\\";\\n  uint8 private constant _decimals = 18;\\n\\n  mapping(address => uint256) private _rOwned;\\n  mapping(address => uint256) private _tOwned;\\n  mapping(address => mapping(address => uint256)) private _allowances;\\n  mapping(address => bool) private _isExcludedFromFee;\\n\\n  uint256 private constant MAX = ~uint256(0);\\n  uint256 private constant _tTotal = 777777777 * 10 ** 18;\\n  uint256 private _rTotal = (MAX - (MAX % _tTotal));\\n  uint256 private _tFeeTotal;\\n  uint256 private _redisFeeOnBuy = 0;\\n  uint256 private _taxFeeOnBuy = 3;\\n  uint256 private _redisFeeOnSell = 0;\\n  uint256 private _taxFeeOnSell = 3;\\n\\n  //Original Fee\\n  uint256 private _redisFee = _redisFeeOnSell;\\n  uint256 private _taxFee = _taxFeeOnSell;\\n\\n  uint256 private _previousredisFee = _redisFee;\\n  uint256 private _previoustaxFee = _taxFee;\\n\\n  mapping(address => bool) public bots;\\n  mapping(address => uint256) public _buyMap;\\n  address payable private _developmentAddress =\\n    payable(0x8ee9B41620d01dAF068019fEE95D3aC855648B50);\\n  address payable private _marketingAddress =\\n    payable(0x8ee9B41620d01dAF068019fEE95D3aC855648B50);\\n\\n  IUniswapV2Router02 public uniswapV2Router;\\n  address public uniswapV2Pair;\\n\\n  bool private tradingOpen = true;\\n  bool private inSwap = false;\\n  bool private swapEnabled = true;\\n\\n  uint256 public _maxTxAmount = 7777777 * 10 ** 18;\\n  uint256 public _maxWalletSize = 7777777 * 10 ** 18;\\n  uint256 public _swapTokensAtAmount = 5000 * 10 ** 18;\\n\\n  event MaxTxAmountUpdated(uint256 _maxTxAmount);\\n  modifier lockTheSwap() {\\n    inSwap = true;\\n    _;\\n    inSwap = false;\\n  }\\n\\n  constructor() {\\n    _rOwned[_msgSender()] = _rTotal;\\n\\n    IUniswapV2Router02 _uniswapV2Router = IUniswapV2Router02(\\n      0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D\\n    ); //\\n    uniswapV2Router = _uniswapV2Router;\\n    uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(\\n      address(this),\\n      _uniswapV2Router.WETH()\\n    );\\n\\n    _isExcludedFromFee[owner()] = true;\\n    _isExcludedFromFee[address(this)] = true;\\n    _isExcludedFromFee[_developmentAddress] = true;\\n    _isExcludedFromFee[_marketingAddress] = true;\\n\\n    emit Transfer(address(0), _msgSender(), _tTotal);\\n  }\\n\\n  function name() public pure returns (string memory) {\\n    return _name;\\n  }\\n\\n  function symbol() public pure returns (string memory) {\\n    return _symbol;\\n  }\\n\\n  function decimals() public pure returns (uint8) {\\n    return _decimals;\\n  }\\n\\n  function totalSupply() public pure override returns (uint256) {\\n    return _tTotal;\\n  }\\n\\n  function balanceOf(address account) public view override returns (uint256) {\\n    return tokenFromReflection(_rOwned[account]);\\n  }\\n\\n  function transfer(\\n    address recipient,\\n    uint256 amount\\n  ) public override returns (bool) {\\n    _transfer(_msgSender(), recipient, amount);\\n    return true;\\n  }\\n\\n  function allowance(\\n    address owner,\\n    address spender\\n  ) public view override returns (uint256) {\\n    return _allowances[owner][spender];\\n  }\\n\\n  function approve(\\n    address spender,\\n    uint256 amount\\n  ) public override returns (bool) {\\n    _approve(_msgSender(), spender, amount);\\n    return true;\\n  }\\n\\n  function transferFrom(\\n    address sender,\\n    address recipient,\\n    uint256 amount\\n  ) public override returns (bool) {\\n    _transfer(sender, recipient, amount);\\n    _approve(\\n      sender,\\n      _msgSender(),\\n      _allowances[sender][_msgSender()].sub(\\n        amount,\\n        \\\"ERC20: transfer amount exceeds allowance\\\"\\n      )\\n    );\\n    return true;\\n  }\\n\\n  function tokenFromReflection(uint256 rAmount) private view returns (uint256) {\\n    require(rAmount <= _rTotal, \\\"Amount must be less than total reflections\\\");\\n    uint256 currentRate = _getRate();\\n    return rAmount.div(currentRate);\\n  }\\n\\n  function removeAllFee() private {\\n    if (_redisFee == 0 && _taxFee == 0) return;\\n\\n    _previousredisFee = _redisFee;\\n    _previoustaxFee = _taxFee;\\n\\n    _redisFee = 0;\\n    _taxFee = 0;\\n  }\\n\\n  function restoreAllFee() private {\\n    _redisFee = _previousredisFee;\\n    _taxFee = _previoustaxFee;\\n  }\\n\\n  function _approve(address owner, address spender, uint256 amount) private {\\n    require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n    require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n    _allowances[owner][spender] = amount;\\n    emit Approval(owner, spender, amount);\\n  }\\n\\n  function _transfer(address from, address to, uint256 amount) private {\\n    require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n    require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n    require(amount > 0, \\\"Transfer amount must be greater than zero\\\");\\n\\n    if (from != owner() && to != owner()) {\\n      //Trade start check\\n      if (!tradingOpen) {\\n        require(\\n          from == owner(),\\n          \\\"TOKEN: This account cannot send tokens until trading is enabled\\\"\\n        );\\n      }\\n\\n      require(amount <= _maxTxAmount, \\\"TOKEN: Max Transaction Limit\\\");\\n      require(!bots[from] && !bots[to], \\\"TOKEN: Your account is blacklisted!\\\");\\n\\n      if (to != uniswapV2Pair) {\\n        require(\\n          balanceOf(to) + amount < _maxWalletSize,\\n          \\\"TOKEN: Balance exceeds wallet size!\\\"\\n        );\\n      }\\n\\n      uint256 contractTokenBalance = balanceOf(address(this));\\n      bool canSwap = contractTokenBalance >= _swapTokensAtAmount;\\n\\n      if (contractTokenBalance >= _maxTxAmount) {\\n        contractTokenBalance = _maxTxAmount;\\n      }\\n\\n      if (\\n        canSwap &&\\n        !inSwap &&\\n        from != uniswapV2Pair &&\\n        swapEnabled &&\\n        !_isExcludedFromFee[from] &&\\n        !_isExcludedFromFee[to]\\n      ) {\\n        swapTokensForEth(contractTokenBalance);\\n        uint256 contractETHBalance = address(this).balance;\\n        if (contractETHBalance > 0) {\\n          sendETHToFee(address(this).balance);\\n        }\\n      }\\n    }\\n\\n    bool takeFee = true;\\n\\n    //Transfer Tokens\\n    if (\\n      (_isExcludedFromFee[from] || _isExcludedFromFee[to]) ||\\n      (from != uniswapV2Pair && to != uniswapV2Pair)\\n    ) {\\n      takeFee = false;\\n    } else {\\n      //Set Fee for Buys\\n      if (from == uniswapV2Pair && to != address(uniswapV2Router)) {\\n        _redisFee = _redisFeeOnBuy;\\n        _taxFee = _taxFeeOnBuy;\\n      }\\n\\n      //Set Fee for Sells\\n      if (to == uniswapV2Pair && from != address(uniswapV2Router)) {\\n        _redisFee = _redisFeeOnSell;\\n        _taxFee = _taxFeeOnSell;\\n      }\\n    }\\n\\n    _tokenTransfer(from, to, amount, takeFee);\\n  }\\n\\n  function swapTokensForEth(uint256 tokenAmount) private lockTheSwap {\\n    address[] memory path = new address[](2);\\n    path[0] = address(this);\\n    path[1] = uniswapV2Router.WETH();\\n    _approve(address(this), address(uniswapV2Router), tokenAmount);\\n    uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(\\n      tokenAmount,\\n      0,\\n      path,\\n      address(this),\\n      block.timestamp\\n    );\\n  }\\n\\n  function sendETHToFee(uint256 amount) private {\\n    _marketingAddress.transfer(amount);\\n  }\\n\\n  function setTrading(bool _tradingOpen) public onlyOwner {\\n    tradingOpen = _tradingOpen;\\n  }\\n\\n  function manualswap() external {\\n    require(\\n      _msgSender() == _developmentAddress || _msgSender() == _marketingAddress\\n    );\\n    uint256 contractBalance = balanceOf(address(this));\\n    swapTokensForEth(contractBalance);\\n  }\\n\\n  function manualsend() external {\\n    require(\\n      _msgSender() == _developmentAddress || _msgSender() == _marketingAddress\\n    );\\n    uint256 contractETHBalance = address(this).balance;\\n    sendETHToFee(contractETHBalance);\\n  }\\n\\n  function blockBots(address[] memory bots_) public onlyOwner {\\n    for (uint256 i = 0; i < bots_.length; i++) {\\n      bots[bots_[i]] = true;\\n    }\\n  }\\n\\n  function unblockBot(address notbot) public onlyOwner {\\n    bots[notbot] = false;\\n  }\\n\\n  function _tokenTransfer(\\n    address sender,\\n    address recipient,\\n    uint256 amount,\\n    bool takeFee\\n  ) private {\\n    if (!takeFee) removeAllFee();\\n    _transferStandard(sender, recipient, amount);\\n    if (!takeFee) restoreAllFee();\\n  }\\n\\n  function _transferStandard(\\n    address sender,\\n    address recipient,\\n    uint256 tAmount\\n  ) private {\\n    (\\n      uint256 rAmount,\\n      uint256 rTransferAmount,\\n      uint256 rFee,\\n      uint256 tTransferAmount,\\n      uint256 tFee,\\n      uint256 tTeam\\n    ) = _getValues(tAmount);\\n    _rOwned[sender] = _rOwned[sender].sub(rAmount);\\n    _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount);\\n    _takeTeam(tTeam);\\n    _reflectFee(rFee, tFee);\\n    emit Transfer(sender, recipient, tTransferAmount);\\n  }\\n\\n  function _takeTeam(uint256 tTeam) private {\\n    uint256 currentRate = _getRate();\\n    uint256 rTeam = tTeam.mul(currentRate);\\n    _rOwned[address(this)] = _rOwned[address(this)].add(rTeam);\\n  }\\n\\n  function _reflectFee(uint256 rFee, uint256 tFee) private {\\n    _rTotal = _rTotal.sub(rFee);\\n    _tFeeTotal = _tFeeTotal.add(tFee);\\n  }\\n\\n  receive() external payable {}\\n\\n  function _getValues(\\n    uint256 tAmount\\n  )\\n    private\\n    view\\n    returns (uint256, uint256, uint256, uint256, uint256, uint256)\\n  {\\n    (uint256 tTransferAmount, uint256 tFee, uint256 tTeam) = _getTValues(\\n      tAmount,\\n      _redisFee,\\n      _taxFee\\n    );\\n    uint256 currentRate = _getRate();\\n    (uint256 rAmount, uint256 rTransferAmount, uint256 rFee) = _getRValues(\\n      tAmount,\\n      tFee,\\n      tTeam,\\n      currentRate\\n    );\\n    return (rAmount, rTransferAmount, rFee, tTransferAmount, tFee, tTeam);\\n  }\\n\\n  function _getTValues(\\n    uint256 tAmount,\\n    uint256 redisFee,\\n    uint256 taxFee\\n  ) private pure returns (uint256, uint256, uint256) {\\n    uint256 tFee = tAmount.mul(redisFee).div(100);\\n    uint256 tTeam = tAmount.mul(taxFee).div(100);\\n    uint256 tTransferAmount = tAmount.sub(tFee).sub(tTeam);\\n    return (tTransferAmount, tFee, tTeam);\\n  }\\n\\n  function _getRValues(\\n    uint256 tAmount,\\n    uint256 tFee,\\n    uint256 tTeam,\\n    uint256 currentRate\\n  ) private pure returns (uint256, uint256, uint256) {\\n    uint256 rAmount = tAmount.mul(currentRate);\\n    uint256 rFee = tFee.mul(currentRate);\\n    uint256 rTeam = tTeam.mul(currentRate);\\n    uint256 rTransferAmount = rAmount.sub(rFee).sub(rTeam);\\n    return (rAmount, rTransferAmount, rFee);\\n  }\\n\\n  function _getRate() private view returns (uint256) {\\n    (uint256 rSupply, uint256 tSupply) = _getCurrentSupply();\\n    return rSupply.div(tSupply);\\n  }\\n\\n  function _getCurrentSupply() private view returns (uint256, uint256) {\\n    uint256 rSupply = _rTotal;\\n    uint256 tSupply = _tTotal;\\n    if (rSupply < _rTotal.div(_tTotal)) return (_rTotal, _tTotal);\\n    return (rSupply, tSupply);\\n  }\\n\\n  function setFee(\\n    uint256 redisFeeOnBuy,\\n    uint256 redisFeeOnSell,\\n    uint256 taxFeeOnBuy,\\n    uint256 taxFeeOnSell\\n  ) public onlyOwner {\\n    _redisFeeOnBuy = redisFeeOnBuy;\\n    _redisFeeOnSell = redisFeeOnSell;\\n    _taxFeeOnBuy = taxFeeOnBuy;\\n    _taxFeeOnSell = taxFeeOnSell;\\n  }\\n\\n  function setMinSwapTokensThreshold(\\n    uint256 swapTokensAtAmount\\n  ) public onlyOwner {\\n    _swapTokensAtAmount = swapTokensAtAmount;\\n  }\\n\\n  function toggleSwap(bool _swapEnabled) public onlyOwner {\\n    swapEnabled = _swapEnabled;\\n  }\\n\\n  function setMaxTxnAmount(uint256 maxTxAmount) public onlyOwner {\\n    _maxTxAmount = maxTxAmount;\\n  }\\n\\n  function setMaxWalletSize(uint256 maxWalletSize) public onlyOwner {\\n    _maxWalletSize = maxWalletSize;\\n  }\\n\\n  function excludeMultipleAccountsFromFees(\\n    address[] calldata accounts,\\n    bool excluded\\n  ) public onlyOwner {\\n    for (uint256 i = 0; i < accounts.length; i++) {\\n      _isExcludedFromFee[accounts[i]] = excluded;\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0xc7c04df58e88bec3ec43e5d0bb5cc626b58bff3f3d7c63eead89fb6494ffd05c\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040526b02835cd9c6d6f2156b2400006000196200002091906200073d565b6000196200002f9190620007a4565b600655600060085560036009556000600a556003600b55600a54600c55600b54600d55600c54600e55600d54600f55738ee9b41620d01daf068019fee95d3ac855648b50601260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550738ee9b41620d01daf068019fee95d3ac855648b50601360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001601560146101000a81548160ff02191690831515021790555060006015806101000a81548160ff0219169083151502179055506001601560166101000a81548160ff0219169083151502179055506a066f0222d28f57292400006016556a066f0222d28f572924000060175569010f0cf064dd592000006018553480156200019157600080fd5b506000620001a4620006d360201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506006546002600062000259620006d360201b60201c565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000737a250d5630b4cf539739df2c5dacb4c659f2488d905080601460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200033d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000363919062000849565b73ffffffffffffffffffffffffffffffffffffffff1663c9c65396308373ffffffffffffffffffffffffffffffffffffffff1663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015620003cb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003f1919062000849565b6040518363ffffffff1660e01b8152600401620004109291906200088c565b6020604051808303816000875af115801562000430573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000456919062000849565b601560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160056000620004ac620006db60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506001600560003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600160056000601260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600160056000601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555062000659620006d360201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6b02835cd9c6d6f2156b240000604051620006c49190620008ca565b60405180910390a350620008e7565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006200074a8262000704565b9150620007578362000704565b9250826200076a57620007696200070e565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620007b18262000704565b9150620007be8362000704565b9250828203905081811115620007d957620007d862000775565b5b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200081182620007e4565b9050919050565b620008238162000804565b81146200082f57600080fd5b50565b600081519050620008438162000818565b92915050565b600060208284031215620008625762000861620007df565b5b6000620008728482850162000832565b91505092915050565b620008868162000804565b82525050565b6000604082019050620008a360008301856200087b565b620008b260208301846200087b565b9392505050565b620008c48162000704565b82525050565b6000602082019050620008e16000830184620008b9565b92915050565b613d9180620008f76000396000f3fe6080604052600436106101d05760003560e01c80637d1db4a5116100f7578063a2a957bb11610095578063c492f04611610064578063c492f0461461065c578063dd62ed3e14610685578063ea1644d5146106c2578063f2fde38b146106eb576101d7565b8063a2a957bb146105a2578063a9059cbb146105cb578063bfd7928414610608578063c3c8cd8014610645576101d7565b80638f70ccf7116100d15780638f70ccf7146104fa5780638f9a55c01461052357806395d89b411461054e57806398a5c31514610579576101d7565b80637d1db4a5146104675780637f2feddc146104925780638da5cb5b146104cf576101d7565b8063313ce5671161016f5780636fc3eaec1161013e5780636fc3eaec146103d357806370a08231146103ea578063715018a61461042757806374010ece1461043e576101d7565b8063313ce5671461032b57806349bd5a5e146103565780636b999053146103815780636d8aa8f8146103aa576101d7565b80631694505e116101ab5780631694505e1461026d57806318160ddd1461029857806323b872dd146102c35780632fd689e314610300576101d7565b8062b8cf2a146101dc57806306fdde0314610205578063095ea7b314610230576101d7565b366101d757005b600080fd5b3480156101e857600080fd5b5061020360048036038101906101fe9190612d61565b610714565b005b34801561021157600080fd5b5061021a61083e565b6040516102279190612e29565b60405180910390f35b34801561023c57600080fd5b5061025760048036038101906102529190612e81565b61087b565b6040516102649190612edc565b60405180910390f35b34801561027957600080fd5b50610282610899565b60405161028f9190612f56565b60405180910390f35b3480156102a457600080fd5b506102ad6108bf565b6040516102ba9190612f80565b60405180910390f35b3480156102cf57600080fd5b506102ea60048036038101906102e59190612f9b565b6108d3565b6040516102f79190612edc565b60405180910390f35b34801561030c57600080fd5b506103156109ac565b6040516103229190612f80565b60405180910390f35b34801561033757600080fd5b506103406109b2565b60405161034d919061300a565b60405180910390f35b34801561036257600080fd5b5061036b6109bb565b6040516103789190613034565b60405180910390f35b34801561038d57600080fd5b506103a860048036038101906103a3919061304f565b6109e1565b005b3480156103b657600080fd5b506103d160048036038101906103cc91906130a8565b610ad1565b005b3480156103df57600080fd5b506103e8610b83565b005b3480156103f657600080fd5b50610411600480360381019061040c919061304f565b610c54565b60405161041e9190612f80565b60405180910390f35b34801561043357600080fd5b5061043c610ca5565b005b34801561044a57600080fd5b50610465600480360381019061046091906130d5565b610df8565b005b34801561047357600080fd5b5061047c610e97565b6040516104899190612f80565b60405180910390f35b34801561049e57600080fd5b506104b960048036038101906104b4919061304f565b610e9d565b6040516104c69190612f80565b60405180910390f35b3480156104db57600080fd5b506104e4610eb5565b6040516104f19190613034565b60405180910390f35b34801561050657600080fd5b50610521600480360381019061051c91906130a8565b610ede565b005b34801561052f57600080fd5b50610538610f90565b6040516105459190612f80565b60405180910390f35b34801561055a57600080fd5b50610563610f96565b6040516105709190612e29565b60405180910390f35b34801561058557600080fd5b506105a0600480360381019061059b91906130d5565b610fd3565b005b3480156105ae57600080fd5b506105c960048036038101906105c49190613102565b611072565b005b3480156105d757600080fd5b506105f260048036038101906105ed9190612e81565b611129565b6040516105ff9190612edc565b60405180910390f35b34801561061457600080fd5b5061062f600480360381019061062a919061304f565b611147565b60405161063c9190612edc565b60405180910390f35b34801561065157600080fd5b5061065a611167565b005b34801561066857600080fd5b50610683600480360381019061067e91906131c4565b611240565b005b34801561069157600080fd5b506106ac60048036038101906106a79190613224565b61137a565b6040516106b99190612f80565b60405180910390f35b3480156106ce57600080fd5b506106e960048036038101906106e491906130d5565b611401565b005b3480156106f757600080fd5b50610712600480360381019061070d919061304f565b6114a0565b005b61071c611661565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146107a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a0906132b0565b60405180910390fd5b60005b815181101561083a576001601060008484815181106107ce576107cd6132d0565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555080806108329061332e565b9150506107ac565b5050565b60606040518060400160405280600681526020017f474d555353590000000000000000000000000000000000000000000000000000815250905090565b600061088f610888611661565b8484611669565b6001905092915050565b601460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006b02835cd9c6d6f2156b240000905090565b60006108e0848484611832565b6109a1846108ec611661565b61099c85604051806060016040528060288152602001613d3460289139600460008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610952611661565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546120b59092919063ffffffff16565b611669565b600190509392505050565b60185481565b60006012905090565b601560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6109e9611661565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610a76576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6d906132b0565b60405180910390fd5b6000601060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b610ad9611661565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610b66576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5d906132b0565b60405180910390fd5b80601560166101000a81548160ff02191690831515021790555050565b601260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610bc4611661565b73ffffffffffffffffffffffffffffffffffffffff161480610c3a5750601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610c22611661565b73ffffffffffffffffffffffffffffffffffffffff16145b610c4357600080fd5b6000479050610c5181612119565b50565b6000610c9e600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612185565b9050919050565b610cad611661565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610d3a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d31906132b0565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b610e00611661565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610e8d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e84906132b0565b60405180910390fd5b8060168190555050565b60165481565b60116020528060005260406000206000915090505481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610ee6611661565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610f73576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f6a906132b0565b60405180910390fd5b80601560146101000a81548160ff02191690831515021790555050565b60175481565b60606040518060400160405280600681526020017f474d555353590000000000000000000000000000000000000000000000000000815250905090565b610fdb611661565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611068576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161105f906132b0565b60405180910390fd5b8060188190555050565b61107a611661565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611107576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110fe906132b0565b60405180910390fd5b8360088190555082600a819055508160098190555080600b8190555050505050565b600061113d611136611661565b8484611832565b6001905092915050565b60106020528060005260406000206000915054906101000a900460ff1681565b601260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166111a8611661565b73ffffffffffffffffffffffffffffffffffffffff16148061121e5750601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611206611661565b73ffffffffffffffffffffffffffffffffffffffff16145b61122757600080fd5b600061123230610c54565b905061123d816121f3565b50565b611248611661565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146112d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112cc906132b0565b60405180910390fd5b60005b838390508110156113745781600560008686858181106112fb576112fa6132d0565b5b9050602002016020810190611310919061304f565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550808061136c9061332e565b9150506112d8565b50505050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b611409611661565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611496576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161148d906132b0565b60405180910390fd5b8060178190555050565b6114a8611661565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611535576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161152c906132b0565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036115a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161159b906133e8565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036116d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116cf9061347a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611747576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161173e9061350c565b60405180910390fd5b80600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516118259190612f80565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036118a1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118989061359e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611910576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161190790613630565b60405180910390fd5b60008111611953576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161194a906136c2565b60405180910390fd5b61195b610eb5565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156119c95750611999610eb5565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15611db457601560149054906101000a900460ff16611a58576119ea610eb5565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614611a57576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a4e90613754565b60405180910390fd5b5b601654811115611a9d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a94906137c0565b60405180910390fd5b601060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16158015611b415750601060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16155b611b80576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b7790613852565b60405180910390fd5b601560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614611c2d5760175481611be284610c54565b611bec9190613872565b10611c2c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c2390613918565b60405180910390fd5b5b6000611c3830610c54565b9050600060185482101590506016548210611c535760165491505b808015611c6b575060158054906101000a900460ff16155b8015611cc55750601560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614155b8015611cdd5750601560169054906101000a900460ff165b8015611d335750600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16155b8015611d895750600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16155b15611db157611d97826121f3565b60004790506000811115611daf57611dae47612119565b5b505b50505b600060019050600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1680611e5b5750600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b80611f0e5750601560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614158015611f0d5750601560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b5b15611f1c57600090506120a3565b601560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148015611fc75750601460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b15611fdf57600854600c81905550600954600d819055505b601560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614801561208a5750601460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614155b156120a257600a54600c81905550600b54600d819055505b5b6120af8484848461246a565b50505050565b60008383111582906120fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120f49190612e29565b60405180910390fd5b506000838561210c9190613938565b9050809150509392505050565b601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015612181573d6000803e3d6000fd5b5050565b60006006548211156121cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121c3906139de565b60405180910390fd5b60006121d6612497565b90506121eb81846124c290919063ffffffff16565b915050919050565b60016015806101000a81548160ff0219169083151502179055506000600267ffffffffffffffff81111561222a57612229612bc0565b5b6040519080825280602002602001820160405280156122585781602001602082028036833780820191505090505b50905030816000815181106122705761226f6132d0565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050601460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015612317573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061233b9190613a13565b8160018151811061234f5761234e6132d0565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506123b630601460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684611669565b601460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663791ac9478360008430426040518663ffffffff1660e01b815260040161241a959493929190613b39565b600060405180830381600087803b15801561243457600080fd5b505af1158015612448573d6000803e3d6000fd5b505050505060006015806101000a81548160ff02191690831515021790555050565b806124785761247761250c565b5b612483848484612549565b8061249157612490612714565b5b50505050565b60008060006124a4612728565b915091506124bb81836124c290919063ffffffff16565b9250505090565b600061250483836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250612793565b905092915050565b6000600c5414801561252057506000600d54145b61254757600c54600e81905550600d54600f819055506000600c819055506000600d819055505b565b60008060008060008061255b876127f6565b9550955095509550955095506125b986600260008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461285e90919063ffffffff16565b600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061264e85600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546128a890919063ffffffff16565b600260008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061269a81612906565b6126a484836129c3565b8773ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040516127019190612f80565b60405180910390a3505050505050505050565b600e54600c81905550600f54600d81905550565b6000806000600654905060006b02835cd9c6d6f2156b24000090506127646b02835cd9c6d6f2156b2400006006546124c290919063ffffffff16565b821015612786576006546b02835cd9c6d6f2156b24000093509350505061278f565b81819350935050505b9091565b600080831182906127da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016127d19190612e29565b60405180910390fd5b50600083856127e99190613bc2565b9050809150509392505050565b60008060008060008060008060006128138a600c54600d546129fd565b9250925092506000612823612497565b905060008060006128368e878787612a93565b9250925092508282828989899c509c509c509c509c509c505050505050505091939550919395565b60006128a083836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506120b5565b905092915050565b60008082846128b79190613872565b9050838110156128fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016128f390613c3f565b60405180910390fd5b8091505092915050565b6000612910612497565b905060006129278284612b1c90919063ffffffff16565b905061297b81600260003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546128a890919063ffffffff16565b600260003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505050565b6129d88260065461285e90919063ffffffff16565b6006819055506129f3816007546128a890919063ffffffff16565b6007819055505050565b600080600080612a296064612a1b888a612b1c90919063ffffffff16565b6124c290919063ffffffff16565b90506000612a536064612a45888b612b1c90919063ffffffff16565b6124c290919063ffffffff16565b90506000612a7c82612a6e858c61285e90919063ffffffff16565b61285e90919063ffffffff16565b905080838395509550955050505093509350939050565b600080600080612aac8589612b1c90919063ffffffff16565b90506000612ac38689612b1c90919063ffffffff16565b90506000612ada8789612b1c90919063ffffffff16565b90506000612b0382612af5858761285e90919063ffffffff16565b61285e90919063ffffffff16565b9050838184965096509650505050509450945094915050565b6000808303612b2e5760009050612b90565b60008284612b3c9190613c5f565b9050828482612b4b9190613bc2565b14612b8b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612b8290613d13565b60405180910390fd5b809150505b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b612bf882612baf565b810181811067ffffffffffffffff82111715612c1757612c16612bc0565b5b80604052505050565b6000612c2a612b96565b9050612c368282612bef565b919050565b600067ffffffffffffffff821115612c5657612c55612bc0565b5b602082029050602081019050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612c9782612c6c565b9050919050565b612ca781612c8c565b8114612cb257600080fd5b50565b600081359050612cc481612c9e565b92915050565b6000612cdd612cd884612c3b565b612c20565b90508083825260208201905060208402830185811115612d0057612cff612c67565b5b835b81811015612d295780612d158882612cb5565b845260208401935050602081019050612d02565b5050509392505050565b600082601f830112612d4857612d47612baa565b5b8135612d58848260208601612cca565b91505092915050565b600060208284031215612d7757612d76612ba0565b5b600082013567ffffffffffffffff811115612d9557612d94612ba5565b5b612da184828501612d33565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612de4578082015181840152602081019050612dc9565b60008484015250505050565b6000612dfb82612daa565b612e058185612db5565b9350612e15818560208601612dc6565b612e1e81612baf565b840191505092915050565b60006020820190508181036000830152612e438184612df0565b905092915050565b6000819050919050565b612e5e81612e4b565b8114612e6957600080fd5b50565b600081359050612e7b81612e55565b92915050565b60008060408385031215612e9857612e97612ba0565b5b6000612ea685828601612cb5565b9250506020612eb785828601612e6c565b9150509250929050565b60008115159050919050565b612ed681612ec1565b82525050565b6000602082019050612ef16000830184612ecd565b92915050565b6000819050919050565b6000612f1c612f17612f1284612c6c565b612ef7565b612c6c565b9050919050565b6000612f2e82612f01565b9050919050565b6000612f4082612f23565b9050919050565b612f5081612f35565b82525050565b6000602082019050612f6b6000830184612f47565b92915050565b612f7a81612e4b565b82525050565b6000602082019050612f956000830184612f71565b92915050565b600080600060608486031215612fb457612fb3612ba0565b5b6000612fc286828701612cb5565b9350506020612fd386828701612cb5565b9250506040612fe486828701612e6c565b9150509250925092565b600060ff82169050919050565b61300481612fee565b82525050565b600060208201905061301f6000830184612ffb565b92915050565b61302e81612c8c565b82525050565b60006020820190506130496000830184613025565b92915050565b60006020828403121561306557613064612ba0565b5b600061307384828501612cb5565b91505092915050565b61308581612ec1565b811461309057600080fd5b50565b6000813590506130a28161307c565b92915050565b6000602082840312156130be576130bd612ba0565b5b60006130cc84828501613093565b91505092915050565b6000602082840312156130eb576130ea612ba0565b5b60006130f984828501612e6c565b91505092915050565b6000806000806080858703121561311c5761311b612ba0565b5b600061312a87828801612e6c565b945050602061313b87828801612e6c565b935050604061314c87828801612e6c565b925050606061315d87828801612e6c565b91505092959194509250565b600080fd5b60008083601f84011261318457613183612baa565b5b8235905067ffffffffffffffff8111156131a1576131a0613169565b5b6020830191508360208202830111156131bd576131bc612c67565b5b9250929050565b6000806000604084860312156131dd576131dc612ba0565b5b600084013567ffffffffffffffff8111156131fb576131fa612ba5565b5b6132078682870161316e565b9350935050602061321a86828701613093565b9150509250925092565b6000806040838503121561323b5761323a612ba0565b5b600061324985828601612cb5565b925050602061325a85828601612cb5565b9150509250929050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061329a602083612db5565b91506132a582613264565b602082019050919050565b600060208201905081810360008301526132c98161328d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061333982612e4b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361336b5761336a6132ff565b5b600182019050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006133d2602683612db5565b91506133dd82613376565b604082019050919050565b60006020820190508181036000830152613401816133c5565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000613464602483612db5565b915061346f82613408565b604082019050919050565b6000602082019050818103600083015261349381613457565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b60006134f6602283612db5565b91506135018261349a565b604082019050919050565b60006020820190508181036000830152613525816134e9565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000613588602583612db5565b91506135938261352c565b604082019050919050565b600060208201905081810360008301526135b78161357b565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b600061361a602383612db5565b9150613625826135be565b604082019050919050565b600060208201905081810360008301526136498161360d565b9050919050565b7f5472616e7366657220616d6f756e74206d75737420626520677265617465722060008201527f7468616e207a65726f0000000000000000000000000000000000000000000000602082015250565b60006136ac602983612db5565b91506136b782613650565b604082019050919050565b600060208201905081810360008301526136db8161369f565b9050919050565b7f544f4b454e3a2054686973206163636f756e742063616e6e6f742073656e642060008201527f746f6b656e7320756e74696c2074726164696e6720697320656e61626c656400602082015250565b600061373e603f83612db5565b9150613749826136e2565b604082019050919050565b6000602082019050818103600083015261376d81613731565b9050919050565b7f544f4b454e3a204d6178205472616e73616374696f6e204c696d697400000000600082015250565b60006137aa601c83612db5565b91506137b582613774565b602082019050919050565b600060208201905081810360008301526137d98161379d565b9050919050565b7f544f4b454e3a20596f7572206163636f756e7420697320626c61636b6c69737460008201527f6564210000000000000000000000000000000000000000000000000000000000602082015250565b600061383c602383612db5565b9150613847826137e0565b604082019050919050565b6000602082019050818103600083015261386b8161382f565b9050919050565b600061387d82612e4b565b915061388883612e4b565b92508282019050808211156138a05761389f6132ff565b5b92915050565b7f544f4b454e3a2042616c616e636520657863656564732077616c6c657420736960008201527f7a65210000000000000000000000000000000000000000000000000000000000602082015250565b6000613902602383612db5565b915061390d826138a6565b604082019050919050565b60006020820190508181036000830152613931816138f5565b9050919050565b600061394382612e4b565b915061394e83612e4b565b9250828203905081811115613966576139656132ff565b5b92915050565b7f416d6f756e74206d757374206265206c657373207468616e20746f74616c207260008201527f65666c656374696f6e7300000000000000000000000000000000000000000000602082015250565b60006139c8602a83612db5565b91506139d38261396c565b604082019050919050565b600060208201905081810360008301526139f7816139bb565b9050919050565b600081519050613a0d81612c9e565b92915050565b600060208284031215613a2957613a28612ba0565b5b6000613a37848285016139fe565b91505092915050565b6000819050919050565b6000613a65613a60613a5b84613a40565b612ef7565b612e4b565b9050919050565b613a7581613a4a565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b613ab081612c8c565b82525050565b6000613ac28383613aa7565b60208301905092915050565b6000602082019050919050565b6000613ae682613a7b565b613af08185613a86565b9350613afb83613a97565b8060005b83811015613b2c578151613b138882613ab6565b9750613b1e83613ace565b925050600181019050613aff565b5085935050505092915050565b600060a082019050613b4e6000830188612f71565b613b5b6020830187613a6c565b8181036040830152613b6d8186613adb565b9050613b7c6060830185613025565b613b896080830184612f71565b9695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000613bcd82612e4b565b9150613bd883612e4b565b925082613be857613be7613b93565b5b828204905092915050565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000600082015250565b6000613c29601b83612db5565b9150613c3482613bf3565b602082019050919050565b60006020820190508181036000830152613c5881613c1c565b9050919050565b6000613c6a82612e4b565b9150613c7583612e4b565b9250828202613c8381612e4b565b91508282048414831517613c9a57613c996132ff565b5b5092915050565b7f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60008201527f7700000000000000000000000000000000000000000000000000000000000000602082015250565b6000613cfd602183612db5565b9150613d0882613ca1565b604082019050919050565b60006020820190508181036000830152613d2c81613cf0565b905091905056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a264697066735822122020c162a728815efecea11324033b3a324edfff15c29ce770538cb328aaa8394564736f6c63430008120033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 2241,
        "contract": "contracts/GMUSSY.sol:GMUSSY",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 2243,
        "contract": "contracts/GMUSSY.sol:GMUSSY",
        "label": "_previousOwner",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 2563,
        "contract": "contracts/GMUSSY.sol:GMUSSY",
        "label": "_rOwned",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 2567,
        "contract": "contracts/GMUSSY.sol:GMUSSY",
        "label": "_tOwned",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 2573,
        "contract": "contracts/GMUSSY.sol:GMUSSY",
        "label": "_allowances",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 2577,
        "contract": "contracts/GMUSSY.sol:GMUSSY",
        "label": "_isExcludedFromFee",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 2600,
        "contract": "contracts/GMUSSY.sol:GMUSSY",
        "label": "_rTotal",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 2602,
        "contract": "contracts/GMUSSY.sol:GMUSSY",
        "label": "_tFeeTotal",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 2605,
        "contract": "contracts/GMUSSY.sol:GMUSSY",
        "label": "_redisFeeOnBuy",
        "offset": 0,
        "slot": "8",
        "type": "t_uint256"
      },
      {
        "astId": 2608,
        "contract": "contracts/GMUSSY.sol:GMUSSY",
        "label": "_taxFeeOnBuy",
        "offset": 0,
        "slot": "9",
        "type": "t_uint256"
      },
      {
        "astId": 2611,
        "contract": "contracts/GMUSSY.sol:GMUSSY",
        "label": "_redisFeeOnSell",
        "offset": 0,
        "slot": "10",
        "type": "t_uint256"
      },
      {
        "astId": 2614,
        "contract": "contracts/GMUSSY.sol:GMUSSY",
        "label": "_taxFeeOnSell",
        "offset": 0,
        "slot": "11",
        "type": "t_uint256"
      },
      {
        "astId": 2617,
        "contract": "contracts/GMUSSY.sol:GMUSSY",
        "label": "_redisFee",
        "offset": 0,
        "slot": "12",
        "type": "t_uint256"
      },
      {
        "astId": 2620,
        "contract": "contracts/GMUSSY.sol:GMUSSY",
        "label": "_taxFee",
        "offset": 0,
        "slot": "13",
        "type": "t_uint256"
      },
      {
        "astId": 2623,
        "contract": "contracts/GMUSSY.sol:GMUSSY",
        "label": "_previousredisFee",
        "offset": 0,
        "slot": "14",
        "type": "t_uint256"
      },
      {
        "astId": 2626,
        "contract": "contracts/GMUSSY.sol:GMUSSY",
        "label": "_previoustaxFee",
        "offset": 0,
        "slot": "15",
        "type": "t_uint256"
      },
      {
        "astId": 2630,
        "contract": "contracts/GMUSSY.sol:GMUSSY",
        "label": "bots",
        "offset": 0,
        "slot": "16",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 2634,
        "contract": "contracts/GMUSSY.sol:GMUSSY",
        "label": "_buyMap",
        "offset": 0,
        "slot": "17",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 2640,
        "contract": "contracts/GMUSSY.sol:GMUSSY",
        "label": "_developmentAddress",
        "offset": 0,
        "slot": "18",
        "type": "t_address_payable"
      },
      {
        "astId": 2646,
        "contract": "contracts/GMUSSY.sol:GMUSSY",
        "label": "_marketingAddress",
        "offset": 0,
        "slot": "19",
        "type": "t_address_payable"
      },
      {
        "astId": 2649,
        "contract": "contracts/GMUSSY.sol:GMUSSY",
        "label": "uniswapV2Router",
        "offset": 0,
        "slot": "20",
        "type": "t_contract(IUniswapV2Router02)2541"
      },
      {
        "astId": 2651,
        "contract": "contracts/GMUSSY.sol:GMUSSY",
        "label": "uniswapV2Pair",
        "offset": 0,
        "slot": "21",
        "type": "t_address"
      },
      {
        "astId": 2654,
        "contract": "contracts/GMUSSY.sol:GMUSSY",
        "label": "tradingOpen",
        "offset": 20,
        "slot": "21",
        "type": "t_bool"
      },
      {
        "astId": 2657,
        "contract": "contracts/GMUSSY.sol:GMUSSY",
        "label": "inSwap",
        "offset": 21,
        "slot": "21",
        "type": "t_bool"
      },
      {
        "astId": 2660,
        "contract": "contracts/GMUSSY.sol:GMUSSY",
        "label": "swapEnabled",
        "offset": 22,
        "slot": "21",
        "type": "t_bool"
      },
      {
        "astId": 2667,
        "contract": "contracts/GMUSSY.sol:GMUSSY",
        "label": "_maxTxAmount",
        "offset": 0,
        "slot": "22",
        "type": "t_uint256"
      },
      {
        "astId": 2674,
        "contract": "contracts/GMUSSY.sol:GMUSSY",
        "label": "_maxWalletSize",
        "offset": 0,
        "slot": "23",
        "type": "t_uint256"
      },
      {
        "astId": 2681,
        "contract": "contracts/GMUSSY.sol:GMUSSY",
        "label": "_swapTokensAtAmount",
        "offset": 0,
        "slot": "24",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IUniswapV2Router02)2541": {
        "encoding": "inplace",
        "label": "contract IUniswapV2Router02",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}