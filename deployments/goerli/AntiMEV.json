{
  "address": "0x3b0e075B6996A58265b3321cD2fb5D83F9F6d508",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isBot",
          "type": "bool"
        }
      ],
      "name": "BotAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Burned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "mineBlocks",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gasDelta",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "maxSample",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "avgGasPrice",
          "type": "uint256"
        }
      ],
      "name": "MEVUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isVIP",
          "type": "bool"
        }
      ],
      "name": "VIPAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "maxTx",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "maxWallet",
          "type": "uint256"
        }
      ],
      "name": "VarsUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "devWallet",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "burnWallet",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "airdropWallet",
          "type": "address"
        }
      ],
      "name": "WalletsUpdated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "avgGasPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "bots",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "detectGasBribe",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "detectMEV",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gasCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gasDelta",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isVIP",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxSample",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxTx",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxWallet",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mineBlocks",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_address",
          "type": "address[]"
        },
        {
          "internalType": "bool[]",
          "name": "_isBot",
          "type": "bool[]"
        }
      ],
      "name": "setBots",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_detectMEV",
          "type": "bool"
        }
      ],
      "name": "setDetectMEV",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_mineBlocks",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_gasDelta",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxSample",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_avgGasPrice",
          "type": "uint256"
        }
      ],
      "name": "setMEV",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_uniswapV2Pair",
          "type": "address"
        }
      ],
      "name": "setUniswapV2Pair",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isVIP",
          "type": "bool"
        }
      ],
      "name": "setVIP",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_maxTx",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxWallet",
          "type": "uint256"
        }
      ],
      "name": "setVars",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_devWallet",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_burnWallet",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_airdropWallet",
          "type": "address"
        }
      ],
      "name": "setWallets",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "uniswapV2Pair",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "uniswapV2Router",
      "outputs": [
        {
          "internalType": "contract IUniswapV2Router02",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xb9c62bb5e6c052c2fae771bdb45bfe40b6c07e33a9d58af380b113b6f4216c99",
  "receipt": {
    "to": null,
    "from": "0x5b3eC3A39403202A9C5a9e3496FbB3793B244B44",
    "contractAddress": "0x3b0e075B6996A58265b3321cD2fb5D83F9F6d508",
    "transactionIndex": 0,
    "gasUsed": "4593629",
    "logsBloom": "0x00000008000000000000000000100000000000000000000000810000000000000000000000080000000000000402000000000000000000000000000000000000000000000000004000000008000000000001000001000100000000000040000000000000820400000000000000008c00000000000000000000000010000000400000000800000000004000000000100000000000000000000000000000000000000002000800000000000000000200000000000000000004000000000080000100000402000000000000000000400040000000000800000000000000000020000000000000000020080000000000000000000000000000100010000000004000",
    "blockHash": "0x59cd49be0b92e46c16807b86033b78f63c19dd463636f3ceb84e350022843e82",
    "transactionHash": "0xb9c62bb5e6c052c2fae771bdb45bfe40b6c07e33a9d58af380b113b6f4216c99",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 9258612,
        "transactionHash": "0xb9c62bb5e6c052c2fae771bdb45bfe40b6c07e33a9d58af380b113b6f4216c99",
        "address": "0x3b0e075B6996A58265b3321cD2fb5D83F9F6d508",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000005b3ec3a39403202a9c5a9e3496fbb3793b244b44"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x59cd49be0b92e46c16807b86033b78f63c19dd463636f3ceb84e350022843e82"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 9258612,
        "transactionHash": "0xb9c62bb5e6c052c2fae771bdb45bfe40b6c07e33a9d58af380b113b6f4216c99",
        "address": "0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f",
        "topics": [
          "0x0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9",
          "0x0000000000000000000000003b0e075b6996a58265b3321cd2fb5d83f9f6d508",
          "0x000000000000000000000000b4fbf271143f4fbf7b91a5ded31805e42b2208d6"
        ],
        "data": "0x000000000000000000000000420858e0c42daea3ec6fc076f1a2ccf922d7abc2000000000000000000000000000000000000000000000000000000000000fc4e",
        "logIndex": 1,
        "blockHash": "0x59cd49be0b92e46c16807b86033b78f63c19dd463636f3ceb84e350022843e82"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 9258612,
        "transactionHash": "0xb9c62bb5e6c052c2fae771bdb45bfe40b6c07e33a9d58af380b113b6f4216c99",
        "address": "0x3b0e075B6996A58265b3321cD2fb5D83F9F6d508",
        "topics": [
          "0xda633a71264a27905632c474143536c3964c692d30dbf9384cf1f2e87659d64c",
          "0x0000000000000000000000005b3ec3a39403202a9c5a9e3496fbb3793b244b44"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000001",
        "logIndex": 2,
        "blockHash": "0x59cd49be0b92e46c16807b86033b78f63c19dd463636f3ceb84e350022843e82"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 9258612,
        "transactionHash": "0xb9c62bb5e6c052c2fae771bdb45bfe40b6c07e33a9d58af380b113b6f4216c99",
        "address": "0x3b0e075B6996A58265b3321cD2fb5D83F9F6d508",
        "topics": [
          "0xda633a71264a27905632c474143536c3964c692d30dbf9384cf1f2e87659d64c",
          "0x0000000000000000000000003b0e075b6996a58265b3321cd2fb5d83f9f6d508"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000001",
        "logIndex": 3,
        "blockHash": "0x59cd49be0b92e46c16807b86033b78f63c19dd463636f3ceb84e350022843e82"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 9258612,
        "transactionHash": "0xb9c62bb5e6c052c2fae771bdb45bfe40b6c07e33a9d58af380b113b6f4216c99",
        "address": "0x3b0e075B6996A58265b3321cD2fb5D83F9F6d508",
        "topics": [
          "0xda633a71264a27905632c474143536c3964c692d30dbf9384cf1f2e87659d64c",
          "0x000000000000000000000000c2657176e213ddf18646efce08f36d656abe3396"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000001",
        "logIndex": 4,
        "blockHash": "0x59cd49be0b92e46c16807b86033b78f63c19dd463636f3ceb84e350022843e82"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 9258612,
        "transactionHash": "0xb9c62bb5e6c052c2fae771bdb45bfe40b6c07e33a9d58af380b113b6f4216c99",
        "address": "0x3b0e075B6996A58265b3321cD2fb5D83F9F6d508",
        "topics": [
          "0xda633a71264a27905632c474143536c3964c692d30dbf9384cf1f2e87659d64c",
          "0x0000000000000000000000008b30998a9492610f074784aed7afdd682b23b416"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000001",
        "logIndex": 5,
        "blockHash": "0x59cd49be0b92e46c16807b86033b78f63c19dd463636f3ceb84e350022843e82"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 9258612,
        "transactionHash": "0xb9c62bb5e6c052c2fae771bdb45bfe40b6c07e33a9d58af380b113b6f4216c99",
        "address": "0x3b0e075B6996A58265b3321cD2fb5D83F9F6d508",
        "topics": [
          "0xda633a71264a27905632c474143536c3964c692d30dbf9384cf1f2e87659d64c",
          "0x0000000000000000000000005b3ec3a39403202a9c5a9e3496fbb3793b244b44"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000001",
        "logIndex": 6,
        "blockHash": "0x59cd49be0b92e46c16807b86033b78f63c19dd463636f3ceb84e350022843e82"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 9258612,
        "transactionHash": "0xb9c62bb5e6c052c2fae771bdb45bfe40b6c07e33a9d58af380b113b6f4216c99",
        "address": "0x3b0e075B6996A58265b3321cD2fb5D83F9F6d508",
        "topics": [
          "0xda633a71264a27905632c474143536c3964c692d30dbf9384cf1f2e87659d64c",
          "0x000000000000000000000000420858e0c42daea3ec6fc076f1a2ccf922d7abc2"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000001",
        "logIndex": 7,
        "blockHash": "0x59cd49be0b92e46c16807b86033b78f63c19dd463636f3ceb84e350022843e82"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 9258612,
        "transactionHash": "0xb9c62bb5e6c052c2fae771bdb45bfe40b6c07e33a9d58af380b113b6f4216c99",
        "address": "0x3b0e075B6996A58265b3321cD2fb5D83F9F6d508",
        "topics": [
          "0xda633a71264a27905632c474143536c3964c692d30dbf9384cf1f2e87659d64c",
          "0x0000000000000000000000007a250d5630b4cf539739df2c5dacb4c659f2488d"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000001",
        "logIndex": 8,
        "blockHash": "0x59cd49be0b92e46c16807b86033b78f63c19dd463636f3ceb84e350022843e82"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 9258612,
        "transactionHash": "0xb9c62bb5e6c052c2fae771bdb45bfe40b6c07e33a9d58af380b113b6f4216c99",
        "address": "0x3b0e075B6996A58265b3321cD2fb5D83F9F6d508",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000005b3ec3a39403202a9c5a9e3496fbb3793b244b44"
        ],
        "data": "0x0000000000000000000000000000000000000000034476d6e9e54af9f7aa0000",
        "logIndex": 9,
        "blockHash": "0x59cd49be0b92e46c16807b86033b78f63c19dd463636f3ceb84e350022843e82"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 9258612,
        "transactionHash": "0xb9c62bb5e6c052c2fae771bdb45bfe40b6c07e33a9d58af380b113b6f4216c99",
        "address": "0x3b0e075B6996A58265b3321cD2fb5D83F9F6d508",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000c2657176e213ddf18646efce08f36d656abe3396"
        ],
        "data": "0x000000000000000000000000000000000000000000252d1a9e4e751c2d240000",
        "logIndex": 10,
        "blockHash": "0x59cd49be0b92e46c16807b86033b78f63c19dd463636f3ceb84e350022843e82"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 9258612,
        "transactionHash": "0xb9c62bb5e6c052c2fae771bdb45bfe40b6c07e33a9d58af380b113b6f4216c99",
        "address": "0x3b0e075B6996A58265b3321cD2fb5D83F9F6d508",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000008b30998a9492610f074784aed7afdd682b23b416"
        ],
        "data": "0x0000000000000000000000000000000000000000001be1d3f6bad7d521db0000",
        "logIndex": 11,
        "blockHash": "0x59cd49be0b92e46c16807b86033b78f63c19dd463636f3ceb84e350022843e82"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 9258612,
        "transactionHash": "0xb9c62bb5e6c052c2fae771bdb45bfe40b6c07e33a9d58af380b113b6f4216c99",
        "address": "0x3b0e075B6996A58265b3321cD2fb5D83F9F6d508",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000005b3ec3a39403202a9c5a9e3496fbb3793b244b44"
        ],
        "data": "0x0000000000000000000000000000000000000000001be1d3f6bad7d521db0000",
        "logIndex": 12,
        "blockHash": "0x59cd49be0b92e46c16807b86033b78f63c19dd463636f3ceb84e350022843e82"
      }
    ],
    "blockNumber": 9258612,
    "cumulativeGasUsed": "4593629",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 5,
  "solcInputHash": "34ef97afd98e24dedd59fe78f10696d6",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isBot\",\"type\":\"bool\"}],\"name\":\"BotAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Burned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mineBlocks\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gasDelta\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxSample\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"avgGasPrice\",\"type\":\"uint256\"}],\"name\":\"MEVUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isVIP\",\"type\":\"bool\"}],\"name\":\"VIPAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxTx\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxWallet\",\"type\":\"uint256\"}],\"name\":\"VarsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"devWallet\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"burnWallet\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"airdropWallet\",\"type\":\"address\"}],\"name\":\"WalletsUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"avgGasPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"bots\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"detectGasBribe\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"detectMEV\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gasCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gasDelta\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isVIP\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSample\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTx\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxWallet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mineBlocks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_address\",\"type\":\"address[]\"},{\"internalType\":\"bool[]\",\"name\":\"_isBot\",\"type\":\"bool[]\"}],\"name\":\"setBots\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_detectMEV\",\"type\":\"bool\"}],\"name\":\"setDetectMEV\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_mineBlocks\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_gasDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxSample\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_avgGasPrice\",\"type\":\"uint256\"}],\"name\":\"setMEV\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_uniswapV2Pair\",\"type\":\"address\"}],\"name\":\"setUniswapV2Pair\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isVIP\",\"type\":\"bool\"}],\"name\":\"setVIP\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxTx\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxWallet\",\"type\":\"uint256\"}],\"name\":\"setVars\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_devWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_burnWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_airdropWallet\",\"type\":\"address\"}],\"name\":\"setWallets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Pair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Router\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router02\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AntiMEV.sol\":\"AntiMEV\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/AntiMEV.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n/*\\n  The Anti-MEV token: https://antimev.io\\n\\n  Twitter: https://twitter.com/Anti_MEV\\n\\n  Telegram: https://t.me/antimev\\n*/\\n//import \\\"hardhat/console.sol\\\";\\n\\npragma solidity ^0.8.17;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n  function _msgSender() internal view virtual returns (address) {\\n    return msg.sender;\\n  }\\n\\n  function _msgData() internal view virtual returns (bytes calldata) {\\n    return msg.data;\\n  }\\n}\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n  address private _owner;\\n\\n  event OwnershipTransferred(\\n    address indexed previousOwner,\\n    address indexed newOwner\\n  );\\n\\n  /**\\n   * @dev Initializes the contract setting the deployer as the initial owner.\\n   */\\n  constructor() {\\n    _transferOwnership(_msgSender());\\n  }\\n\\n  /**\\n   * @dev Throws if called by any account other than the owner.\\n   */\\n  modifier onlyOwner() {\\n    _checkOwner();\\n    _;\\n  }\\n\\n  /**\\n   * @dev Returns the address of the current owner.\\n   */\\n  function owner() public view virtual returns (address) {\\n    return _owner;\\n  }\\n\\n  /**\\n   * @dev Throws if the sender is not the owner.\\n   */\\n  function _checkOwner() internal view virtual {\\n    require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n  }\\n\\n  /**\\n   * @dev Leaves the contract without owner. It will not be possible to call\\n   * `onlyOwner` functions. Can only be called by the current owner.\\n   *\\n   * NOTE: Renouncing ownership will leave the contract without an owner,\\n   * thereby disabling any functionality that is only available to the owner.\\n   */\\n  function renounceOwnership() public virtual onlyOwner {\\n    _transferOwnership(address(0));\\n  }\\n\\n  /**\\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n   * Can only be called by the current owner.\\n   */\\n  function transferOwnership(address newOwner) public virtual onlyOwner {\\n    require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n    _transferOwnership(newOwner);\\n  }\\n\\n  /**\\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n   * Internal function without access restriction.\\n   */\\n  function _transferOwnership(address newOwner) internal virtual {\\n    address oldOwner = _owner;\\n    _owner = newOwner;\\n    emit OwnershipTransferred(oldOwner, newOwner);\\n  }\\n}\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n  /**\\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n   * another (`to`).\\n   *\\n   * Note that `value` may be zero.\\n   */\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n  /**\\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n   * a call to {approve}. `value` is the new allowance.\\n   */\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n  /**\\n   * @dev Returns the amount of tokens in existence.\\n   */\\n  function totalSupply() external view returns (uint256);\\n\\n  /**\\n   * @dev Returns the amount of tokens owned by `account`.\\n   */\\n  function balanceOf(address account) external view returns (uint256);\\n\\n  /**\\n   * @dev Moves `amount` tokens from the caller's account to `to`.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * Emits a {Transfer} event.\\n   */\\n  function transfer(address to, uint256 amount) external returns (bool);\\n\\n  /**\\n   * @dev Returns the remaining number of tokens that `spender` will be\\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n   * zero by default.\\n   *\\n   * This value changes when {approve} or {transferFrom} are called.\\n   */\\n  function allowance(\\n    address owner,\\n    address spender\\n  ) external view returns (uint256);\\n\\n  /**\\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n   * that someone may use both the old and the new allowance by unfortunate\\n   * transaction ordering. One possible solution to mitigate this race\\n   * condition is to first reduce the spender's allowance to 0 and set the\\n   * desired value afterwards:\\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n   *\\n   * Emits an {Approval} event.\\n   */\\n  function approve(address spender, uint256 amount) external returns (bool);\\n\\n  /**\\n   * @dev Moves `amount` tokens from `from` to `to` using the\\n   * allowance mechanism. `amount` is then deducted from the caller's\\n   * allowance.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * Emits a {Transfer} event.\\n   */\\n  function transferFrom(\\n    address from,\\n    address to,\\n    uint256 amount\\n  ) external returns (bool);\\n}\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n  /**\\n   * @dev Returns the name of the token.\\n   */\\n  function name() external view returns (string memory);\\n\\n  /**\\n   * @dev Returns the symbol of the token.\\n   */\\n  function symbol() external view returns (string memory);\\n\\n  /**\\n   * @dev Returns the decimals places of the token.\\n   */\\n  function decimals() external view returns (uint8);\\n}\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n  /**\\n   * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n   *\\n   * _Available since v3.4._\\n   */\\n  function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n    unchecked {\\n      uint256 c = a + b;\\n      if (c < a) return (false, 0);\\n      return (true, c);\\n    }\\n  }\\n\\n  /**\\n   * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n   *\\n   * _Available since v3.4._\\n   */\\n  function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n    unchecked {\\n      if (b > a) return (false, 0);\\n      return (true, a - b);\\n    }\\n  }\\n\\n  /**\\n   * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n   *\\n   * _Available since v3.4._\\n   */\\n  function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n    unchecked {\\n      // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n      // benefit is lost if 'b' is also tested.\\n      // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n      if (a == 0) return (true, 0);\\n      uint256 c = a * b;\\n      if (c / a != b) return (false, 0);\\n      return (true, c);\\n    }\\n  }\\n\\n  /**\\n   * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n   *\\n   * _Available since v3.4._\\n   */\\n  function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n    unchecked {\\n      if (b == 0) return (false, 0);\\n      return (true, a / b);\\n    }\\n  }\\n\\n  /**\\n   * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n   *\\n   * _Available since v3.4._\\n   */\\n  function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n    unchecked {\\n      if (b == 0) return (false, 0);\\n      return (true, a % b);\\n    }\\n  }\\n\\n  /**\\n   * @dev Returns the addition of two unsigned integers, reverting on\\n   * overflow.\\n   *\\n   * Counterpart to Solidity's `+` operator.\\n   *\\n   * Requirements:\\n   *\\n   * - Addition cannot overflow.\\n   */\\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return a + b;\\n  }\\n\\n  /**\\n   * @dev Returns the subtraction of two unsigned integers, reverting on\\n   * overflow (when the result is negative).\\n   *\\n   * Counterpart to Solidity's `-` operator.\\n   *\\n   * Requirements:\\n   *\\n   * - Subtraction cannot overflow.\\n   */\\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return a - b;\\n  }\\n\\n  /**\\n   * @dev Returns the multiplication of two unsigned integers, reverting on\\n   * overflow.\\n   *\\n   * Counterpart to Solidity's `*` operator.\\n   *\\n   * Requirements:\\n   *\\n   * - Multiplication cannot overflow.\\n   */\\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return a * b;\\n  }\\n\\n  /**\\n   * @dev Returns the integer division of two unsigned integers, reverting on\\n   * division by zero. The result is rounded towards zero.\\n   *\\n   * Counterpart to Solidity's `/` operator.\\n   *\\n   * Requirements:\\n   *\\n   * - The divisor cannot be zero.\\n   */\\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return a / b;\\n  }\\n\\n  /**\\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n   * reverting when dividing by zero.\\n   *\\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\\n   * invalid opcode to revert (consuming all remaining gas).\\n   *\\n   * Requirements:\\n   *\\n   * - The divisor cannot be zero.\\n   */\\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return a % b;\\n  }\\n\\n  /**\\n   * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n   * overflow (when the result is negative).\\n   *\\n   * CAUTION: This function is deprecated because it requires allocating memory for the error\\n   * message unnecessarily. For custom revert reasons use {trySub}.\\n   *\\n   * Counterpart to Solidity's `-` operator.\\n   *\\n   * Requirements:\\n   *\\n   * - Subtraction cannot overflow.\\n   */\\n  function sub(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    unchecked {\\n      require(b <= a, errorMessage);\\n      return a - b;\\n    }\\n  }\\n\\n  /**\\n   * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n   * division by zero. The result is rounded towards zero.\\n   *\\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n   * uses an invalid opcode to revert (consuming all remaining gas).\\n   *\\n   * Requirements:\\n   *\\n   * - The divisor cannot be zero.\\n   */\\n  function div(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    unchecked {\\n      require(b > 0, errorMessage);\\n      return a / b;\\n    }\\n  }\\n\\n  /**\\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n   * reverting with custom message when dividing by zero.\\n   *\\n   * CAUTION: This function is deprecated because it requires allocating memory for the error\\n   * message unnecessarily. For custom revert reasons use {tryMod}.\\n   *\\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\\n   * invalid opcode to revert (consuming all remaining gas).\\n   *\\n   * Requirements:\\n   *\\n   * - The divisor cannot be zero.\\n   */\\n  function mod(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    unchecked {\\n      require(b > 0, errorMessage);\\n      return a % b;\\n    }\\n  }\\n}\\n\\ninterface IUniswapV2Factory {\\n  event PairCreated(\\n    address indexed token0,\\n    address indexed token1,\\n    address pair,\\n    uint\\n  );\\n\\n  function createPair(\\n    address tokenA,\\n    address tokenB\\n  ) external returns (address pair);\\n\\n  function getPair(\\n    address tokenA,\\n    address tokenB\\n  ) external view returns (address pair);\\n}\\n\\ninterface IUniswapV2Router02 {\\n  function factory() external pure returns (address);\\n\\n  function WETH() external pure returns (address);\\n\\n  function addLiquidityETH(\\n    address token,\\n    uint256 amountTokenDesired,\\n    uint256 amountTokenMin,\\n    uint256 amountETHMin,\\n    address to,\\n    uint256 deadline\\n  )\\n    external\\n    payable\\n    returns (uint256 amountToken, uint256 amountETH, uint256 liquidity);\\n}\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n  mapping(address => uint256) private _balances;\\n\\n  mapping(address => mapping(address => uint256)) private _allowances;\\n\\n  uint256 private _totalSupply;\\n\\n  string private _name;\\n  string private _symbol;\\n\\n  /**\\n   * @dev Sets the values for {name} and {symbol}.\\n   *\\n   * All two of these values are immutable: they can only be set once during\\n   * construction.\\n   */\\n  constructor(string memory name_, string memory symbol_) {\\n    _name = name_;\\n    _symbol = symbol_;\\n  }\\n\\n  /**\\n   * @dev Returns the name of the token.\\n   */\\n  function name() public view virtual override returns (string memory) {\\n    return _name;\\n  }\\n\\n  /**\\n   * @dev Returns the symbol of the token, usually a shorter version of the\\n   * name.\\n   */\\n  function symbol() public view virtual override returns (string memory) {\\n    return _symbol;\\n  }\\n\\n  /**\\n   * @dev Returns the number of decimals used to get its user representation.\\n   * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n   * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n   *\\n   * Tokens usually opt for a value of 18, imitating the relationship between\\n   * Ether and Wei. This is the default value returned by this function, unless\\n   * it's overridden.\\n   *\\n   * NOTE: This information is only used for _display_ purposes: it in\\n   * no way affects any of the arithmetic of the contract, including\\n   * {IERC20-balanceOf} and {IERC20-transfer}.\\n   */\\n  function decimals() public view virtual override returns (uint8) {\\n    return 18;\\n  }\\n\\n  /**\\n   * @dev See {IERC20-totalSupply}.\\n   */\\n  function totalSupply() public view virtual override returns (uint256) {\\n    return _totalSupply;\\n  }\\n\\n  /**\\n   * @dev See {IERC20-balanceOf}.\\n   */\\n  function balanceOf(\\n    address account\\n  ) public view virtual override returns (uint256) {\\n    return _balances[account];\\n  }\\n\\n  /**\\n   * @dev See {IERC20-transfer}.\\n   *\\n   * Requirements:\\n   *\\n   * - `to` cannot be the zero address.\\n   * - the caller must have a balance of at least `amount`.\\n   */\\n  function transfer(\\n    address to,\\n    uint256 amount\\n  ) public virtual override returns (bool) {\\n    address owner = _msgSender();\\n    _transfer(owner, to, amount);\\n    return true;\\n  }\\n\\n  /**\\n   * @dev See {IERC20-allowance}.\\n   */\\n  function allowance(\\n    address owner,\\n    address spender\\n  ) public view virtual override returns (uint256) {\\n    return _allowances[owner][spender];\\n  }\\n\\n  /**\\n   * @dev See {IERC20-approve}.\\n   *\\n   * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n   * `transferFrom`. This is semantically equivalent to an infinite approval.\\n   *\\n   * Requirements:\\n   *\\n   * - `spender` cannot be the zero address.\\n   */\\n  function approve(\\n    address spender,\\n    uint256 amount\\n  ) public virtual override returns (bool) {\\n    address owner = _msgSender();\\n    _approve(owner, spender, amount);\\n    return true;\\n  }\\n\\n  /**\\n   * @dev See {IERC20-transferFrom}.\\n   *\\n   * Emits an {Approval} event indicating the updated allowance. This is not\\n   * required by the EIP. See the note at the beginning of {ERC20}.\\n   *\\n   * NOTE: Does not update the allowance if the current allowance\\n   * is the maximum `uint256`.\\n   *\\n   * Requirements:\\n   *\\n   * - `from` and `to` cannot be the zero address.\\n   * - `from` must have a balance of at least `amount`.\\n   * - the caller must have allowance for ``from``'s tokens of at least\\n   * `amount`.\\n   */\\n  function transferFrom(\\n    address from,\\n    address to,\\n    uint256 amount\\n  ) public virtual override returns (bool) {\\n    address spender = _msgSender();\\n    _spendAllowance(from, spender, amount);\\n    _transfer(from, to, amount);\\n    return true;\\n  }\\n\\n  /**\\n   * @dev Atomically increases the allowance granted to `spender` by the caller.\\n   *\\n   * This is an alternative to {approve} that can be used as a mitigation for\\n   * problems described in {IERC20-approve}.\\n   *\\n   * Emits an {Approval} event indicating the updated allowance.\\n   *\\n   * Requirements:\\n   *\\n   * - `spender` cannot be the zero address.\\n   */\\n  function increaseAllowance(\\n    address spender,\\n    uint256 addedValue\\n  ) public virtual returns (bool) {\\n    address owner = _msgSender();\\n    _approve(owner, spender, allowance(owner, spender) + addedValue);\\n    return true;\\n  }\\n\\n  /**\\n   * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n   *\\n   * This is an alternative to {approve} that can be used as a mitigation for\\n   * problems described in {IERC20-approve}.\\n   *\\n   * Emits an {Approval} event indicating the updated allowance.\\n   *\\n   * Requirements:\\n   *\\n   * - `spender` cannot be the zero address.\\n   * - `spender` must have allowance for the caller of at least\\n   * `subtractedValue`.\\n   */\\n  function decreaseAllowance(\\n    address spender,\\n    uint256 subtractedValue\\n  ) public virtual returns (bool) {\\n    address owner = _msgSender();\\n    uint256 currentAllowance = allowance(owner, spender);\\n    require(\\n      currentAllowance >= subtractedValue,\\n      \\\"ERC20: decreased allowance below zero\\\"\\n    );\\n    unchecked {\\n      _approve(owner, spender, currentAllowance - subtractedValue);\\n    }\\n\\n    return true;\\n  }\\n\\n  /**\\n   * @dev Moves `amount` of tokens from `from` to `to`.\\n   *\\n   * This internal function is equivalent to {transfer}, and can be used to\\n   * e.g. implement automatic token fees, slashing mechanisms, etc.\\n   *\\n   * Emits a {Transfer} event.\\n   *\\n   * Requirements:\\n   *\\n   * - `from` cannot be the zero address.\\n   * - `to` cannot be the zero address.\\n   * - `from` must have a balance of at least `amount`.\\n   */\\n  function _transfer(\\n    address from,\\n    address to,\\n    uint256 amount\\n  ) internal virtual {\\n    require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n    require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n    _beforeTokenTransfer(from, to, amount);\\n\\n    uint256 fromBalance = _balances[from];\\n    require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n    unchecked {\\n      _balances[from] = fromBalance - amount;\\n      // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n      // decrementing then incrementing.\\n      _balances[to] += amount;\\n    }\\n\\n    emit Transfer(from, to, amount);\\n\\n    _afterTokenTransfer(from, to, amount);\\n  }\\n\\n  /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n   * the total supply.\\n   *\\n   * Emits a {Transfer} event with `from` set to the zero address.\\n   *\\n   * Requirements:\\n   *\\n   * - `account` cannot be the zero address.\\n   */\\n  function _mint(address account, uint256 amount) internal virtual {\\n    require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n    _beforeTokenTransfer(address(0), account, amount);\\n\\n    _totalSupply += amount;\\n    unchecked {\\n      // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n      _balances[account] += amount;\\n    }\\n    emit Transfer(address(0), account, amount);\\n\\n    _afterTokenTransfer(address(0), account, amount);\\n  }\\n\\n  /**\\n   * @dev Destroys `amount` tokens from `account`, reducing the\\n   * total supply.\\n   *\\n   * Emits a {Transfer} event with `to` set to the zero address.\\n   *\\n   * Requirements:\\n   *\\n   * - `account` cannot be the zero address.\\n   * - `account` must have at least `amount` tokens.\\n   */\\n  function _burn(address account, uint256 amount) internal virtual {\\n    require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n    _beforeTokenTransfer(account, address(0), amount);\\n\\n    uint256 accountBalance = _balances[account];\\n    require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n    unchecked {\\n      _balances[account] = accountBalance - amount;\\n      // Overflow not possible: amount <= accountBalance <= totalSupply.\\n      _totalSupply -= amount;\\n    }\\n\\n    emit Transfer(account, address(0), amount);\\n\\n    _afterTokenTransfer(account, address(0), amount);\\n  }\\n\\n  /**\\n   * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n   *\\n   * This internal function is equivalent to `approve`, and can be used to\\n   * e.g. set automatic allowances for certain subsystems, etc.\\n   *\\n   * Emits an {Approval} event.\\n   *\\n   * Requirements:\\n   *\\n   * - `owner` cannot be the zero address.\\n   * - `spender` cannot be the zero address.\\n   */\\n  function _approve(\\n    address owner,\\n    address spender,\\n    uint256 amount\\n  ) internal virtual {\\n    require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n    require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n    _allowances[owner][spender] = amount;\\n    emit Approval(owner, spender, amount);\\n  }\\n\\n  /**\\n   * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n   *\\n   * Does not update the allowance amount in case of infinite allowance.\\n   * Revert if not enough allowance is available.\\n   *\\n   * Might emit an {Approval} event.\\n   */\\n  function _spendAllowance(\\n    address owner,\\n    address spender,\\n    uint256 amount\\n  ) internal virtual {\\n    uint256 currentAllowance = allowance(owner, spender);\\n    if (currentAllowance != type(uint256).max) {\\n      require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n      unchecked {\\n        _approve(owner, spender, currentAllowance - amount);\\n      }\\n    }\\n  }\\n\\n  /**\\n   * @dev Hook that is called before any transfer of tokens. This includes\\n   * minting and burning.\\n   *\\n   * Calling conditions:\\n   *\\n   * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n   * will be transferred to `to`.\\n   * - when `from` is zero, `amount` tokens will be minted for `to`.\\n   * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n   * - `from` and `to` are never both zero.\\n   *\\n   * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n   */\\n  function _beforeTokenTransfer(\\n    address from,\\n    address to,\\n    uint256 amount\\n  ) internal virtual {}\\n\\n  /**\\n   * @dev Hook that is called after any transfer of tokens. This includes\\n   * minting and burning.\\n   *\\n   * Calling conditions:\\n   *\\n   * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n   * has been transferred to `to`.\\n   * - when `from` is zero, `amount` tokens have been minted for `to`.\\n   * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n   * - `from` and `to` are never both zero.\\n   *\\n   * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n   */\\n  function _afterTokenTransfer(\\n    address from,\\n    address to,\\n    uint256 amount\\n  ) internal virtual {}\\n}\\n\\ncontract AntiMEV is ERC20, Ownable {\\n  using SafeMath for uint256;\\n\\n  bool public detectMEV;\\n  uint256 public maxTx;\\n  uint256 public maxWallet;\\n  uint256 public mineBlocks;\\n  uint256 public gasDelta;\\n  uint256 public maxSample;\\n\\n  uint256 public avgGasPrice;\\n  uint256 public gasCounter;\\n\\n  mapping(address => bool) public bots; // MEV bots\\n  mapping(address => bool) public isVIP; // VIP addresses\\n  mapping(address => uint256) private lastTxBlock; // block number for address's last tx\\n\\n  IUniswapV2Router02 public uniswapV2Router;\\n  address public uniswapV2Pair;\\n\\n  address payable private devWallet;\\n  address payable private burnWallet;\\n  address payable private airdropWallet;\\n\\n  event Burned(address indexed user, uint256 amount);\\n  event VIPAdded(address indexed account, bool isVIP);\\n  event BotAdded(address indexed account, bool isBot);\\n  event MEVUpdated(\\n    uint256 mineBlocks,\\n    uint256 gasDelta,\\n    uint256 maxSample,\\n    uint256 avgGasPrice\\n  );\\n  event VarsUpdated(uint256 maxTx, uint256 maxWallet);\\n  event WalletsUpdated(\\n    address indexed devWallet,\\n    address indexed burnWallet,\\n    address indexed airdropWallet\\n  );\\n\\n  constructor() payable ERC20(\\\"AntiMEV\\\", \\\"AntiMEV\\\") {\\n    uint256 _totalSupply = 1123581321 * 10 ** 18; // 1.12 Billion Fibonacci\\n\\n    maxWallet = _totalSupply.mul(3).div(100); // 3% of total supply\\n    maxTx = _totalSupply.mul(15).div(1000); // 1.5% of total supply\\n\\n    detectMEV = true; // enable MEV detection\\n    mineBlocks = 3; // blocks must be mined before 2nd tx\\n    avgGasPrice = 0; // rolling average gas price\\n    gasDelta = 20; // increase in gas price to be considered bribe\\n    maxSample = 10; // number of blocks to calculate rolling average gas price\\n    gasCounter = 0; // counter used to calculate rolling average gas price\\n\\n    IUniswapV2Router02 _uniswapV2Router = IUniswapV2Router02(\\n      0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D\\n    );\\n    uniswapV2Router = _uniswapV2Router;\\n\\n    uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(\\n      address(this),\\n      _uniswapV2Router.WETH()\\n    );\\n\\n    devWallet = payable(0xc2657176e213DDF18646eFce08F36D656aBE3396);\\n    burnWallet = payable(0x8B30998a9492610F074784Aed7aFDd682B23B416);\\n    airdropWallet = payable(0x5b3eC3A39403202A9C5a9e3496FbB3793B244B44);\\n\\n    setVIP(msg.sender, true);\\n    setVIP(address(this), true);\\n    setVIP(address(devWallet), true);\\n    setVIP(address(burnWallet), true);\\n    setVIP(address(airdropWallet), true);\\n    setVIP(address(uniswapV2Pair), true);\\n    setVIP(address(uniswapV2Router), true);\\n\\n    _mint(msg.sender, _totalSupply.mul(90).div(100)); // 90% of total supply\\n    _mint(devWallet, _totalSupply.mul(4).div(100)); // 4% of total supply\\n    _mint(burnWallet, _totalSupply.mul(3).div(100)); // 3% of total supply\\n    _mint(airdropWallet, _totalSupply.mul(3).div(100)); // 3% of total supply\\n  }\\n\\n  function _beforeTokenTransfer(\\n    address from,\\n    address to,\\n    uint256 amount\\n  ) internal virtual override {\\n    // check if VIP\\n    if (!isVIP[from] && !isVIP[to]) {\\n      // check if known MEV bot\\n      require(!bots[to] && !bots[from], \\\"AntiMEV: Known MEV bot\\\");\\n      // check if max tx amount exceeded\\n      require(amount <= maxTx, \\\"Max transaction exceeded!\\\");\\n      // check if max wallet amount exceeded\\n      require(super.balanceOf(to) + amount <= maxWallet, \\\"Max wallet exceeded\\\");\\n    }\\n  }\\n\\n  // calculate rolling average of gas price for last maxSample blocks\\n  function detectGasBribe() public {\\n    gasCounter += 1;\\n    avgGasPrice =\\n      (avgGasPrice * (gasCounter - 1)) /\\n      gasCounter +\\n      tx.gasprice /\\n      gasCounter;\\n\\n    // reset avgGasPrice if sample size too large\\n    if (gasCounter > maxSample) {\\n      avgGasPrice = tx.gasprice;\\n      gasCounter = 0;\\n    }\\n\\n    // detect bribes by checking if gas price is higher than rolling average\\n    if (\\n      tx.gasprice >= avgGasPrice.add(avgGasPrice.mul(gasDelta).div(100)) &&\\n      gasCounter > 1\\n    ) {\\n      revert(\\\"AntiMEV: Gas bribe detected, possible front-run\\\");\\n    }\\n\\n    /*     uint256 bribe = avgGasPrice.add(avgGasPrice.mul(gasDelta).div(100));\\n    console.log(\\\"tx.gasprice: %s  %s\\\", tx.gasprice, gasCounter);\\n    console.log(\\\"avgGasPrice: %s  %s\\\", avgGasPrice, gasCounter);\\n    console.log(\\\"bribe.Price: %s  %s\\\", bribe, gasCounter); */\\n  }\\n\\n  function detectSandwich(address from, address to) private {\\n    // handle buys\\n    //if (from == uniswapV2Pair && to != address(uniswapV2Router)) {\\n    if (block.number > lastTxBlock[to] + mineBlocks) {\\n      lastTxBlock[to] = block.number;\\n    } else if (block.number == lastTxBlock[to]) {\\n      // allow but add to bots\\n      if (!isVIP[to]) {\\n        bots[to] = true;\\n        emit BotAdded(to, true);\\n      }\\n    } else {\\n      revert(\\\"AntiMEV: Transfers too frequent, possible sandwich attack\\\");\\n    }\\n    //}\\n\\n    // handle sells\\n    //  if (to == uniswapV2Pair && from != address(uniswapV2Router)) {\\n    if (block.number > lastTxBlock[from] + mineBlocks) {\\n      lastTxBlock[from] = block.number;\\n    } else if (block.number == lastTxBlock[from]) {\\n      // add to bots\\n      if (!isVIP[from]) {\\n        bots[from] = true;\\n        emit BotAdded(from, true);\\n      }\\n      revert(\\\"AntiMEV: Sandwich attack detected, added to bots\\\");\\n    } else {\\n      revert(\\\"AntiMEV: Transfers too frequent, possible sandwich attack\\\");\\n    }\\n    // }\\n    /*     console.log(\\\"to: %s lastTxBlock: %s\\\", to, lastTxBlock[to]);\\n    console.log(\\\"from: %s lastTxBlock: %s\\\", from, lastTxBlock[from]); */\\n  }\\n\\n  function transfer(address to, uint256 amount) public override returns (bool) {\\n    if (detectMEV) {\\n      // test for frontrunner\\n      detectGasBribe();\\n      // test for sandwich attack\\n      detectSandwich(msg.sender, to);\\n    }\\n    return super.transfer(to, amount);\\n  }\\n\\n  function transferFrom(\\n    address from,\\n    address to,\\n    uint256 amount\\n  ) public override returns (bool) {\\n    if (detectMEV) {\\n      // test for frontrunner\\n      detectGasBribe();\\n      // test for sandwich attack\\n      detectSandwich(from, to);\\n    }\\n    return super.transferFrom(from, to, amount);\\n  }\\n\\n  function setDetectMEV(bool _detectMEV) external onlyOwner {\\n    detectMEV = _detectMEV;\\n  }\\n\\n  function setUniswapV2Pair(address _uniswapV2Pair) external onlyOwner {\\n    uniswapV2Pair = _uniswapV2Pair;\\n  }\\n\\n  function setMEV(\\n    uint256 _mineBlocks,\\n    uint256 _gasDelta,\\n    uint256 _maxSample,\\n    uint256 _avgGasPrice\\n  ) external onlyOwner {\\n    mineBlocks = _mineBlocks;\\n    gasDelta = _gasDelta;\\n    maxSample = _maxSample;\\n    avgGasPrice = _avgGasPrice;\\n    emit MEVUpdated(_mineBlocks, _gasDelta, _maxSample, _avgGasPrice);\\n  }\\n\\n  function setVars(uint256 _maxTx, uint256 _maxWallet) external onlyOwner {\\n    maxTx = _maxTx;\\n    maxWallet = _maxWallet;\\n    emit VarsUpdated(_maxTx, _maxWallet);\\n  }\\n\\n  function setVIP(address _address, bool _isVIP) public onlyOwner {\\n    isVIP[_address] = _isVIP;\\n    emit VIPAdded(_address, _isVIP);\\n  }\\n\\n  function setBots(\\n    address[] memory _address,\\n    bool[] memory _isBot\\n  ) external onlyOwner {\\n    for (uint256 i = 0; i < _address.length; i++) {\\n      require(_address[i] != address(this) && _address[i] != owner());\\n      bots[_address[i]] = _isBot[i];\\n      emit BotAdded(_address[i], _isBot[i]);\\n    }\\n  }\\n\\n  function setWallets(\\n    address _devWallet,\\n    address _burnWallet,\\n    address _airdropWallet\\n  ) external onlyOwner {\\n    devWallet = payable(_devWallet);\\n    burnWallet = payable(_burnWallet);\\n    airdropWallet = payable(_airdropWallet);\\n    emit WalletsUpdated(devWallet, burnWallet, airdropWallet);\\n  }\\n\\n  function burn(uint256 value) external onlyOwner {\\n    _burn(msg.sender, value);\\n    emit Burned(msg.sender, value);\\n  }\\n}\\n\",\"keccak256\":\"0xb67f38ed6e7e89a7bb3afea8021b6c13b12266caec45c3b079e2582491c81d3e\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x600760808181526620b73a34a6a2ab60c91b60a081905261010060405260c092835260e052906003620000338382620008b8565b506004620000428282620008b8565b5050506200005f620000596200043960201b60201c565b6200043d565b6b03a1679975a96fc0688400006200009f60646200008b8360036200048f602090811b62000c0f17901c565b620004a660201b62000c1b1790919060201c565b600755620000c26103e86200008b83600f6200048f602090811b62000c0f17901c565b6006556005805460ff60a01b1916600160a01b17905560036008556000600b8190556014600955600a8055600c55601080546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d9081179091556040805163c45a015560e01b81529051829163c45a01559160048083019260209291908290030181865afa15801562000156573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200017c919062000984565b6001600160a01b031663c9c6539630836001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015620001ca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001f0919062000984565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af11580156200023e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000264919062000984565b601180546001600160a01b03929092166001600160a01b031992831617905560128054821673c2657176e213ddf18646efce08f36d656abe3396179055601380548216738b30998a9492610f074784aed7afdd682b23b41617905560148054909116735b3ec3a39403202a9c5a9e3496fbb3793b244b44179055620002eb336001620004b4565b620002f8306001620004b4565b60125462000311906001600160a01b03166001620004b4565b6013546200032a906001600160a01b03166001620004b4565b60145462000343906001600160a01b03166001620004b4565b6011546200035c906001600160a01b03166001620004b4565b60105462000375906001600160a01b03166001620004b4565b620003a1336200039b60646200008b605a876200048f60201b62000c0f1790919060201c565b6200051d565b601254620003d1906001600160a01b03166200039b60646200008b8660046200048f602090811b62000c0f17901c565b60135462000401906001600160a01b03166200039b60646200008b8660036200048f602090811b62000c0f17901c565b60145462000431906001600160a01b03166200039b60646200008b8660036200048f602090811b62000c0f17901c565b505062000a1f565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006200049d8284620009cc565b90505b92915050565b60006200049d8284620009e6565b620004be620005f2565b6001600160a01b0382166000818152600e6020908152604091829020805460ff191685151590811790915591519182527fda633a71264a27905632c474143536c3964c692d30dbf9384cf1f2e87659d64c910160405180910390a25050565b6001600160a01b038216620005795760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064015b60405180910390fd5b620005876000838362000650565b80600260008282546200059b919062000a09565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6005546001600160a01b031633146200064e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640162000570565b565b6001600160a01b0383166000908152600e602052604090205460ff161580156200069357506001600160a01b0382166000908152600e602052604090205460ff16155b15620007f4576001600160a01b0382166000908152600d602052604090205460ff16158015620006dc57506001600160a01b0383166000908152600d602052604090205460ff16155b6200072a5760405162461bcd60e51b815260206004820152601660248201527f416e74694d45563a204b6e6f776e204d455620626f7400000000000000000000604482015260640162000570565b6006548111156200077e5760405162461bcd60e51b815260206004820152601960248201527f4d6178207472616e73616374696f6e2065786365656465642100000000000000604482015260640162000570565b600754816200079884620007f960201b620008001760201c565b620007a4919062000a09565b1115620007f45760405162461bcd60e51b815260206004820152601360248201527f4d61782077616c6c657420657863656564656400000000000000000000000000604482015260640162000570565b505050565b6001600160a01b031660009081526020819052604090205490565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200083f57607f821691505b6020821081036200086057634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620007f457600081815260208120601f850160051c810160208610156200088f5750805b601f850160051c820191505b81811015620008b0578281556001016200089b565b505050505050565b81516001600160401b03811115620008d457620008d462000814565b620008ec81620008e584546200082a565b8462000866565b602080601f8311600181146200092457600084156200090b5750858301515b600019600386901b1c1916600185901b178555620008b0565b600085815260208120601f198616915b82811015620009555788860151825594840194600190910190840162000934565b5085821015620009745787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000602082840312156200099757600080fd5b81516001600160a01b0381168114620009af57600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417620004a057620004a0620009b6565b60008262000a0457634e487b7160e01b600052601260045260246000fd5b500490565b80820180821115620004a057620004a0620009b6565b611a7f8062000a2f6000396000f3fe608060405234801561001057600080fd5b50600436106102105760003560e01c80637437681e11610125578063a6ccf7e5116100ad578063bfd792841161007c578063bfd7928414610421578063dd62ed3e14610444578063f2fde38b14610457578063f4201c3c1461046a578063f8b45b051461048d57600080fd5b8063a6ccf7e5146103ea578063a7ae210a146103fd578063a9059cbb14610406578063bd060ac91461041957600080fd5b806392181ec6116100f457806392181ec61461039f57806395bb5db6146103b357806395d89b41146103bc578063a29a6089146103c4578063a457c2d7146103d757600080fd5b80637437681e1461035f57806375cb1bd1146103685780637b95811e1461037b5780638da5cb5b1461038e57600080fd5b8063265b957b116101a857806349bd5a5e1161017757806349bd5a5e146103155780636381f2b11461032857806369ab300d1461033157806370a0823114610344578063715018a61461035757600080fd5b8063265b957b146102d7578063313ce567146102e057806339509351146102ef57806342966c681461030257600080fd5b80631694505e116101e45780631694505e1461027e57806318160ddd146102a957806321c609c2146102bb57806323b872dd146102c457600080fd5b80623a91a51461021557806306fdde031461022a578063095ea7b3146102485780630ee0347c1461026b575b600080fd5b6102286102233660046115c0565b610496565b005b6102326104bc565b60405161023f91906115db565b60405180910390f35b61025b610256366004611640565b61054e565b604051901515815260200161023f565b610228610279366004611747565b610568565b601054610291906001600160a01b031681565b6040516001600160a01b03909116815260200161023f565b6002545b60405190815260200161023f565b6102ad60085481565b61025b6102d2366004611807565b6106f3565b6102ad60095481565b6040516012815260200161023f565b61025b6102fd366004611640565b61072d565b610228610310366004611843565b61074f565b601154610291906001600160a01b031681565b6102ad600a5481565b61022861033f36600461185c565b610799565b6102ad61035236600461188f565b610800565b61022861081b565b6102ad60065481565b6102286103763660046118aa565b61082f565b6102286103893660046118ed565b6108a5565b6005546001600160a01b0316610291565b60055461025b90600160a01b900460ff1681565b6102ad600c5481565b6102326108f4565b6102286103d236600461188f565b610903565b61025b6103e5366004611640565b61092d565b6102286103f836600461190f565b6109b8565b6102ad600b5481565b61025b610414366004611640565b610a22565b610228610a5a565b61025b61042f36600461188f565b600d6020526000908152604090205460ff1681565b6102ad610452366004611941565b610b6b565b61022861046536600461188f565b610b96565b61025b61047836600461188f565b600e6020526000908152604090205460ff1681565b6102ad60075481565b61049e610c27565b60058054911515600160a01b0260ff60a01b19909216919091179055565b6060600380546104cb9061196b565b80601f01602080910402602001604051908101604052809291908181526020018280546104f79061196b565b80156105445780601f1061051957610100808354040283529160200191610544565b820191906000526020600020905b81548152906001019060200180831161052757829003601f168201915b5050505050905090565b60003361055c818585610c81565b60019150505b92915050565b610570610c27565b60005b82518110156106ee57306001600160a01b0316838281518110610598576105986119a5565b60200260200101516001600160a01b0316141580156105ed57506005546001600160a01b03166001600160a01b03168382815181106105d9576105d96119a5565b60200260200101516001600160a01b031614155b6105f657600080fd5b818181518110610608576106086119a5565b6020026020010151600d6000858481518110610626576106266119a5565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff021916908315150217905550828181518110610677576106776119a5565b60200260200101516001600160a01b03167f0cc5910ce116d1d71aa48f1ccd5e978315791068133c0c6aa7540ab8c9a8796d8383815181106106bb576106bb6119a5565b60200260200101516040516106d4911515815260200190565b60405180910390a2806106e6816119d1565b915050610573565b505050565b600554600090600160a01b900460ff161561071a57610710610a5a565b61071a8484610da5565b610725848484611044565b949350505050565b60003361055c8185856107408383610b6b565b61074a91906119ea565b610c81565b610757610c27565b610761338261105d565b60405181815233907f696de425f79f4a40bc6d2122ca50507f0efbeabbff86a84871b7196ab8ea8df79060200160405180910390a250565b6107a1610c27565b6001600160a01b0382166000818152600e6020908152604091829020805460ff191685151590811790915591519182527fda633a71264a27905632c474143536c3964c692d30dbf9384cf1f2e87659d64c910160405180910390a25050565b6001600160a01b031660009081526020819052604090205490565b610823610c27565b61082d600061119b565b565b610837610c27565b601280546001600160a01b03199081166001600160a01b03868116918217909355601380548316868516908117909155601480549093169385169384179092556040517f2d4c6aa48812a0ea09474a961613c1a3ae652d39a1580cb1ac46ff277e6d385d90600090a4505050565b6108ad610c27565b6006829055600781905560408051838152602081018390527f0601fca57ddfe20bacaa75dad3fce876566d47c6851d4b8bd00572b3c13dd321910160405180910390a15050565b6060600480546104cb9061196b565b61090b610c27565b601180546001600160a01b0319166001600160a01b0392909216919091179055565b6000338161093b8286610b6b565b9050838110156109a05760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6109ad8286868403610c81565b506001949350505050565b6109c0610c27565b60088490556009839055600a829055600b8190556040805185815260208101859052908101839052606081018290527f14fd6f32fdaec8482ac6b00207414b60d714be451bc189769f2cdf1e85e881209060800160405180910390a150505050565b600554600090600160a01b900460ff1615610a4957610a3f610a5a565b610a493384610da5565b610a5383836111ed565b9392505050565b6001600c6000828254610a6d91906119ea565b9091555050600c54610a7f903a6119fd565b600c54610a8d600182611a1f565b600b54610a9a9190611a32565b610aa491906119fd565b610aae91906119ea565b600b55600a54600c541115610ac7573a600b556000600c555b610af5610aec6064610ae6600954600b54610c0f90919063ffffffff16565b90610c1b565b600b54906111fb565b3a10158015610b0657506001600c54115b1561082d5760405162461bcd60e51b815260206004820152602f60248201527f416e74694d45563a204761732062726962652064657465637465642c20706f7360448201526e39b4b1363290333937b73a16b93ab760891b6064820152608401610997565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610b9e610c27565b6001600160a01b038116610c035760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610997565b610c0c8161119b565b50565b6000610a538284611a32565b6000610a5382846119fd565b6005546001600160a01b0316331461082d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610997565b6001600160a01b038316610ce35760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610997565b6001600160a01b038216610d445760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610997565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6008546001600160a01b0382166000908152600f6020526040902054610dcb91906119ea565b431115610df2576001600160a01b0381166000908152600f60205260409020439055610eff565b6001600160a01b0381166000908152600f60205260409020544303610e91576001600160a01b0381166000908152600e602052604090205460ff16610e8c576001600160a01b0381166000818152600d6020908152604091829020805460ff1916600190811790915591519182527f0cc5910ce116d1d71aa48f1ccd5e978315791068133c0c6aa7540ab8c9a8796d910160405180910390a25b610eff565b60405162461bcd60e51b815260206004820152603960248201527f416e74694d45563a205472616e736665727320746f6f206672657175656e742c60448201527f20706f737369626c652073616e64776963682061747461636b000000000000006064820152608401610997565b6008546001600160a01b0383166000908152600f6020526040902054610f2591906119ea565b431115610f4957506001600160a01b03166000908152600f60205260409020439055565b6001600160a01b0382166000908152600f60205260409020544303610e91576001600160a01b0382166000908152600e602052604090205460ff16610fe3576001600160a01b0382166000818152600d6020908152604091829020805460ff1916600190811790915591519182527f0cc5910ce116d1d71aa48f1ccd5e978315791068133c0c6aa7540ab8c9a8796d910160405180910390a25b60405162461bcd60e51b815260206004820152603060248201527f416e74694d45563a2053616e64776963682061747461636b206465746563746560448201526f642c20616464656420746f20626f747360801b6064820152608401610997565b600033611052858285611207565b6109ad858585611281565b6001600160a01b0382166110bd5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610997565b6110c982600083611430565b6001600160a01b0382166000908152602081905260409020548181101561113d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610997565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60003361055c818585611281565b6000610a5382846119ea565b60006112138484610b6b565b9050600019811461127b578181101561126e5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610997565b61127b8484848403610c81565b50505050565b6001600160a01b0383166112e55760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610997565b6001600160a01b0382166113475760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610997565b611352838383611430565b6001600160a01b038316600090815260208190526040902054818110156113ca5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610997565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a361127b565b6001600160a01b0383166000908152600e602052604090205460ff1615801561147257506001600160a01b0382166000908152600e602052604090205460ff16155b156106ee576001600160a01b0382166000908152600d602052604090205460ff161580156114b957506001600160a01b0383166000908152600d602052604090205460ff16155b6114fe5760405162461bcd60e51b8152602060048201526016602482015275105b9d1a5351558e8812db9bdddb8813515588189bdd60521b6044820152606401610997565b6006548111156115505760405162461bcd60e51b815260206004820152601960248201527f4d6178207472616e73616374696f6e20657863656564656421000000000000006044820152606401610997565b6007548161155d84610800565b61156791906119ea565b11156106ee5760405162461bcd60e51b815260206004820152601360248201527213585e081dd85b1b195d08195e18d959591959606a1b6044820152606401610997565b803580151581146115bb57600080fd5b919050565b6000602082840312156115d257600080fd5b610a53826115ab565b600060208083528351808285015260005b81811015611608578581018301518582016040015282016115ec565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146115bb57600080fd5b6000806040838503121561165357600080fd5b61165c83611629565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156116a9576116a961166a565b604052919050565b600067ffffffffffffffff8211156116cb576116cb61166a565b5060051b60200190565b600082601f8301126116e657600080fd5b813560206116fb6116f6836116b1565b611680565b82815260059290921b8401810191818101908684111561171a57600080fd5b8286015b8481101561173c5761172f816115ab565b835291830191830161171e565b509695505050505050565b6000806040838503121561175a57600080fd5b823567ffffffffffffffff8082111561177257600080fd5b818501915085601f83011261178657600080fd5b813560206117966116f6836116b1565b82815260059290921b840181019181810190898411156117b557600080fd5b948201945b838610156117da576117cb86611629565b825294820194908201906117ba565b965050860135925050808211156117f057600080fd5b506117fd858286016116d5565b9150509250929050565b60008060006060848603121561181c57600080fd5b61182584611629565b925061183360208501611629565b9150604084013590509250925092565b60006020828403121561185557600080fd5b5035919050565b6000806040838503121561186f57600080fd5b61187883611629565b9150611886602084016115ab565b90509250929050565b6000602082840312156118a157600080fd5b610a5382611629565b6000806000606084860312156118bf57600080fd5b6118c884611629565b92506118d660208501611629565b91506118e460408501611629565b90509250925092565b6000806040838503121561190057600080fd5b50508035926020909101359150565b6000806000806080858703121561192557600080fd5b5050823594602084013594506040840135936060013592509050565b6000806040838503121561195457600080fd5b61195d83611629565b915061188660208401611629565b600181811c9082168061197f57607f821691505b60208210810361199f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016119e3576119e36119bb565b5060010190565b80820180821115610562576105626119bb565b600082611a1a57634e487b7160e01b600052601260045260246000fd5b500490565b81810381811115610562576105626119bb565b8082028115828204841417610562576105626119bb56fea264697066735822122092902149eb97e36b447644b16b776586b7dee3f404cfa3b6a8c08344b24bb85f64736f6c63430008120033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106102105760003560e01c80637437681e11610125578063a6ccf7e5116100ad578063bfd792841161007c578063bfd7928414610421578063dd62ed3e14610444578063f2fde38b14610457578063f4201c3c1461046a578063f8b45b051461048d57600080fd5b8063a6ccf7e5146103ea578063a7ae210a146103fd578063a9059cbb14610406578063bd060ac91461041957600080fd5b806392181ec6116100f457806392181ec61461039f57806395bb5db6146103b357806395d89b41146103bc578063a29a6089146103c4578063a457c2d7146103d757600080fd5b80637437681e1461035f57806375cb1bd1146103685780637b95811e1461037b5780638da5cb5b1461038e57600080fd5b8063265b957b116101a857806349bd5a5e1161017757806349bd5a5e146103155780636381f2b11461032857806369ab300d1461033157806370a0823114610344578063715018a61461035757600080fd5b8063265b957b146102d7578063313ce567146102e057806339509351146102ef57806342966c681461030257600080fd5b80631694505e116101e45780631694505e1461027e57806318160ddd146102a957806321c609c2146102bb57806323b872dd146102c457600080fd5b80623a91a51461021557806306fdde031461022a578063095ea7b3146102485780630ee0347c1461026b575b600080fd5b6102286102233660046115c0565b610496565b005b6102326104bc565b60405161023f91906115db565b60405180910390f35b61025b610256366004611640565b61054e565b604051901515815260200161023f565b610228610279366004611747565b610568565b601054610291906001600160a01b031681565b6040516001600160a01b03909116815260200161023f565b6002545b60405190815260200161023f565b6102ad60085481565b61025b6102d2366004611807565b6106f3565b6102ad60095481565b6040516012815260200161023f565b61025b6102fd366004611640565b61072d565b610228610310366004611843565b61074f565b601154610291906001600160a01b031681565b6102ad600a5481565b61022861033f36600461185c565b610799565b6102ad61035236600461188f565b610800565b61022861081b565b6102ad60065481565b6102286103763660046118aa565b61082f565b6102286103893660046118ed565b6108a5565b6005546001600160a01b0316610291565b60055461025b90600160a01b900460ff1681565b6102ad600c5481565b6102326108f4565b6102286103d236600461188f565b610903565b61025b6103e5366004611640565b61092d565b6102286103f836600461190f565b6109b8565b6102ad600b5481565b61025b610414366004611640565b610a22565b610228610a5a565b61025b61042f36600461188f565b600d6020526000908152604090205460ff1681565b6102ad610452366004611941565b610b6b565b61022861046536600461188f565b610b96565b61025b61047836600461188f565b600e6020526000908152604090205460ff1681565b6102ad60075481565b61049e610c27565b60058054911515600160a01b0260ff60a01b19909216919091179055565b6060600380546104cb9061196b565b80601f01602080910402602001604051908101604052809291908181526020018280546104f79061196b565b80156105445780601f1061051957610100808354040283529160200191610544565b820191906000526020600020905b81548152906001019060200180831161052757829003601f168201915b5050505050905090565b60003361055c818585610c81565b60019150505b92915050565b610570610c27565b60005b82518110156106ee57306001600160a01b0316838281518110610598576105986119a5565b60200260200101516001600160a01b0316141580156105ed57506005546001600160a01b03166001600160a01b03168382815181106105d9576105d96119a5565b60200260200101516001600160a01b031614155b6105f657600080fd5b818181518110610608576106086119a5565b6020026020010151600d6000858481518110610626576106266119a5565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff021916908315150217905550828181518110610677576106776119a5565b60200260200101516001600160a01b03167f0cc5910ce116d1d71aa48f1ccd5e978315791068133c0c6aa7540ab8c9a8796d8383815181106106bb576106bb6119a5565b60200260200101516040516106d4911515815260200190565b60405180910390a2806106e6816119d1565b915050610573565b505050565b600554600090600160a01b900460ff161561071a57610710610a5a565b61071a8484610da5565b610725848484611044565b949350505050565b60003361055c8185856107408383610b6b565b61074a91906119ea565b610c81565b610757610c27565b610761338261105d565b60405181815233907f696de425f79f4a40bc6d2122ca50507f0efbeabbff86a84871b7196ab8ea8df79060200160405180910390a250565b6107a1610c27565b6001600160a01b0382166000818152600e6020908152604091829020805460ff191685151590811790915591519182527fda633a71264a27905632c474143536c3964c692d30dbf9384cf1f2e87659d64c910160405180910390a25050565b6001600160a01b031660009081526020819052604090205490565b610823610c27565b61082d600061119b565b565b610837610c27565b601280546001600160a01b03199081166001600160a01b03868116918217909355601380548316868516908117909155601480549093169385169384179092556040517f2d4c6aa48812a0ea09474a961613c1a3ae652d39a1580cb1ac46ff277e6d385d90600090a4505050565b6108ad610c27565b6006829055600781905560408051838152602081018390527f0601fca57ddfe20bacaa75dad3fce876566d47c6851d4b8bd00572b3c13dd321910160405180910390a15050565b6060600480546104cb9061196b565b61090b610c27565b601180546001600160a01b0319166001600160a01b0392909216919091179055565b6000338161093b8286610b6b565b9050838110156109a05760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6109ad8286868403610c81565b506001949350505050565b6109c0610c27565b60088490556009839055600a829055600b8190556040805185815260208101859052908101839052606081018290527f14fd6f32fdaec8482ac6b00207414b60d714be451bc189769f2cdf1e85e881209060800160405180910390a150505050565b600554600090600160a01b900460ff1615610a4957610a3f610a5a565b610a493384610da5565b610a5383836111ed565b9392505050565b6001600c6000828254610a6d91906119ea565b9091555050600c54610a7f903a6119fd565b600c54610a8d600182611a1f565b600b54610a9a9190611a32565b610aa491906119fd565b610aae91906119ea565b600b55600a54600c541115610ac7573a600b556000600c555b610af5610aec6064610ae6600954600b54610c0f90919063ffffffff16565b90610c1b565b600b54906111fb565b3a10158015610b0657506001600c54115b1561082d5760405162461bcd60e51b815260206004820152602f60248201527f416e74694d45563a204761732062726962652064657465637465642c20706f7360448201526e39b4b1363290333937b73a16b93ab760891b6064820152608401610997565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610b9e610c27565b6001600160a01b038116610c035760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610997565b610c0c8161119b565b50565b6000610a538284611a32565b6000610a5382846119fd565b6005546001600160a01b0316331461082d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610997565b6001600160a01b038316610ce35760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610997565b6001600160a01b038216610d445760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610997565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6008546001600160a01b0382166000908152600f6020526040902054610dcb91906119ea565b431115610df2576001600160a01b0381166000908152600f60205260409020439055610eff565b6001600160a01b0381166000908152600f60205260409020544303610e91576001600160a01b0381166000908152600e602052604090205460ff16610e8c576001600160a01b0381166000818152600d6020908152604091829020805460ff1916600190811790915591519182527f0cc5910ce116d1d71aa48f1ccd5e978315791068133c0c6aa7540ab8c9a8796d910160405180910390a25b610eff565b60405162461bcd60e51b815260206004820152603960248201527f416e74694d45563a205472616e736665727320746f6f206672657175656e742c60448201527f20706f737369626c652073616e64776963682061747461636b000000000000006064820152608401610997565b6008546001600160a01b0383166000908152600f6020526040902054610f2591906119ea565b431115610f4957506001600160a01b03166000908152600f60205260409020439055565b6001600160a01b0382166000908152600f60205260409020544303610e91576001600160a01b0382166000908152600e602052604090205460ff16610fe3576001600160a01b0382166000818152600d6020908152604091829020805460ff1916600190811790915591519182527f0cc5910ce116d1d71aa48f1ccd5e978315791068133c0c6aa7540ab8c9a8796d910160405180910390a25b60405162461bcd60e51b815260206004820152603060248201527f416e74694d45563a2053616e64776963682061747461636b206465746563746560448201526f642c20616464656420746f20626f747360801b6064820152608401610997565b600033611052858285611207565b6109ad858585611281565b6001600160a01b0382166110bd5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610997565b6110c982600083611430565b6001600160a01b0382166000908152602081905260409020548181101561113d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610997565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60003361055c818585611281565b6000610a5382846119ea565b60006112138484610b6b565b9050600019811461127b578181101561126e5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610997565b61127b8484848403610c81565b50505050565b6001600160a01b0383166112e55760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610997565b6001600160a01b0382166113475760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610997565b611352838383611430565b6001600160a01b038316600090815260208190526040902054818110156113ca5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610997565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a361127b565b6001600160a01b0383166000908152600e602052604090205460ff1615801561147257506001600160a01b0382166000908152600e602052604090205460ff16155b156106ee576001600160a01b0382166000908152600d602052604090205460ff161580156114b957506001600160a01b0383166000908152600d602052604090205460ff16155b6114fe5760405162461bcd60e51b8152602060048201526016602482015275105b9d1a5351558e8812db9bdddb8813515588189bdd60521b6044820152606401610997565b6006548111156115505760405162461bcd60e51b815260206004820152601960248201527f4d6178207472616e73616374696f6e20657863656564656421000000000000006044820152606401610997565b6007548161155d84610800565b61156791906119ea565b11156106ee5760405162461bcd60e51b815260206004820152601360248201527213585e081dd85b1b195d08195e18d959591959606a1b6044820152606401610997565b803580151581146115bb57600080fd5b919050565b6000602082840312156115d257600080fd5b610a53826115ab565b600060208083528351808285015260005b81811015611608578581018301518582016040015282016115ec565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146115bb57600080fd5b6000806040838503121561165357600080fd5b61165c83611629565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156116a9576116a961166a565b604052919050565b600067ffffffffffffffff8211156116cb576116cb61166a565b5060051b60200190565b600082601f8301126116e657600080fd5b813560206116fb6116f6836116b1565b611680565b82815260059290921b8401810191818101908684111561171a57600080fd5b8286015b8481101561173c5761172f816115ab565b835291830191830161171e565b509695505050505050565b6000806040838503121561175a57600080fd5b823567ffffffffffffffff8082111561177257600080fd5b818501915085601f83011261178657600080fd5b813560206117966116f6836116b1565b82815260059290921b840181019181810190898411156117b557600080fd5b948201945b838610156117da576117cb86611629565b825294820194908201906117ba565b965050860135925050808211156117f057600080fd5b506117fd858286016116d5565b9150509250929050565b60008060006060848603121561181c57600080fd5b61182584611629565b925061183360208501611629565b9150604084013590509250925092565b60006020828403121561185557600080fd5b5035919050565b6000806040838503121561186f57600080fd5b61187883611629565b9150611886602084016115ab565b90509250929050565b6000602082840312156118a157600080fd5b610a5382611629565b6000806000606084860312156118bf57600080fd5b6118c884611629565b92506118d660208501611629565b91506118e460408501611629565b90509250925092565b6000806040838503121561190057600080fd5b50508035926020909101359150565b6000806000806080858703121561192557600080fd5b5050823594602084013594506040840135936060013592509050565b6000806040838503121561195457600080fd5b61195d83611629565b915061188660208401611629565b600181811c9082168061197f57607f821691505b60208210810361199f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016119e3576119e36119bb565b5060010190565b80820180821115610562576105626119bb565b600082611a1a57634e487b7160e01b600052601260045260246000fd5b500490565b81810381811115610562576105626119bb565b8082028115828204841417610562576105626119bb56fea264697066735822122092902149eb97e36b447644b16b776586b7dee3f404cfa3b6a8c08344b24bb85f64736f6c63430008120033",
  "devdoc": {
    "events": {
      "Approval(address,address,uint256)": {
        "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
      },
      "Transfer(address,address,uint256)": {
        "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
      }
    },
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 611,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "_balances",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 617,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "_allowances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 619,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 621,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "_name",
        "offset": 0,
        "slot": "3",
        "type": "t_string_storage"
      },
      {
        "astId": 623,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "_symbol",
        "offset": 0,
        "slot": "4",
        "type": "t_string_storage"
      },
      {
        "astId": 26,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "_owner",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 1191,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "detectMEV",
        "offset": 20,
        "slot": "5",
        "type": "t_bool"
      },
      {
        "astId": 1193,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "maxTx",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 1195,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "maxWallet",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 1197,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "mineBlocks",
        "offset": 0,
        "slot": "8",
        "type": "t_uint256"
      },
      {
        "astId": 1199,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "gasDelta",
        "offset": 0,
        "slot": "9",
        "type": "t_uint256"
      },
      {
        "astId": 1201,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "maxSample",
        "offset": 0,
        "slot": "10",
        "type": "t_uint256"
      },
      {
        "astId": 1203,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "avgGasPrice",
        "offset": 0,
        "slot": "11",
        "type": "t_uint256"
      },
      {
        "astId": 1205,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "gasCounter",
        "offset": 0,
        "slot": "12",
        "type": "t_uint256"
      },
      {
        "astId": 1209,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "bots",
        "offset": 0,
        "slot": "13",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 1213,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "isVIP",
        "offset": 0,
        "slot": "14",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 1217,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "lastTxBlock",
        "offset": 0,
        "slot": "15",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 1220,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "uniswapV2Router",
        "offset": 0,
        "slot": "16",
        "type": "t_contract(IUniswapV2Router02)600"
      },
      {
        "astId": 1222,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "uniswapV2Pair",
        "offset": 0,
        "slot": "17",
        "type": "t_address"
      },
      {
        "astId": 1224,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "devWallet",
        "offset": 0,
        "slot": "18",
        "type": "t_address_payable"
      },
      {
        "astId": 1226,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "burnWallet",
        "offset": 0,
        "slot": "19",
        "type": "t_address_payable"
      },
      {
        "astId": 1228,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "airdropWallet",
        "offset": 0,
        "slot": "20",
        "type": "t_address_payable"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IUniswapV2Router02)600": {
        "encoding": "inplace",
        "label": "contract IUniswapV2Router02",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}