{
  "address": "0xb2F59b4f3CE4Ad7Bd1A1cD98C2f447eD37aa9287",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dev",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_burns",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_airdrop",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isBot",
          "type": "bool"
        }
      ],
      "name": "BotAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Burned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "mineBlocks",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gasDelta",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "maxSample",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "avgGasPrice",
          "type": "uint256"
        }
      ],
      "name": "MEVUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isVIP",
          "type": "bool"
        }
      ],
      "name": "VIPAdded",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "ethAmount",
          "type": "uint256"
        }
      ],
      "name": "addLiquidity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "avgGasPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "detectMEV",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_detectMEV",
          "type": "bool"
        }
      ],
      "name": "enableMEV",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gasDelta",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isBOT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isVIP",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "lastTxBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxSample",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxWallet",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mineBlocks",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isBot",
          "type": "bool"
        }
      ],
      "name": "setBOT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_mineBlocks",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_gasDelta",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxSample",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_avgGasPrice",
          "type": "uint256"
        }
      ],
      "name": "setMEV",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_maxWallet",
          "type": "uint256"
        }
      ],
      "name": "setMaxWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_uniswapV2Pair",
          "type": "address"
        }
      ],
      "name": "setUniswapV2Pair",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isVIP",
          "type": "bool"
        }
      ],
      "name": "setVIP",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dev",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_burns",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_airdrop",
          "type": "address"
        }
      ],
      "name": "setWallets",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "txCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "uniswapV2Pair",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xef3cefcc9ab3f1d88b83dc0a8850349f7ccec5aa67e4149106189458c2c25be8",
  "receipt": {
    "to": null,
    "from": "0x5b3eC3A39403202A9C5a9e3496FbB3793B244B44",
    "contractAddress": "0xb2F59b4f3CE4Ad7Bd1A1cD98C2f447eD37aa9287",
    "transactionIndex": 0,
    "gasUsed": "4554018",
    "logsBloom": "0x
    "blockHash": "0x6399be9b3e154366c08fc5ed4569295781197d2db0c7b1401f1a0e211247db9a",
    "transactionHash": "0xef3cefcc9ab3f1d88b83dc0a8850349f7ccec5aa67e4149106189458c2c25be8",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 9352512,
        "transactionHash": "0xef3cefcc9ab3f1d88b83dc0a8850349f7ccec5aa67e4149106189458c2c25be8",
        "address": "0xb2F59b4f3CE4Ad7Bd1A1cD98C2f447eD37aa9287",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000005b3ec3a39403202a9c5a9e3496fbb3793b244b44"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x6399be9b3e154366c08fc5ed4569295781197d2db0c7b1401f1a0e211247db9a"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 9352512,
        "transactionHash": "0xef3cefcc9ab3f1d88b83dc0a8850349f7ccec5aa67e4149106189458c2c25be8",
        "address": "0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f",
        "topics": [
          "0x0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9",
          "0x000000000000000000000000b2f59b4f3ce4ad7bd1a1cd98c2f447ed37aa9287",
          "0x000000000000000000000000b4fbf271143f4fbf7b91a5ded31805e42b2208d6"
        ],
        "data": "0x00000000000000000000000029d45a0cbbefbb085faf37ce2c17999505b1ca8800000000000000000000000000000000000000000000000000000000000127c0",
        "logIndex": 1,
        "blockHash": "0x6399be9b3e154366c08fc5ed4569295781197d2db0c7b1401f1a0e211247db9a"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 9352512,
        "transactionHash": "0xef3cefcc9ab3f1d88b83dc0a8850349f7ccec5aa67e4149106189458c2c25be8",
        "address": "0xb2F59b4f3CE4Ad7Bd1A1cD98C2f447eD37aa9287",
        "topics": [
          "0xda633a71264a27905632c474143536c3964c692d30dbf9384cf1f2e87659d64c",
          "0x0000000000000000000000005b3ec3a39403202a9c5a9e3496fbb3793b244b44"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000001",
        "logIndex": 2,
        "blockHash": "0x6399be9b3e154366c08fc5ed4569295781197d2db0c7b1401f1a0e211247db9a"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 9352512,
        "transactionHash": "0xef3cefcc9ab3f1d88b83dc0a8850349f7ccec5aa67e4149106189458c2c25be8",
        "address": "0xb2F59b4f3CE4Ad7Bd1A1cD98C2f447eD37aa9287",
        "topics": [
          "0xda633a71264a27905632c474143536c3964c692d30dbf9384cf1f2e87659d64c",
          "0x000000000000000000000000b2f59b4f3ce4ad7bd1a1cd98c2f447ed37aa9287"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000001",
        "logIndex": 3,
        "blockHash": "0x6399be9b3e154366c08fc5ed4569295781197d2db0c7b1401f1a0e211247db9a"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 9352512,
        "transactionHash": "0xef3cefcc9ab3f1d88b83dc0a8850349f7ccec5aa67e4149106189458c2c25be8",
        "address": "0xb2F59b4f3CE4Ad7Bd1A1cD98C2f447eD37aa9287",
        "topics": [
          "0xda633a71264a27905632c474143536c3964c692d30dbf9384cf1f2e87659d64c",
          "0x000000000000000000000000c2657176e213ddf18646efce08f36d656abe3396"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000001",
        "logIndex": 4,
        "blockHash": "0x6399be9b3e154366c08fc5ed4569295781197d2db0c7b1401f1a0e211247db9a"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 9352512,
        "transactionHash": "0xef3cefcc9ab3f1d88b83dc0a8850349f7ccec5aa67e4149106189458c2c25be8",
        "address": "0xb2F59b4f3CE4Ad7Bd1A1cD98C2f447eD37aa9287",
        "topics": [
          "0xda633a71264a27905632c474143536c3964c692d30dbf9384cf1f2e87659d64c",
          "0x0000000000000000000000008b30998a9492610f074784aed7afdd682b23b416"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000001",
        "logIndex": 5,
        "blockHash": "0x6399be9b3e154366c08fc5ed4569295781197d2db0c7b1401f1a0e211247db9a"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 9352512,
        "transactionHash": "0xef3cefcc9ab3f1d88b83dc0a8850349f7ccec5aa67e4149106189458c2c25be8",
        "address": "0xb2F59b4f3CE4Ad7Bd1A1cD98C2f447eD37aa9287",
        "topics": [
          "0xda633a71264a27905632c474143536c3964c692d30dbf9384cf1f2e87659d64c",
          "0x000000000000000000000000e276d3ea57c5af859e52d51c2c11f5decb4c4838"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000001",
        "logIndex": 6,
        "blockHash": "0x6399be9b3e154366c08fc5ed4569295781197d2db0c7b1401f1a0e211247db9a"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 9352512,
        "transactionHash": "0xef3cefcc9ab3f1d88b83dc0a8850349f7ccec5aa67e4149106189458c2c25be8",
        "address": "0xb2F59b4f3CE4Ad7Bd1A1cD98C2f447eD37aa9287",
        "topics": [
          "0xda633a71264a27905632c474143536c3964c692d30dbf9384cf1f2e87659d64c",
          "0x00000000000000000000000029d45a0cbbefbb085faf37ce2c17999505b1ca88"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000001",
        "logIndex": 7,
        "blockHash": "0x6399be9b3e154366c08fc5ed4569295781197d2db0c7b1401f1a0e211247db9a"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 9352512,
        "transactionHash": "0xef3cefcc9ab3f1d88b83dc0a8850349f7ccec5aa67e4149106189458c2c25be8",
        "address": "0xb2F59b4f3CE4Ad7Bd1A1cD98C2f447eD37aa9287",
        "topics": [
          "0xda633a71264a27905632c474143536c3964c692d30dbf9384cf1f2e87659d64c",
          "0x0000000000000000000000007a250d5630b4cf539739df2c5dacb4c659f2488d"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000001",
        "logIndex": 8,
        "blockHash": "0x6399be9b3e154366c08fc5ed4569295781197d2db0c7b1401f1a0e211247db9a"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 9352512,
        "transactionHash": "0xef3cefcc9ab3f1d88b83dc0a8850349f7ccec5aa67e4149106189458c2c25be8",
        "address": "0xb2F59b4f3CE4Ad7Bd1A1cD98C2f447eD37aa9287",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000005b3ec3a39403202a9c5a9e3496fbb3793b244b44"
        ],
        "data": "0x0000000000000000000000000000000000000000034dc21d9178e84102f30000",
        "logIndex": 9,
        "blockHash": "0x6399be9b3e154366c08fc5ed4569295781197d2db0c7b1401f1a0e211247db9a"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 9352512,
        "transactionHash": "0xef3cefcc9ab3f1d88b83dc0a8850349f7ccec5aa67e4149106189458c2c25be8",
        "address": "0xb2F59b4f3CE4Ad7Bd1A1cD98C2f447eD37aa9287",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000c2657176e213ddf18646efce08f36d656abe3396"
        ],
        "data": "0x00000000000000000000000000000000000000000012968d4f273a8e16920000",
        "logIndex": 10,
        "blockHash": "0x6399be9b3e154366c08fc5ed4569295781197d2db0c7b1401f1a0e211247db9a"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 9352512,
        "transactionHash": "0xef3cefcc9ab3f1d88b83dc0a8850349f7ccec5aa67e4149106189458c2c25be8",
        "address": "0xb2F59b4f3CE4Ad7Bd1A1cD98C2f447eD37aa9287",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000008b30998a9492610f074784aed7afdd682b23b416"
        ],
        "data": "0x0000000000000000000000000000000000000000001be1d3f6bad7d521db0000",
        "logIndex": 11,
        "blockHash": "0x6399be9b3e154366c08fc5ed4569295781197d2db0c7b1401f1a0e211247db9a"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 9352512,
        "transactionHash": "0xef3cefcc9ab3f1d88b83dc0a8850349f7ccec5aa67e4149106189458c2c25be8",
        "address": "0xb2F59b4f3CE4Ad7Bd1A1cD98C2f447eD37aa9287",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000e276d3ea57c5af859e52d51c2c11f5decb4c4838"
        ],
        "data": "0x000000000000000000000000000000000000000000252d1a9e4e751c2d240000",
        "logIndex": 12,
        "blockHash": "0x6399be9b3e154366c08fc5ed4569295781197d2db0c7b1401f1a0e211247db9a"
      }
    ],
    "blockNumber": 9352512,
    "cumulativeGasUsed": "4554018",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xc2657176e213ddf18646efce08f36d656abe3396",
    "0x8b30998a9492610f074784aed7afdd682b23b416",
    "0xe276d3ea57c5af859e52d51c2c11f5decb4c4838"
  ],
  "numDeployments": 10,
  "solcInputHash": "02aeaf4a867e2a0cbc9fabefcdf3cd02",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dev\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_burns\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_airdrop\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isBot\",\"type\":\"bool\"}],\"name\":\"BotAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Burned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mineBlocks\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gasDelta\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxSample\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"avgGasPrice\",\"type\":\"uint256\"}],\"name\":\"MEVUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isVIP\",\"type\":\"bool\"}],\"name\":\"VIPAdded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ethAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"avgGasPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"detectMEV\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_detectMEV\",\"type\":\"bool\"}],\"name\":\"enableMEV\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gasDelta\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isBOT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isVIP\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastTxBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSample\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxWallet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mineBlocks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isBot\",\"type\":\"bool\"}],\"name\":\"setBOT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_mineBlocks\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_gasDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxSample\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_avgGasPrice\",\"type\":\"uint256\"}],\"name\":\"setMEV\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxWallet\",\"type\":\"uint256\"}],\"name\":\"setMaxWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_uniswapV2Pair\",\"type\":\"address\"}],\"name\":\"setUniswapV2Pair\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isVIP\",\"type\":\"bool\"}],\"name\":\"setVIP\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dev\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_burns\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_airdrop\",\"type\":\"address\"}],\"name\":\"setWallets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Pair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AntiMEV.sol\":\"AntiMEV\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/AntiMEV.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n/*\\n  The Anti-MEV token: https://antimev.io\\n\\n  Twitter: https://twitter.com/Anti_MEV\\n\\n  Telegram: https://t.me/antimev\\n*/\\npragma solidity ^0.8.17;\\n\\nabstract contract Context {\\n  function _msgSender() internal view virtual returns (address) {\\n    return msg.sender;\\n  }\\n\\n  function _msgData() internal view virtual returns (bytes calldata) {\\n    return msg.data;\\n  }\\n}\\n\\nabstract contract Ownable is Context {\\n  address private _owner;\\n\\n  event OwnershipTransferred(\\n    address indexed previousOwner,\\n    address indexed newOwner\\n  );\\n\\n  constructor() {\\n    _transferOwnership(_msgSender());\\n  }\\n\\n  modifier onlyOwner() {\\n    _checkOwner();\\n    _;\\n  }\\n\\n  function owner() public view virtual returns (address) {\\n    return _owner;\\n  }\\n\\n  function _checkOwner() internal view virtual {\\n    require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n  }\\n\\n  function renounceOwnership() public virtual onlyOwner {\\n    _transferOwnership(address(0));\\n  }\\n\\n  function transferOwnership(address newOwner) public virtual onlyOwner {\\n    require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n    _transferOwnership(newOwner);\\n  }\\n\\n  function _transferOwnership(address newOwner) internal virtual {\\n    address oldOwner = _owner;\\n    _owner = newOwner;\\n    emit OwnershipTransferred(oldOwner, newOwner);\\n  }\\n}\\n\\nlibrary SafeMath {\\n  function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n    unchecked {\\n      uint256 c = a + b;\\n      if (c < a) return (false, 0);\\n      return (true, c);\\n    }\\n  }\\n\\n  function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n    unchecked {\\n      if (b > a) return (false, 0);\\n      return (true, a - b);\\n    }\\n  }\\n\\n  function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n    unchecked {\\n      if (a == 0) return (true, 0);\\n      uint256 c = a * b;\\n      if (c / a != b) return (false, 0);\\n      return (true, c);\\n    }\\n  }\\n\\n  function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n    unchecked {\\n      if (b == 0) return (false, 0);\\n      return (true, a / b);\\n    }\\n  }\\n\\n  function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n    unchecked {\\n      if (b == 0) return (false, 0);\\n      return (true, a % b);\\n    }\\n  }\\n\\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return a + b;\\n  }\\n\\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return a - b;\\n  }\\n\\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return a * b;\\n  }\\n\\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return a / b;\\n  }\\n\\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return a % b;\\n  }\\n\\n  function sub(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    unchecked {\\n      require(b <= a, errorMessage);\\n      return a - b;\\n    }\\n  }\\n\\n  function div(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    unchecked {\\n      require(b > 0, errorMessage);\\n      return a / b;\\n    }\\n  }\\n\\n  function mod(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    unchecked {\\n      require(b > 0, errorMessage);\\n      return a % b;\\n    }\\n  }\\n}\\n\\ninterface IERC20 {\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n  function totalSupply() external view returns (uint256);\\n\\n  function balanceOf(address account) external view returns (uint256);\\n\\n  function transfer(address to, uint256 amount) external returns (bool);\\n\\n  function allowance(\\n    address owner,\\n    address spender\\n  ) external view returns (uint256);\\n\\n  function approve(address spender, uint256 amount) external returns (bool);\\n\\n  function transferFrom(\\n    address from,\\n    address to,\\n    uint256 amount\\n  ) external returns (bool);\\n}\\n\\ninterface IERC20Metadata is IERC20 {\\n  function name() external view returns (string memory);\\n\\n  function symbol() external view returns (string memory);\\n\\n  function decimals() external view returns (uint8);\\n}\\n\\ninterface IUniswapV2Factory {\\n  event PairCreated(\\n    address indexed token0,\\n    address indexed token1,\\n    address pair,\\n    uint\\n  );\\n\\n  function createPair(\\n    address tokenA,\\n    address tokenB\\n  ) external returns (address pair);\\n}\\n\\ninterface IUniswapV2Router02 {\\n  function factory() external pure returns (address);\\n\\n  function WETH() external pure returns (address);\\n\\n  function addLiquidityETH(\\n    address token,\\n    uint amountTokenDesired,\\n    uint amountTokenMin,\\n    uint amountETHMin,\\n    address to,\\n    uint deadline\\n  ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\\n}\\n\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n  mapping(address => uint256) private _balances;\\n  mapping(address => mapping(address => uint256)) private _allowances;\\n\\n  uint256 private _totalSupply;\\n  string private _name;\\n  string private _symbol;\\n\\n  constructor(string memory name_, string memory symbol_) {\\n    _name = name_;\\n    _symbol = symbol_;\\n  }\\n\\n  function name() public view virtual override returns (string memory) {\\n    return _name;\\n  }\\n\\n  function symbol() public view virtual override returns (string memory) {\\n    return _symbol;\\n  }\\n\\n  function decimals() public view virtual override returns (uint8) {\\n    return 18;\\n  }\\n\\n  function totalSupply() public view virtual override returns (uint256) {\\n    return _totalSupply;\\n  }\\n\\n  function balanceOf(\\n    address account\\n  ) public view virtual override returns (uint256) {\\n    return _balances[account];\\n  }\\n\\n  function transfer(\\n    address to,\\n    uint256 amount\\n  ) public virtual override returns (bool) {\\n    address owner = _msgSender();\\n    _transfer(owner, to, amount);\\n    return true;\\n  }\\n\\n  function allowance(\\n    address owner,\\n    address spender\\n  ) public view virtual override returns (uint256) {\\n    return _allowances[owner][spender];\\n  }\\n\\n  function approve(\\n    address spender,\\n    uint256 amount\\n  ) public virtual override returns (bool) {\\n    address owner = _msgSender();\\n    _approve(owner, spender, amount);\\n    return true;\\n  }\\n\\n  function transferFrom(\\n    address from,\\n    address to,\\n    uint256 amount\\n  ) public virtual override returns (bool) {\\n    address spender = _msgSender();\\n    _spendAllowance(from, spender, amount);\\n    _transfer(from, to, amount);\\n    return true;\\n  }\\n\\n  function increaseAllowance(\\n    address spender,\\n    uint256 addedValue\\n  ) public virtual returns (bool) {\\n    address owner = _msgSender();\\n    _approve(owner, spender, allowance(owner, spender) + addedValue);\\n    return true;\\n  }\\n\\n  function decreaseAllowance(\\n    address spender,\\n    uint256 subtractedValue\\n  ) public virtual returns (bool) {\\n    address owner = _msgSender();\\n    uint256 currentAllowance = allowance(owner, spender);\\n    require(\\n      currentAllowance >= subtractedValue,\\n      \\\"ERC20: decreased allowance below zero\\\"\\n    );\\n    unchecked {\\n      _approve(owner, spender, currentAllowance - subtractedValue);\\n    }\\n\\n    return true;\\n  }\\n\\n  function _transfer(\\n    address from,\\n    address to,\\n    uint256 amount\\n  ) internal virtual {\\n    require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n    require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n    _beforeTokenTransfer(from, to, amount);\\n\\n    uint256 fromBalance = _balances[from];\\n    require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n    unchecked {\\n      _balances[from] = fromBalance - amount;\\n      _balances[to] += amount;\\n    }\\n\\n    emit Transfer(from, to, amount);\\n\\n    _afterTokenTransfer(from, to, amount);\\n  }\\n\\n  function _mint(address account, uint256 amount) internal virtual {\\n    require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n    _beforeTokenTransfer(address(0), account, amount);\\n\\n    _totalSupply += amount;\\n    unchecked {\\n      _balances[account] += amount;\\n    }\\n    emit Transfer(address(0), account, amount);\\n\\n    _afterTokenTransfer(address(0), account, amount);\\n  }\\n\\n  function _burn(address account, uint256 amount) internal virtual {\\n    require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n    _beforeTokenTransfer(account, address(0), amount);\\n\\n    uint256 accountBalance = _balances[account];\\n    require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n    unchecked {\\n      _balances[account] = accountBalance - amount;\\n      _totalSupply -= amount;\\n    }\\n\\n    emit Transfer(account, address(0), amount);\\n\\n    _afterTokenTransfer(account, address(0), amount);\\n  }\\n\\n  function _approve(\\n    address owner,\\n    address spender,\\n    uint256 amount\\n  ) internal virtual {\\n    require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n    require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n    _allowances[owner][spender] = amount;\\n    emit Approval(owner, spender, amount);\\n  }\\n\\n  function _spendAllowance(\\n    address owner,\\n    address spender,\\n    uint256 amount\\n  ) internal virtual {\\n    uint256 currentAllowance = allowance(owner, spender);\\n    if (currentAllowance != type(uint256).max) {\\n      require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n      unchecked {\\n        _approve(owner, spender, currentAllowance - amount);\\n      }\\n    }\\n  }\\n\\n  function _beforeTokenTransfer(\\n    address from,\\n    address to,\\n    uint256 amount\\n  ) internal virtual {}\\n\\n  function _afterTokenTransfer(\\n    address from,\\n    address to,\\n    uint256 amount\\n  ) internal virtual {}\\n}\\n\\n//import \\\"hardhat/console.sol\\\";\\ncontract AntiMEV is ERC20, Ownable {\\n  using SafeMath for uint256;\\n\\n  bool public detectMEV;\\n  uint256 public maxWallet;\\n  uint256 public mineBlocks;\\n  uint256 public gasDelta;\\n  uint256 public maxSample;\\n  uint256 public avgGasPrice;\\n  uint256 public txCounter;\\n\\n  mapping(address => bool) public isBOT; // MEV bots\\n  mapping(address => bool) public isVIP; // VIP addresses\\n  mapping(address => uint256) public lastTxBlock; // block number for address's last tx\\n\\n  IUniswapV2Router02 private immutable uniswapV2Router;\\n  address public uniswapV2Pair;\\n\\n  address private dev;\\n  address private burns;\\n  address private airdrop;\\n\\n  event Burned(address indexed user, uint256 amount);\\n  event VIPAdded(address indexed account, bool isVIP);\\n  event BotAdded(address indexed account, bool isBot);\\n  event MEVUpdated(\\n    uint256 mineBlocks,\\n    uint256 gasDelta,\\n    uint256 maxSample,\\n    uint256 avgGasPrice\\n  );\\n\\n  constructor(\\n    address _dev,\\n    address _burns,\\n    address _airdrop\\n  ) payable ERC20(\\\"AntiMEV\\\", \\\"AntiMEV\\\") {\\n    uint256 _totalSupply = 1123581321 * 10 ** 18; // 1.12 Billion Fibonacci\\n    maxWallet = _totalSupply.mul(49).div(1000); // 4.9% of total supply\\n\\n    detectMEV = true; // enable MEV detection\\n    mineBlocks = 3; // blocks to mine before 2nd tx\\n    avgGasPrice = 1e9; // initial rolling average gas price\\n    gasDelta = 25; // increase in gas price to be considered bribe\\n    maxSample = 10; // number of blocks to calculate average gas price\\n    txCounter = 0; // counter used to calculate average gas price\\n\\n    IUniswapV2Router02 _uniswapV2Router = IUniswapV2Router02(\\n      0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D\\n    );\\n    uniswapV2Router = _uniswapV2Router;\\n\\n    uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(\\n      address(this),\\n      _uniswapV2Router.WETH()\\n    );\\n\\n    dev = address(_dev);\\n    burns = address(_burns);\\n    airdrop = address(_airdrop);\\n\\n    setVIP(msg.sender, true);\\n    setVIP(address(this), true);\\n    setVIP(dev, true);\\n    setVIP(burns, true);\\n    setVIP(airdrop, true);\\n    setVIP(uniswapV2Pair, true);\\n    setVIP(address(uniswapV2Router), true);\\n\\n    _mint(msg.sender, _totalSupply.mul(91).div(100));\\n    _mint(dev, _totalSupply.mul(2).div(100));\\n    _mint(burns, _totalSupply.mul(3).div(100));\\n    _mint(airdrop, _totalSupply.mul(4).div(100));\\n  }\\n\\n  // use rolling average of gas price to detect gas bribes\\n  function detectGasBribe(address from, address to) private {\\n    // increment first to avoid divide by zero\\n    txCounter += 1;\\n    avgGasPrice =\\n      (avgGasPrice * (txCounter - 1)) /\\n      txCounter +\\n      tx.gasprice /\\n      txCounter;\\n    // detect bribes by comparing tx price to rolling average\\n    if (from == uniswapV2Pair && !isVIP[to]) {\\n      if (\\n        tx.gasprice >= avgGasPrice.add(avgGasPrice.mul(gasDelta).div(100)) &&\\n        txCounter > 1\\n      ) {\\n        revert(\\\"AntiMEV: Gas bribe detected, possible front-run\\\");\\n      }\\n    }\\n    if (from != address(uniswapV2Router) && to == uniswapV2Pair) {\\n      if (\\n        tx.gasprice <= avgGasPrice.sub(avgGasPrice.mul(gasDelta).div(100)) &&\\n        txCounter > 1\\n      ) {\\n        revert(\\\"AntiMEV: Gas bribe detected, possible front-run\\\");\\n      }\\n    }\\n    // reset avgGasPrice if sample size too large\\n    if (txCounter > maxSample) {\\n      avgGasPrice = tx.gasprice;\\n      txCounter = 0;\\n    }\\n  }\\n\\n  // use block number of last tx to detect sandwich attacks\\n  function detectSandwich(address from, address to) private {\\n    // handle buy\\n    if (from == uniswapV2Pair && !isVIP[to]) {\\n      if (block.number == lastTxBlock[to]) {\\n        _setBOT(to, true);\\n\\n      }\\n\\n      if (block.number > lastTxBlock[to] + mineBlocks) {\\n        lastTxBlock[to] = block.number;\\n      } else {\\n        revert(\\\"AntiMEV: Sandwich attack detected - Reverted\\\");\\n      }\\n\\n      // handle sell\\n      if (to == uniswapV2Pair && !isVIP[from]) {\\n        if (block.number == lastTxBlock[from]) {\\n          _setBOT(from, true);\\n          revert(\\\"AntiMEV: Sandwich attack detected - Reverted\\\");\\n        }\\n\\n        if (block.number > lastTxBlock[from] + mineBlocks) {\\n          lastTxBlock[from] = block.number;\\n        } else {\\n          revert(\\\"AntiMEV: Sandwich attack detected - Reverted\\\");\\n        }\\n      }\\n    }\\n  }\\n\\n  function addLiquidity(\\n    uint256 tokenAmount,\\n    uint256 ethAmount\\n  ) external onlyOwner {\\n    // Approve the Uniswap router to spend the token amount\\n    _approve(address(this), address(uniswapV2Router), tokenAmount);\\n\\n    // Add the liquidity\\n    uniswapV2Router.addLiquidityETH{value: ethAmount}(\\n      address(this),\\n      tokenAmount,\\n      0,\\n      0,\\n      owner(), // Liquidity tokens are sent to the owner\\n      block.timestamp // deadline\\n    );\\n  }\\n\\n  // check if address is a BOT\\n  // check if maxWallet exceeded\\n  function _beforeTokenTransfer(\\n    address from,\\n    address to,\\n    uint256 amount\\n  ) internal virtual override {\\n    require(!isBOT[to] && !isBOT[from], \\\"AntiMEV: Known MEV bot\\\");\\n    if (from == uniswapV2Pair && !isVIP[to]) {\\n      require(\\n        super.balanceOf(to) + amount <= maxWallet,\\n        \\\"Max wallet exceeded!\\\"\\n      );\\n    }\\n  }\\n\\n  // if detectMEV is enabled, test for sandwich and frontrunner attacks\\n  function transfer(address to, uint256 amount) public override returns (bool) {\\n    if (detectMEV) {\\n      // test for sandwich\\n      detectSandwich(msg.sender, to);\\n      // test for frontrunner\\n      detectGasBribe(msg.sender, to);\\n    }\\n    return super.transfer(to, amount);\\n  }\\n\\n  // if detectMEV is enabled, test for sandwich and frontrunner attacks\\n  function transferFrom(\\n    address from,\\n    address to,\\n    uint256 amount\\n  ) public override returns (bool) {\\n    if (detectMEV) {\\n      // test for sandwich\\n      detectSandwich(from, to);\\n      // test for frontrunner\\n      detectGasBribe(from, to);\\n    }\\n    return super.transferFrom(from, to, amount);\\n  }\\n\\n  function enableMEV(bool _detectMEV) external onlyOwner {\\n    detectMEV = _detectMEV;\\n  }\\n\\n  function setMEV(\\n    uint256 _mineBlocks,\\n    uint256 _gasDelta,\\n    uint256 _maxSample,\\n    uint256 _avgGasPrice\\n  ) external onlyOwner {\\n    mineBlocks = _mineBlocks;\\n    gasDelta = _gasDelta;\\n    maxSample = _maxSample;\\n    avgGasPrice = _avgGasPrice;\\n    emit MEVUpdated(_mineBlocks, _gasDelta, _maxSample, _avgGasPrice);\\n  }\\n\\n  function setVIP(address _address, bool _isVIP) public onlyOwner {\\n    // require that _address is not a BOT\\n    require(!isBOT[_address], \\\"AntiMEV: Cannot set BOT to VIP\\\");\\n    isVIP[_address] = _isVIP;\\n    emit VIPAdded(_address, _isVIP);\\n  }\\n\\n  function _setVIP(address _address, bool _isVIP) internal {\\n    require(!isBOT[_address], \\\"AntiMEV: Cannot set BOT to VIP\\\");\\n    isVIP[_address] = _isVIP;\\n    emit VIPAdded(_address, _isVIP);\\n  }\\n\\n  function setBOT(address _address, bool _isBot) public onlyOwner {\\n    // require that _address is not a VIP\\n    require(\\n      _address != owner() && _address != address(this) && !isVIP[_address],\\n      \\\"AntiMEV: Cannot set VIP to BOT\\\"\\n    );\\n    isBOT[_address] = _isBot;\\n    emit BotAdded(_address, _isBot);\\n  }\\n\\n  function _setBOT(address _address, bool _isBot) internal {\\n    require(\\n      _address != owner() && _address != address(this) && !isVIP[_address],\\n      \\\"AntiMEV: Cannot set VIP to BOT\\\"\\n    );\\n    isBOT[_address] = _isBot;\\n    emit BotAdded(_address, _isBot);\\n  }\\n\\n  function setMaxWallet(uint256 _maxWallet) external onlyOwner {\\n    maxWallet = _maxWallet;\\n  }\\n\\n  function setWallets(\\n    address _dev,\\n    address _burns,\\n    address _airdrop\\n  ) external onlyOwner {\\n    dev = _dev;\\n    burns = _burns;\\n    airdrop = _airdrop;\\n  }\\n\\n  function setUniswapV2Pair(address _uniswapV2Pair) external onlyOwner {\\n    uniswapV2Pair = _uniswapV2Pair;\\n  }\\n\\n  function burn(uint256 value) external onlyOwner {\\n    _burn(msg.sender, value);\\n    emit Burned(msg.sender, value);\\n  }\\n}\\n\",\"keccak256\":\"0x9a5c3a896b088f82eb42a3c7dd5c478f0108681cca328ace8800a73f37621df1\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040526040516200238f3803806200238f833981016040819052620000269162000808565b60408051808201825260078082526620b73a34a6a2ab60c91b6020808401829052845180860190955291845290830152906003620000658382620008f6565b506004620000748282620008f6565b505050620000916200008b6200040560201b60201c565b62000409565b6b03a1679975a96fc068840000620000d26103e8620000be8360316200045b602090811b62000b7b17901c565b6200047260201b62000b871790919060201c565b6006556005805460ff60a01b1916600160a01b1790556003600755633b9aca00600a90815560196008556009556000600b55737a250d5630b4cf539739df2c5dacb4c659f2488d60808190526040805163c45a015560e01b81529051829163c45a01559160048083019260209291908290030181865afa1580156200015b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001819190620009c2565b6001600160a01b031663c9c6539630836001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015620001cf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001f59190620009c2565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af115801562000243573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002699190620009c2565b600f80546001600160a01b03199081166001600160a01b039384161790915560108054821688841617905560118054821687841617905560128054909116918516919091179055620002bd33600162000480565b620002ca30600162000480565b601054620002e3906001600160a01b0316600162000480565b601154620002fc906001600160a01b0316600162000480565b60125462000315906001600160a01b0316600162000480565b600f546200032e906001600160a01b0316600162000480565b6080516200033e90600162000480565b6200036a33620003646064620000be605b876200045b60201b62000b7b1790919060201c565b62000558565b6010546200039a906001600160a01b0316620003646064620000be8660026200045b602090811b62000b7b17901c565b601154620003ca906001600160a01b0316620003646064620000be8660036200045b602090811b62000b7b17901c565b601254620003fa906001600160a01b0316620003646064620000be8660046200045b602090811b62000b7b17901c565b505050505062000a49565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000620004698284620009f6565b90505b92915050565b600062000469828462000a10565b6200048a62000629565b6001600160a01b0382166000908152600c602052604090205460ff1615620004f95760405162461bcd60e51b815260206004820152601e60248201527f416e74694d45563a2043616e6e6f742073657420424f5420746f20564950000060448201526064015b60405180910390fd5b6001600160a01b0382166000818152600d6020908152604091829020805460ff191685151590811790915591519182527fda633a71264a27905632c474143536c3964c692d30dbf9384cf1f2e87659d64c910160405180910390a25050565b6001600160a01b038216620005b05760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401620004f0565b620005be6000838362000687565b8060026000828254620005d2919062000a33565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6005546001600160a01b03163314620006855760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401620004f0565b565b6001600160a01b0382166000908152600c602052604090205460ff16158015620006ca57506001600160a01b0383166000908152600c602052604090205460ff16155b620007185760405162461bcd60e51b815260206004820152601660248201527f416e74694d45563a204b6e6f776e204d455620626f74000000000000000000006044820152606401620004f0565b600f546001600160a01b0384811691161480156200074f57506001600160a01b0382166000908152600d602052604090205460ff16155b15620007cb57600654816200076f84620007d060201b620006f81760201c565b6200077b919062000a33565b1115620007cb5760405162461bcd60e51b815260206004820152601460248201527f4d61782077616c6c6574206578636565646564210000000000000000000000006044820152606401620004f0565b505050565b6001600160a01b031660009081526020819052604090205490565b80516001600160a01b03811681146200080357600080fd5b919050565b6000806000606084860312156200081e57600080fd5b6200082984620007eb565b92506200083960208501620007eb565b91506200084960408501620007eb565b90509250925092565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200087d57607f821691505b6020821081036200089e57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620007cb57600081815260208120601f850160051c81016020861015620008cd5750805b601f850160051c820191505b81811015620008ee57828155600101620008d9565b505050505050565b81516001600160401b0381111562000912576200091262000852565b6200092a8162000923845462000868565b84620008a4565b602080601f831160018114620009625760008415620009495750858301515b600019600386901b1c1916600185901b178555620008ee565b600085815260208120601f198616915b82811015620009935788860151825594840194600190910190840162000972565b5085821015620009b25787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208284031215620009d557600080fd5b6200046982620007eb565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176200046c576200046c620009e0565b60008262000a2e57634e487b7160e01b600052601260045260246000fd5b500490565b808201808211156200046c576200046c620009e0565b60805161191c62000a736000396000818161078b015281816107b20152610f69015261191c6000f3fe608060405234801561001057600080fd5b50600436106102065760003560e01c806375cb1bd11161011a578063a7ae210a116100ad578063dd62ed3e1161007c578063dd62ed3e14610436578063e658423814610449578063f2fde38b1461045c578063f4201c3c1461046f578063f8b45b051461049257600080fd5b8063a7ae210a146103d7578063a9059cbb146103e0578063ceb88a16146103f3578063d89491401461041357600080fd5b80639cd441da116100e95780639cd441da1461038b578063a29a60891461039e578063a457c2d7146103b1578063a6ccf7e5146103c457600080fd5b806375cb1bd11461034b5780638da5cb5b1461035e57806392181ec61461036f57806395d89b411461038357600080fd5b8063395093511161019d5780636381f2b11161016c5780636381f2b11461030b57806369ab300d1461031457806370a0823114610327578063715018a61461033a57806374f079b81461034257600080fd5b806339509351146102a757806342966c68146102ba57806349bd5a5e146102cd5780635d0044ca146102f857600080fd5b806323b872dd116101d957806323b872dd14610267578063265b957b1461027a5780632774ee0c14610283578063313ce5671461029857600080fd5b806306fdde031461020b578063095ea7b31461022957806318160ddd1461024c57806321c609c21461025e575b600080fd5b61021361049b565b6040516102209190611597565b60405180910390f35b61023c610237366004611601565b61052d565b6040519015158152602001610220565b6002545b604051908152602001610220565b61025060075481565b61023c61027536600461162b565b610547565b61025060085481565b610296610291366004611677565b610583565b005b60405160128152602001610220565b61023c6102b5366004611601565b6105a9565b6102966102c8366004611692565b6105cb565b600f546102e0906001600160a01b031681565b6040516001600160a01b039091168152602001610220565b610296610306366004611692565b610615565b61025060095481565b6102966103223660046116ab565b610622565b6102506103353660046116de565b6106f8565b610296610713565b610250600b5481565b6102966103593660046116f9565b610727565b6005546001600160a01b03166102e0565b60055461023c90600160a01b900460ff1681565b61021361076e565b61029661039936600461173c565b61077d565b6102966103ac3660046116de565b61088b565b61023c6103bf366004611601565b6108b5565b6102966103d236600461175e565b61093b565b610250600a5481565b61023c6103ee366004611601565b6109a5565b6102506104013660046116de565b600e6020526000908152604090205481565b61023c6104213660046116de565b600c6020526000908152604090205460ff1681565b610250610444366004611790565b6109df565b6102966104573660046116ab565b610a0a565b61029661046a3660046116de565b610b02565b61023c61047d3660046116de565b600d6020526000908152604090205460ff1681565b61025060065481565b6060600380546104aa906117ba565b80601f01602080910402602001604051908101604052809291908181526020018280546104d6906117ba565b80156105235780601f106104f857610100808354040283529160200191610523565b820191906000526020600020905b81548152906001019060200180831161050657829003601f168201915b5050505050905090565b60003361053b818585610b93565b60019150505b92915050565b600554600090600160a01b900460ff1615610570576105668484610cb8565b6105708484610e79565b61057b84848461102a565b949350505050565b61058b611043565b60058054911515600160a01b0260ff60a01b19909216919091179055565b60003361053b8185856105bc83836109df565b6105c6919061180a565b610b93565b6105d3611043565b6105dd338261109d565b60405181815233907f696de425f79f4a40bc6d2122ca50507f0efbeabbff86a84871b7196ab8ea8df79060200160405180910390a250565b61061d611043565b600655565b61062a611043565b6001600160a01b0382166000908152600c602052604090205460ff16156106985760405162461bcd60e51b815260206004820152601e60248201527f416e74694d45563a2043616e6e6f742073657420424f5420746f20564950000060448201526064015b60405180910390fd5b6001600160a01b0382166000818152600d6020908152604091829020805460ff191685151590811790915591519182527fda633a71264a27905632c474143536c3964c692d30dbf9384cf1f2e87659d64c91015b60405180910390a25050565b6001600160a01b031660009081526020819052604090205490565b61071b611043565b61072560006111d8565b565b61072f611043565b601080546001600160a01b039485166001600160a01b031991821617909155601180549385169382169390931790925560128054919093169116179055565b6060600480546104aa906117ba565b610785611043565b6107b0307f000000000000000000000000000000000000000000000000000000000000000084610b93565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f305d7198230856000806107f76005546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af115801561085f573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610884919061181d565b5050505050565b610893611043565b600f80546001600160a01b0319166001600160a01b0392909216919091179055565b600033816108c382866109df565b9050838110156109235760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161068f565b6109308286868403610b93565b506001949350505050565b610943611043565b600784905560088390556009829055600a8190556040805185815260208101859052908101839052606081018290527f14fd6f32fdaec8482ac6b00207414b60d714be451bc189769f2cdf1e85e881209060800160405180910390a150505050565b600554600090600160a01b900460ff16156109ce576109c43384610cb8565b6109ce3384610e79565b6109d8838361122a565b9392505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610a12611043565b6005546001600160a01b03838116911614801590610a3957506001600160a01b0382163014155b8015610a5e57506001600160a01b0382166000908152600d602052604090205460ff16155b610aaa5760405162461bcd60e51b815260206004820152601e60248201527f416e74694d45563a2043616e6e6f74207365742056495020746f20424f540000604482015260640161068f565b6001600160a01b0382166000818152600c6020908152604091829020805460ff191685151590811790915591519182527f0cc5910ce116d1d71aa48f1ccd5e978315791068133c0c6aa7540ab8c9a8796d91016106ec565b610b0a611043565b6001600160a01b038116610b6f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161068f565b610b78816111d8565b50565b60006109d8828461184b565b60006109d88284611862565b6001600160a01b038316610bf55760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161068f565b6001600160a01b038216610c565760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161068f565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b600f546001600160a01b038381169116148015610cee57506001600160a01b0381166000908152600d602052604090205460ff16155b15610e75576001600160a01b0381166000908152600e60205260409020544303610d1d57610d1d816001610a12565b6007546001600160a01b0382166000908152600e6020526040902054610d43919061180a565b431115610d6a576001600160a01b0381166000908152600e60205260409020439055610dc7565b60405162461bcd60e51b815260206004820152602c60248201527f416e74694d45563a2053616e64776963682061747461636b206465746563746560448201526b19080b4814995d995c9d195960a21b606482015260840161068f565b600f546001600160a01b038281169116148015610dfd57506001600160a01b0382166000908152600d602052604090205460ff16155b15610e75576001600160a01b0382166000908152600e60205260409020544303610e2c57610d6a826001610a12565b6007546001600160a01b0383166000908152600e6020526040902054610e52919061180a565b431115610d6a576001600160a01b0382166000908152600e602052604090204390555b5050565b6001600b6000828254610e8c919061180a565b9091555050600b54610e9e903a611862565b600b54610eac600182611884565b600a54610eb9919061184b565b610ec39190611862565b610ecd919061180a565b600a55600f546001600160a01b038381169116148015610f0657506001600160a01b0381166000908152600d602052604090205460ff16155b15610f6757610f39610f306064610f2a600854600a54610b7b90919063ffffffff16565b90610b87565b600a5490611238565b3a10158015610f4a57506001600b54115b15610f675760405162461bcd60e51b815260040161068f90611897565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b031614158015610fb65750600f546001600160a01b038281169116145b1561101157610fe3610fda6064610f2a600854600a54610b7b90919063ffffffff16565b600a5490611244565b3a11158015610ff457506001600b54115b156110115760405162461bcd60e51b815260040161068f90611897565b600954600b541115610e75573a600a556000600b555050565b600033611038858285611250565b6109308585856112ca565b6005546001600160a01b031633146107255760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161068f565b6001600160a01b0382166110fd5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161068f565b61110982600083611479565b6001600160a01b0382166000908152602081905260409020548181101561117d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161068f565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101610cab565b505050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60003361053b8185856112ca565b60006109d8828461180a565b60006109d88284611884565b600061125c84846109df565b905060001981146112c457818110156112b75760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161068f565b6112c48484848403610b93565b50505050565b6001600160a01b03831661132e5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161068f565b6001600160a01b0382166113905760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161068f565b61139b838383611479565b6001600160a01b038316600090815260208190526040902054818110156114135760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161068f565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36112c4565b6001600160a01b0382166000908152600c602052604090205460ff161580156114bb57506001600160a01b0383166000908152600c602052604090205460ff16155b6115005760405162461bcd60e51b8152602060048201526016602482015275105b9d1a5351558e8812db9bdddb8813515588189bdd60521b604482015260640161068f565b600f546001600160a01b03848116911614801561153657506001600160a01b0382166000908152600d602052604090205460ff16155b156111d35760065481611548846106f8565b611552919061180a565b11156111d35760405162461bcd60e51b81526020600482015260146024820152734d61782077616c6c65742065786365656465642160601b604482015260640161068f565b600060208083528351808285015260005b818110156115c4578581018301518582016040015282016115a8565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146115fc57600080fd5b919050565b6000806040838503121561161457600080fd5b61161d836115e5565b946020939093013593505050565b60008060006060848603121561164057600080fd5b611649846115e5565b9250611657602085016115e5565b9150604084013590509250925092565b803580151581146115fc57600080fd5b60006020828403121561168957600080fd5b6109d882611667565b6000602082840312156116a457600080fd5b5035919050565b600080604083850312156116be57600080fd5b6116c7836115e5565b91506116d560208401611667565b90509250929050565b6000602082840312156116f057600080fd5b6109d8826115e5565b60008060006060848603121561170e57600080fd5b611717846115e5565b9250611725602085016115e5565b9150611733604085016115e5565b90509250925092565b6000806040838503121561174f57600080fd5b50508035926020909101359150565b6000806000806080858703121561177457600080fd5b5050823594602084013594506040840135936060013592509050565b600080604083850312156117a357600080fd5b6117ac836115e5565b91506116d5602084016115e5565b600181811c908216806117ce57607f821691505b6020821081036117ee57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610541576105416117f4565b60008060006060848603121561183257600080fd5b8351925060208401519150604084015190509250925092565b8082028115828204841417610541576105416117f4565b60008261187f57634e487b7160e01b600052601260045260246000fd5b500490565b81810381811115610541576105416117f4565b6020808252602f908201527f416e74694d45563a204761732062726962652064657465637465642c20706f7360408201526e39b4b1363290333937b73a16b93ab760891b60608201526080019056fea2646970667358221220036a1cfb52c55da292da8dfdaf6a2b2fb6f6aa3edc626d933398afb718f3daaf64736f6c63430008120033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106102065760003560e01c806375cb1bd11161011a578063a7ae210a116100ad578063dd62ed3e1161007c578063dd62ed3e14610436578063e658423814610449578063f2fde38b1461045c578063f4201c3c1461046f578063f8b45b051461049257600080fd5b8063a7ae210a146103d7578063a9059cbb146103e0578063ceb88a16146103f3578063d89491401461041357600080fd5b80639cd441da116100e95780639cd441da1461038b578063a29a60891461039e578063a457c2d7146103b1578063a6ccf7e5146103c457600080fd5b806375cb1bd11461034b5780638da5cb5b1461035e57806392181ec61461036f57806395d89b411461038357600080fd5b8063395093511161019d5780636381f2b11161016c5780636381f2b11461030b57806369ab300d1461031457806370a0823114610327578063715018a61461033a57806374f079b81461034257600080fd5b806339509351146102a757806342966c68146102ba57806349bd5a5e146102cd5780635d0044ca146102f857600080fd5b806323b872dd116101d957806323b872dd14610267578063265b957b1461027a5780632774ee0c14610283578063313ce5671461029857600080fd5b806306fdde031461020b578063095ea7b31461022957806318160ddd1461024c57806321c609c21461025e575b600080fd5b61021361049b565b6040516102209190611597565b60405180910390f35b61023c610237366004611601565b61052d565b6040519015158152602001610220565b6002545b604051908152602001610220565b61025060075481565b61023c61027536600461162b565b610547565b61025060085481565b610296610291366004611677565b610583565b005b60405160128152602001610220565b61023c6102b5366004611601565b6105a9565b6102966102c8366004611692565b6105cb565b600f546102e0906001600160a01b031681565b6040516001600160a01b039091168152602001610220565b610296610306366004611692565b610615565b61025060095481565b6102966103223660046116ab565b610622565b6102506103353660046116de565b6106f8565b610296610713565b610250600b5481565b6102966103593660046116f9565b610727565b6005546001600160a01b03166102e0565b60055461023c90600160a01b900460ff1681565b61021361076e565b61029661039936600461173c565b61077d565b6102966103ac3660046116de565b61088b565b61023c6103bf366004611601565b6108b5565b6102966103d236600461175e565b61093b565b610250600a5481565b61023c6103ee366004611601565b6109a5565b6102506104013660046116de565b600e6020526000908152604090205481565b61023c6104213660046116de565b600c6020526000908152604090205460ff1681565b610250610444366004611790565b6109df565b6102966104573660046116ab565b610a0a565b61029661046a3660046116de565b610b02565b61023c61047d3660046116de565b600d6020526000908152604090205460ff1681565b61025060065481565b6060600380546104aa906117ba565b80601f01602080910402602001604051908101604052809291908181526020018280546104d6906117ba565b80156105235780601f106104f857610100808354040283529160200191610523565b820191906000526020600020905b81548152906001019060200180831161050657829003601f168201915b5050505050905090565b60003361053b818585610b93565b60019150505b92915050565b600554600090600160a01b900460ff1615610570576105668484610cb8565b6105708484610e79565b61057b84848461102a565b949350505050565b61058b611043565b60058054911515600160a01b0260ff60a01b19909216919091179055565b60003361053b8185856105bc83836109df565b6105c6919061180a565b610b93565b6105d3611043565b6105dd338261109d565b60405181815233907f696de425f79f4a40bc6d2122ca50507f0efbeabbff86a84871b7196ab8ea8df79060200160405180910390a250565b61061d611043565b600655565b61062a611043565b6001600160a01b0382166000908152600c602052604090205460ff16156106985760405162461bcd60e51b815260206004820152601e60248201527f416e74694d45563a2043616e6e6f742073657420424f5420746f20564950000060448201526064015b60405180910390fd5b6001600160a01b0382166000818152600d6020908152604091829020805460ff191685151590811790915591519182527fda633a71264a27905632c474143536c3964c692d30dbf9384cf1f2e87659d64c91015b60405180910390a25050565b6001600160a01b031660009081526020819052604090205490565b61071b611043565b61072560006111d8565b565b61072f611043565b601080546001600160a01b039485166001600160a01b031991821617909155601180549385169382169390931790925560128054919093169116179055565b6060600480546104aa906117ba565b610785611043565b6107b0307f000000000000000000000000000000000000000000000000000000000000000084610b93565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f305d7198230856000806107f76005546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af115801561085f573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610884919061181d565b5050505050565b610893611043565b600f80546001600160a01b0319166001600160a01b0392909216919091179055565b600033816108c382866109df565b9050838110156109235760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161068f565b6109308286868403610b93565b506001949350505050565b610943611043565b600784905560088390556009829055600a8190556040805185815260208101859052908101839052606081018290527f14fd6f32fdaec8482ac6b00207414b60d714be451bc189769f2cdf1e85e881209060800160405180910390a150505050565b600554600090600160a01b900460ff16156109ce576109c43384610cb8565b6109ce3384610e79565b6109d8838361122a565b9392505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610a12611043565b6005546001600160a01b03838116911614801590610a3957506001600160a01b0382163014155b8015610a5e57506001600160a01b0382166000908152600d602052604090205460ff16155b610aaa5760405162461bcd60e51b815260206004820152601e60248201527f416e74694d45563a2043616e6e6f74207365742056495020746f20424f540000604482015260640161068f565b6001600160a01b0382166000818152600c6020908152604091829020805460ff191685151590811790915591519182527f0cc5910ce116d1d71aa48f1ccd5e978315791068133c0c6aa7540ab8c9a8796d91016106ec565b610b0a611043565b6001600160a01b038116610b6f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161068f565b610b78816111d8565b50565b60006109d8828461184b565b60006109d88284611862565b6001600160a01b038316610bf55760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161068f565b6001600160a01b038216610c565760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161068f565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b600f546001600160a01b038381169116148015610cee57506001600160a01b0381166000908152600d602052604090205460ff16155b15610e75576001600160a01b0381166000908152600e60205260409020544303610d1d57610d1d816001610a12565b6007546001600160a01b0382166000908152600e6020526040902054610d43919061180a565b431115610d6a576001600160a01b0381166000908152600e60205260409020439055610dc7565b60405162461bcd60e51b815260206004820152602c60248201527f416e74694d45563a2053616e64776963682061747461636b206465746563746560448201526b19080b4814995d995c9d195960a21b606482015260840161068f565b600f546001600160a01b038281169116148015610dfd57506001600160a01b0382166000908152600d602052604090205460ff16155b15610e75576001600160a01b0382166000908152600e60205260409020544303610e2c57610d6a826001610a12565b6007546001600160a01b0383166000908152600e6020526040902054610e52919061180a565b431115610d6a576001600160a01b0382166000908152600e602052604090204390555b5050565b6001600b6000828254610e8c919061180a565b9091555050600b54610e9e903a611862565b600b54610eac600182611884565b600a54610eb9919061184b565b610ec39190611862565b610ecd919061180a565b600a55600f546001600160a01b038381169116148015610f0657506001600160a01b0381166000908152600d602052604090205460ff16155b15610f6757610f39610f306064610f2a600854600a54610b7b90919063ffffffff16565b90610b87565b600a5490611238565b3a10158015610f4a57506001600b54115b15610f675760405162461bcd60e51b815260040161068f90611897565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b031614158015610fb65750600f546001600160a01b038281169116145b1561101157610fe3610fda6064610f2a600854600a54610b7b90919063ffffffff16565b600a5490611244565b3a11158015610ff457506001600b54115b156110115760405162461bcd60e51b815260040161068f90611897565b600954600b541115610e75573a600a556000600b555050565b600033611038858285611250565b6109308585856112ca565b6005546001600160a01b031633146107255760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161068f565b6001600160a01b0382166110fd5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161068f565b61110982600083611479565b6001600160a01b0382166000908152602081905260409020548181101561117d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161068f565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101610cab565b505050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60003361053b8185856112ca565b60006109d8828461180a565b60006109d88284611884565b600061125c84846109df565b905060001981146112c457818110156112b75760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161068f565b6112c48484848403610b93565b50505050565b6001600160a01b03831661132e5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161068f565b6001600160a01b0382166113905760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161068f565b61139b838383611479565b6001600160a01b038316600090815260208190526040902054818110156114135760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161068f565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36112c4565b6001600160a01b0382166000908152600c602052604090205460ff161580156114bb57506001600160a01b0383166000908152600c602052604090205460ff16155b6115005760405162461bcd60e51b8152602060048201526016602482015275105b9d1a5351558e8812db9bdddb8813515588189bdd60521b604482015260640161068f565b600f546001600160a01b03848116911614801561153657506001600160a01b0382166000908152600d602052604090205460ff16155b156111d35760065481611548846106f8565b611552919061180a565b11156111d35760405162461bcd60e51b81526020600482015260146024820152734d61782077616c6c65742065786365656465642160601b604482015260640161068f565b600060208083528351808285015260005b818110156115c4578581018301518582016040015282016115a8565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146115fc57600080fd5b919050565b6000806040838503121561161457600080fd5b61161d836115e5565b946020939093013593505050565b60008060006060848603121561164057600080fd5b611649846115e5565b9250611657602085016115e5565b9150604084013590509250925092565b803580151581146115fc57600080fd5b60006020828403121561168957600080fd5b6109d882611667565b6000602082840312156116a457600080fd5b5035919050565b600080604083850312156116be57600080fd5b6116c7836115e5565b91506116d560208401611667565b90509250929050565b6000602082840312156116f057600080fd5b6109d8826115e5565b60008060006060848603121561170e57600080fd5b611717846115e5565b9250611725602085016115e5565b9150611733604085016115e5565b90509250925092565b6000806040838503121561174f57600080fd5b50508035926020909101359150565b6000806000806080858703121561177457600080fd5b5050823594602084013594506040840135936060013592509050565b600080604083850312156117a357600080fd5b6117ac836115e5565b91506116d5602084016115e5565b600181811c908216806117ce57607f821691505b6020821081036117ee57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610541576105416117f4565b60008060006060848603121561183257600080fd5b8351925060208401519150604084015190509250925092565b8082028115828204841417610541576105416117f4565b60008261187f57634e487b7160e01b600052601260045260246000fd5b500490565b81810381811115610541576105416117f4565b6020808252602f908201527f416e74694d45563a204761732062726962652064657465637465642c20706f7360408201526e39b4b1363290333937b73a16b93ab760891b60608201526080019056fea2646970667358221220036a1cfb52c55da292da8dfdaf6a2b2fb6f6aa3edc626d933398afb718f3daaf64736f6c63430008120033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 565,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "_balances",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 571,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "_allowances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 573,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 575,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "_name",
        "offset": 0,
        "slot": "3",
        "type": "t_string_storage"
      },
      {
        "astId": 577,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "_symbol",
        "offset": 0,
        "slot": "4",
        "type": "t_string_storage"
      },
      {
        "astId": 24,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "_owner",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 1126,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "detectMEV",
        "offset": 20,
        "slot": "5",
        "type": "t_bool"
      },
      {
        "astId": 1128,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "maxWallet",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 1130,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "mineBlocks",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 1132,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "gasDelta",
        "offset": 0,
        "slot": "8",
        "type": "t_uint256"
      },
      {
        "astId": 1134,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "maxSample",
        "offset": 0,
        "slot": "9",
        "type": "t_uint256"
      },
      {
        "astId": 1136,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "avgGasPrice",
        "offset": 0,
        "slot": "10",
        "type": "t_uint256"
      },
      {
        "astId": 1138,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "txCounter",
        "offset": 0,
        "slot": "11",
        "type": "t_uint256"
      },
      {
        "astId": 1142,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "isBOT",
        "offset": 0,
        "slot": "12",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 1146,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "isVIP",
        "offset": 0,
        "slot": "13",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 1150,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "lastTxBlock",
        "offset": 0,
        "slot": "14",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 1155,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "uniswapV2Pair",
        "offset": 0,
        "slot": "15",
        "type": "t_address"
      },
      {
        "astId": 1157,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "dev",
        "offset": 0,
        "slot": "16",
        "type": "t_address"
      },
      {
        "astId": 1159,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "burns",
        "offset": 0,
        "slot": "17",
        "type": "t_address"
      },
      {
        "astId": 1161,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "airdrop",
        "offset": 0,
        "slot": "18",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}