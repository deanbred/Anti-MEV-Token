{
  "address": "0x54d27c85Cb2bB2088bF0EE3a9BceC83A982993f8",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dev",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_burns",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_airdrop",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isBot",
          "type": "bool"
        }
      ],
      "name": "BotAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Burned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "detectMEV",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "mineBlocks",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gasDelta",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "maxSample",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "avgGasPrice",
          "type": "uint256"
        }
      ],
      "name": "MEVUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isVIP",
          "type": "bool"
        }
      ],
      "name": "VIPAdded",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "_totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "avgGasPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "detectMEV",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gasDelta",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isBOT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isVIP",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "lastTxBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxSample",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxWallet",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mineBlocks",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isBot",
          "type": "bool"
        }
      ],
      "name": "setBOT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_detectMEV",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_mineBlocks",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_gasDelta",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxSample",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_avgGasPrice",
          "type": "uint256"
        }
      ],
      "name": "setMEV",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_maxWallet",
          "type": "uint256"
        }
      ],
      "name": "setMaxWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_uniswapV2Pair",
          "type": "address"
        }
      ],
      "name": "setUniswapV2Pair",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isVIP",
          "type": "bool"
        }
      ],
      "name": "setVIP",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dev",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_burns",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_airdrop",
          "type": "address"
        }
      ],
      "name": "setWallets",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "txCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "uniswapV2Pair",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x08d92644cf90b0fba600fcf28149cf2545daf181ddf85ab19b165ac1c16d01db",
  "receipt": {
    "to": null,
    "from": "0x5b3eC3A39403202A9C5a9e3496FbB3793B244B44",
    "contractAddress": "0x54d27c85Cb2bB2088bF0EE3a9BceC83A982993f8",
    "transactionIndex": 0,
    "gasUsed": "4519282",
    "logsBloom": "0x00000008000000000200000000100100000000000000000000810000000000000000000000000000000000000402000000000000000000000000000000000000000000000000004000000008000000000011000001001000000000000000000008000000820400000000000040008800008000000000000000000010000000400000000800000000004000000000100000000000000000000000000000000000000000000800000000000000000000000000000000000000a00000000080000100000402000000000000000000000040004000000800000000000000000020000000000000000020080000000000000000000000000080100010080000000000",
    "blockHash": "0xa892d03574baf4aa92ecd14b44c8f02b2138b3c9d590c0a3def7be439b9b6e2b",
    "transactionHash": "0x08d92644cf90b0fba600fcf28149cf2545daf181ddf85ab19b165ac1c16d01db",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 9380309,
        "transactionHash": "0x08d92644cf90b0fba600fcf28149cf2545daf181ddf85ab19b165ac1c16d01db",
        "address": "0x54d27c85Cb2bB2088bF0EE3a9BceC83A982993f8",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000005b3ec3a39403202a9c5a9e3496fbb3793b244b44"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0xa892d03574baf4aa92ecd14b44c8f02b2138b3c9d590c0a3def7be439b9b6e2b"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 9380309,
        "transactionHash": "0x08d92644cf90b0fba600fcf28149cf2545daf181ddf85ab19b165ac1c16d01db",
        "address": "0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f",
        "topics": [
          "0x0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9",
          "0x00000000000000000000000054d27c85cb2bb2088bf0ee3a9bcec83a982993f8",
          "0x000000000000000000000000b4fbf271143f4fbf7b91a5ded31805e42b2208d6"
        ],
        "data": "0x0000000000000000000000003848e1a22fcf4d3525a3036dc504c3add2b1b2480000000000000000000000000000000000000000000000000000000000013780",
        "logIndex": 1,
        "blockHash": "0xa892d03574baf4aa92ecd14b44c8f02b2138b3c9d590c0a3def7be439b9b6e2b"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 9380309,
        "transactionHash": "0x08d92644cf90b0fba600fcf28149cf2545daf181ddf85ab19b165ac1c16d01db",
        "address": "0x54d27c85Cb2bB2088bF0EE3a9BceC83A982993f8",
        "topics": [
          "0xda633a71264a27905632c474143536c3964c692d30dbf9384cf1f2e87659d64c",
          "0x0000000000000000000000005b3ec3a39403202a9c5a9e3496fbb3793b244b44"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000001",
        "logIndex": 2,
        "blockHash": "0xa892d03574baf4aa92ecd14b44c8f02b2138b3c9d590c0a3def7be439b9b6e2b"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 9380309,
        "transactionHash": "0x08d92644cf90b0fba600fcf28149cf2545daf181ddf85ab19b165ac1c16d01db",
        "address": "0x54d27c85Cb2bB2088bF0EE3a9BceC83A982993f8",
        "topics": [
          "0xda633a71264a27905632c474143536c3964c692d30dbf9384cf1f2e87659d64c",
          "0x00000000000000000000000054d27c85cb2bb2088bf0ee3a9bcec83a982993f8"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000001",
        "logIndex": 3,
        "blockHash": "0xa892d03574baf4aa92ecd14b44c8f02b2138b3c9d590c0a3def7be439b9b6e2b"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 9380309,
        "transactionHash": "0x08d92644cf90b0fba600fcf28149cf2545daf181ddf85ab19b165ac1c16d01db",
        "address": "0x54d27c85Cb2bB2088bF0EE3a9BceC83A982993f8",
        "topics": [
          "0xda633a71264a27905632c474143536c3964c692d30dbf9384cf1f2e87659d64c",
          "0x000000000000000000000000c2657176e213ddf18646efce08f36d656abe3396"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000001",
        "logIndex": 4,
        "blockHash": "0xa892d03574baf4aa92ecd14b44c8f02b2138b3c9d590c0a3def7be439b9b6e2b"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 9380309,
        "transactionHash": "0x08d92644cf90b0fba600fcf28149cf2545daf181ddf85ab19b165ac1c16d01db",
        "address": "0x54d27c85Cb2bB2088bF0EE3a9BceC83A982993f8",
        "topics": [
          "0xda633a71264a27905632c474143536c3964c692d30dbf9384cf1f2e87659d64c",
          "0x0000000000000000000000008b30998a9492610f074784aed7afdd682b23b416"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000001",
        "logIndex": 5,
        "blockHash": "0xa892d03574baf4aa92ecd14b44c8f02b2138b3c9d590c0a3def7be439b9b6e2b"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 9380309,
        "transactionHash": "0x08d92644cf90b0fba600fcf28149cf2545daf181ddf85ab19b165ac1c16d01db",
        "address": "0x54d27c85Cb2bB2088bF0EE3a9BceC83A982993f8",
        "topics": [
          "0xda633a71264a27905632c474143536c3964c692d30dbf9384cf1f2e87659d64c",
          "0x000000000000000000000000e276d3ea57c5af859e52d51c2c11f5decb4c4838"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000001",
        "logIndex": 6,
        "blockHash": "0xa892d03574baf4aa92ecd14b44c8f02b2138b3c9d590c0a3def7be439b9b6e2b"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 9380309,
        "transactionHash": "0x08d92644cf90b0fba600fcf28149cf2545daf181ddf85ab19b165ac1c16d01db",
        "address": "0x54d27c85Cb2bB2088bF0EE3a9BceC83A982993f8",
        "topics": [
          "0xda633a71264a27905632c474143536c3964c692d30dbf9384cf1f2e87659d64c",
          "0x0000000000000000000000003848e1a22fcf4d3525a3036dc504c3add2b1b248"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000001",
        "logIndex": 7,
        "blockHash": "0xa892d03574baf4aa92ecd14b44c8f02b2138b3c9d590c0a3def7be439b9b6e2b"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 9380309,
        "transactionHash": "0x08d92644cf90b0fba600fcf28149cf2545daf181ddf85ab19b165ac1c16d01db",
        "address": "0x54d27c85Cb2bB2088bF0EE3a9BceC83A982993f8",
        "topics": [
          "0xda633a71264a27905632c474143536c3964c692d30dbf9384cf1f2e87659d64c",
          "0x0000000000000000000000007a250d5630b4cf539739df2c5dacb4c659f2488d"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000001",
        "logIndex": 8,
        "blockHash": "0xa892d03574baf4aa92ecd14b44c8f02b2138b3c9d590c0a3def7be439b9b6e2b"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 9380309,
        "transactionHash": "0x08d92644cf90b0fba600fcf28149cf2545daf181ddf85ab19b165ac1c16d01db",
        "address": "0x54d27c85Cb2bB2088bF0EE3a9BceC83A982993f8",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000005b3ec3a39403202a9c5a9e3496fbb3793b244b44"
        ],
        "data": "0x0000000000000000000000000000000000000000034476d6e9e54af9f7aa0000",
        "logIndex": 9,
        "blockHash": "0xa892d03574baf4aa92ecd14b44c8f02b2138b3c9d590c0a3def7be439b9b6e2b"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 9380309,
        "transactionHash": "0x08d92644cf90b0fba600fcf28149cf2545daf181ddf85ab19b165ac1c16d01db",
        "address": "0x54d27c85Cb2bB2088bF0EE3a9BceC83A982993f8",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000c2657176e213ddf18646efce08f36d656abe3396"
        ],
        "data": "0x0000000000000000000000000000000000000000001be1d3f6bad7d521db0000",
        "logIndex": 10,
        "blockHash": "0xa892d03574baf4aa92ecd14b44c8f02b2138b3c9d590c0a3def7be439b9b6e2b"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 9380309,
        "transactionHash": "0x08d92644cf90b0fba600fcf28149cf2545daf181ddf85ab19b165ac1c16d01db",
        "address": "0x54d27c85Cb2bB2088bF0EE3a9BceC83A982993f8",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000008b30998a9492610f074784aed7afdd682b23b416"
        ],
        "data": "0x0000000000000000000000000000000000000000001be1d3f6bad7d521db0000",
        "logIndex": 11,
        "blockHash": "0xa892d03574baf4aa92ecd14b44c8f02b2138b3c9d590c0a3def7be439b9b6e2b"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 9380309,
        "transactionHash": "0x08d92644cf90b0fba600fcf28149cf2545daf181ddf85ab19b165ac1c16d01db",
        "address": "0x54d27c85Cb2bB2088bF0EE3a9BceC83A982993f8",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000e276d3ea57c5af859e52d51c2c11f5decb4c4838"
        ],
        "data": "0x000000000000000000000000000000000000000000252d1a9e4e751c2d240000",
        "logIndex": 12,
        "blockHash": "0xa892d03574baf4aa92ecd14b44c8f02b2138b3c9d590c0a3def7be439b9b6e2b"
      }
    ],
    "blockNumber": 9380309,
    "cumulativeGasUsed": "4519282",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xc2657176e213ddf18646efce08f36d656abe3396",
    "0x8b30998a9492610f074784aed7afdd682b23b416",
    "0xe276d3ea57c5af859e52d51c2c11f5decb4c4838"
  ],
  "numDeployments": 23,
  "solcInputHash": "a38d70abef2894fa59faa2960a27f9c1",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dev\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_burns\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_airdrop\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isBot\",\"type\":\"bool\"}],\"name\":\"BotAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Burned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"detectMEV\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mineBlocks\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gasDelta\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxSample\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"avgGasPrice\",\"type\":\"uint256\"}],\"name\":\"MEVUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isVIP\",\"type\":\"bool\"}],\"name\":\"VIPAdded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"avgGasPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"detectMEV\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gasDelta\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isBOT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isVIP\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastTxBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSample\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxWallet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mineBlocks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isBot\",\"type\":\"bool\"}],\"name\":\"setBOT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_detectMEV\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_mineBlocks\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_gasDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxSample\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_avgGasPrice\",\"type\":\"uint256\"}],\"name\":\"setMEV\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxWallet\",\"type\":\"uint256\"}],\"name\":\"setMaxWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_uniswapV2Pair\",\"type\":\"address\"}],\"name\":\"setUniswapV2Pair\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isVIP\",\"type\":\"bool\"}],\"name\":\"setVIP\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dev\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_burns\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_airdrop\",\"type\":\"address\"}],\"name\":\"setWallets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Pair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AntiMEV.sol\":\"AntiMEV\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/AntiMEV.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n/*\\n  AntiMEV token detects and defends against MEV attack bots\\n  \\n  Website: https://antimev.io\\n\\n  Twitter: https://twitter.com/Anti_MEV\\n\\n  Telegram: https://t.me/antimev\\n*/\\n\\npragma solidity ^0.8.17;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n  function _msgSender() internal view virtual returns (address) {\\n    return msg.sender;\\n  }\\n\\n  function _msgData() internal view virtual returns (bytes calldata) {\\n    return msg.data;\\n  }\\n}\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n  address private _owner;\\n\\n  event OwnershipTransferred(\\n    address indexed previousOwner,\\n    address indexed newOwner\\n  );\\n\\n  /**\\n   * @dev Initializes the contract setting the deployer as the initial owner.\\n   */\\n  constructor() {\\n    _transferOwnership(_msgSender());\\n  }\\n\\n  /**\\n   * @dev Throws if called by any account other than the owner.\\n   */\\n  modifier onlyOwner() {\\n    _checkOwner();\\n    _;\\n  }\\n\\n  /**\\n   * @dev Returns the address of the current owner.\\n   */\\n  function owner() public view virtual returns (address) {\\n    return _owner;\\n  }\\n\\n  /**\\n   * @dev Throws if the sender is not the owner.\\n   */\\n  function _checkOwner() internal view virtual {\\n    require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n  }\\n\\n  /**\\n   * @dev Leaves the contract without owner. It will not be possible to call\\n   * `onlyOwner` functions. Can only be called by the current owner.\\n   *\\n   * NOTE: Renouncing ownership will leave the contract without an owner,\\n   * thereby disabling any functionality that is only available to the owner.\\n   */\\n  function renounceOwnership() public virtual onlyOwner {\\n    _transferOwnership(address(0));\\n  }\\n\\n  /**\\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n   * Can only be called by the current owner.\\n   */\\n  function transferOwnership(address newOwner) public virtual onlyOwner {\\n    require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n    _transferOwnership(newOwner);\\n  }\\n\\n  /**\\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n   * Internal function without access restriction.\\n   */\\n  function _transferOwnership(address newOwner) internal virtual {\\n    address oldOwner = _owner;\\n    _owner = newOwner;\\n    emit OwnershipTransferred(oldOwner, newOwner);\\n  }\\n}\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n  /**\\n   * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n   *\\n   * _Available since v3.4._\\n   */\\n  function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n    unchecked {\\n      uint256 c = a + b;\\n      if (c < a) return (false, 0);\\n      return (true, c);\\n    }\\n  }\\n\\n  /**\\n   * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n   *\\n   * _Available since v3.4._\\n   */\\n  function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n    unchecked {\\n      if (b > a) return (false, 0);\\n      return (true, a - b);\\n    }\\n  }\\n\\n  /**\\n   * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n   *\\n   * _Available since v3.4._\\n   */\\n  function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n    unchecked {\\n      // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n      // benefit is lost if 'b' is also tested.\\n      // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n      if (a == 0) return (true, 0);\\n      uint256 c = a * b;\\n      if (c / a != b) return (false, 0);\\n      return (true, c);\\n    }\\n  }\\n\\n  /**\\n   * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n   *\\n   * _Available since v3.4._\\n   */\\n  function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n    unchecked {\\n      if (b == 0) return (false, 0);\\n      return (true, a / b);\\n    }\\n  }\\n\\n  /**\\n   * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n   *\\n   * _Available since v3.4._\\n   */\\n  function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n    unchecked {\\n      if (b == 0) return (false, 0);\\n      return (true, a % b);\\n    }\\n  }\\n\\n  /**\\n   * @dev Returns the addition of two unsigned integers, reverting on\\n   * overflow.\\n   *\\n   * Counterpart to Solidity's `+` operator.\\n   *\\n   * Requirements:\\n   *\\n   * - Addition cannot overflow.\\n   */\\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return a + b;\\n  }\\n\\n  /**\\n   * @dev Returns the subtraction of two unsigned integers, reverting on\\n   * overflow (when the result is negative).\\n   *\\n   * Counterpart to Solidity's `-` operator.\\n   *\\n   * Requirements:\\n   *\\n   * - Subtraction cannot overflow.\\n   */\\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return a - b;\\n  }\\n\\n  /**\\n   * @dev Returns the multiplication of two unsigned integers, reverting on\\n   * overflow.\\n   *\\n   * Counterpart to Solidity's `*` operator.\\n   *\\n   * Requirements:\\n   *\\n   * - Multiplication cannot overflow.\\n   */\\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return a * b;\\n  }\\n\\n  /**\\n   * @dev Returns the integer division of two unsigned integers, reverting on\\n   * division by zero. The result is rounded towards zero.\\n   *\\n   * Counterpart to Solidity's `/` operator.\\n   *\\n   * Requirements:\\n   *\\n   * - The divisor cannot be zero.\\n   */\\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return a / b;\\n  }\\n\\n  /**\\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n   * reverting when dividing by zero.\\n   *\\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\\n   * invalid opcode to revert (consuming all remaining gas).\\n   *\\n   * Requirements:\\n   *\\n   * - The divisor cannot be zero.\\n   */\\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return a % b;\\n  }\\n\\n  /**\\n   * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n   * overflow (when the result is negative).\\n   *\\n   * CAUTION: This function is deprecated because it requires allocating memory for the error\\n   * message unnecessarily. For custom revert reasons use {trySub}.\\n   *\\n   * Counterpart to Solidity's `-` operator.\\n   *\\n   * Requirements:\\n   *\\n   * - Subtraction cannot overflow.\\n   */\\n  function sub(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    unchecked {\\n      require(b <= a, errorMessage);\\n      return a - b;\\n    }\\n  }\\n\\n  /**\\n   * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n   * division by zero. The result is rounded towards zero.\\n   *\\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n   * uses an invalid opcode to revert (consuming all remaining gas).\\n   *\\n   * Requirements:\\n   *\\n   * - The divisor cannot be zero.\\n   */\\n  function div(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    unchecked {\\n      require(b > 0, errorMessage);\\n      return a / b;\\n    }\\n  }\\n\\n  /**\\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n   * reverting with custom message when dividing by zero.\\n   *\\n   * CAUTION: This function is deprecated because it requires allocating memory for the error\\n   * message unnecessarily. For custom revert reasons use {tryMod}.\\n   *\\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\\n   * invalid opcode to revert (consuming all remaining gas).\\n   *\\n   * Requirements:\\n   *\\n   * - The divisor cannot be zero.\\n   */\\n  function mod(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    unchecked {\\n      require(b > 0, errorMessage);\\n      return a % b;\\n    }\\n  }\\n}\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n  /**\\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n   * another (`to`).\\n   *\\n   * Note that `value` may be zero.\\n   */\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n  /**\\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n   * a call to {approve}. `value` is the new allowance.\\n   */\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n  /**\\n   * @dev Returns the amount of tokens in existence.\\n   */\\n  function totalSupply() external view returns (uint256);\\n\\n  /**\\n   * @dev Returns the amount of tokens owned by `account`.\\n   */\\n  function balanceOf(address account) external view returns (uint256);\\n\\n  /**\\n   * @dev Moves `amount` tokens from the caller's account to `to`.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * Emits a {Transfer} event.\\n   */\\n  function transfer(address to, uint256 amount) external returns (bool);\\n\\n  /**\\n   * @dev Returns the remaining number of tokens that `spender` will be\\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n   * zero by default.\\n   *\\n   * This value changes when {approve} or {transferFrom} are called.\\n   */\\n  function allowance(\\n    address owner,\\n    address spender\\n  ) external view returns (uint256);\\n\\n  /**\\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n   * that someone may use both the old and the new allowance by unfortunate\\n   * transaction ordering. One possible solution to mitigate this race\\n   * condition is to first reduce the spender's allowance to 0 and set the\\n   * desired value afterwards:\\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n   *\\n   * Emits an {Approval} event.\\n   */\\n  function approve(address spender, uint256 amount) external returns (bool);\\n\\n  /**\\n   * @dev Moves `amount` tokens from `from` to `to` using the\\n   * allowance mechanism. `amount` is then deducted from the caller's\\n   * allowance.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * Emits a {Transfer} event.\\n   */\\n  function transferFrom(\\n    address from,\\n    address to,\\n    uint256 amount\\n  ) external returns (bool);\\n}\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n  /**\\n   * @dev Returns the name of the token.\\n   */\\n  function name() external view returns (string memory);\\n\\n  /**\\n   * @dev Returns the symbol of the token.\\n   */\\n  function symbol() external view returns (string memory);\\n\\n  /**\\n   * @dev Returns the decimals places of the token.\\n   */\\n  function decimals() external view returns (uint8);\\n}\\n\\ninterface IUniswapV2Factory {\\n  event PairCreated(\\n    address indexed token0,\\n    address indexed token1,\\n    address pair,\\n    uint\\n  );\\n\\n  function createPair(\\n    address tokenA,\\n    address tokenB\\n  ) external returns (address pair);\\n}\\n\\ninterface IUniswapV2Router02 {\\n  function factory() external pure returns (address);\\n\\n  function WETH() external pure returns (address);\\n}\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n  mapping(address => uint256) private _balances;\\n  mapping(address => mapping(address => uint256)) private _allowances;\\n\\n  uint256 private _totalSupply;\\n  string private _name;\\n  string private _symbol;\\n\\n  /**\\n   * @dev Sets the values for {name} and {symbol}.\\n   *\\n   * All two of these values are immutable: they can only be set once during\\n   * construction.\\n   */\\n  constructor(string memory name_, string memory symbol_) {\\n    _name = name_;\\n    _symbol = symbol_;\\n  }\\n\\n  /**\\n   * @dev Returns the name of the token.\\n   */\\n  function name() public view virtual override returns (string memory) {\\n    return _name;\\n  }\\n\\n  /**\\n   * @dev Returns the symbol of the token, usually a shorter version of the\\n   * name.\\n   */\\n  function symbol() public view virtual override returns (string memory) {\\n    return _symbol;\\n  }\\n\\n  /**\\n   * @dev Returns the number of decimals used to get its user representation.\\n   * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n   * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n   *\\n   * Tokens usually opt for a value of 18, imitating the relationship between\\n   * Ether and Wei. This is the default value returned by this function, unless\\n   * it's overridden.\\n   *\\n   * NOTE: This information is only used for _display_ purposes: it in\\n   * no way affects any of the arithmetic of the contract, including\\n   * {IERC20-balanceOf} and {IERC20-transfer}.\\n   */\\n  function decimals() public view virtual override returns (uint8) {\\n    return 18;\\n  }\\n\\n  /**\\n   * @dev See {IERC20-totalSupply}.\\n   */\\n  function totalSupply() public view virtual override returns (uint256) {\\n    return _totalSupply;\\n  }\\n\\n  /**\\n   * @dev See {IERC20-balanceOf}.\\n   */\\n  function balanceOf(\\n    address account\\n  ) public view virtual override returns (uint256) {\\n    return _balances[account];\\n  }\\n\\n  /**\\n   * @dev See {IERC20-transfer}.\\n   *\\n   * Requirements:\\n   *\\n   * - `to` cannot be the zero address.\\n   * - the caller must have a balance of at least `amount`.\\n   */\\n  function transfer(\\n    address to,\\n    uint256 amount\\n  ) public virtual override returns (bool) {\\n    address owner = _msgSender();\\n    _transfer(owner, to, amount);\\n    return true;\\n  }\\n\\n  /**\\n   * @dev See {IERC20-allowance}.\\n   */\\n  function allowance(\\n    address owner,\\n    address spender\\n  ) public view virtual override returns (uint256) {\\n    return _allowances[owner][spender];\\n  }\\n\\n  /**\\n   * @dev See {IERC20-approve}.\\n   *\\n   * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n   * `transferFrom`. This is semantically equivalent to an infinite approval.\\n   *\\n   * Requirements:\\n   *\\n   * - `spender` cannot be the zero address.\\n   */\\n  function approve(\\n    address spender,\\n    uint256 amount\\n  ) public virtual override returns (bool) {\\n    address owner = _msgSender();\\n    _approve(owner, spender, amount);\\n    return true;\\n  }\\n\\n  /**\\n   * @dev See {IERC20-transferFrom}.\\n   *\\n   * Emits an {Approval} event indicating the updated allowance. This is not\\n   * required by the EIP. See the note at the beginning of {ERC20}.\\n   *\\n   * NOTE: Does not update the allowance if the current allowance\\n   * is the maximum `uint256`.\\n   *\\n   * Requirements:\\n   *\\n   * - `from` and `to` cannot be the zero address.\\n   * - `from` must have a balance of at least `amount`.\\n   * - the caller must have allowance for ``from``'s tokens of at least\\n   * `amount`.\\n   */\\n  function transferFrom(\\n    address from,\\n    address to,\\n    uint256 amount\\n  ) public virtual override returns (bool) {\\n    address spender = _msgSender();\\n    _spendAllowance(from, spender, amount);\\n    _transfer(from, to, amount);\\n    return true;\\n  }\\n\\n  /**\\n   * @dev Atomically increases the allowance granted to `spender` by the caller.\\n   *\\n   * This is an alternative to {approve} that can be used as a mitigation for\\n   * problems described in {IERC20-approve}.\\n   *\\n   * Emits an {Approval} event indicating the updated allowance.\\n   *\\n   * Requirements:\\n   *\\n   * - `spender` cannot be the zero address.\\n   */\\n  function increaseAllowance(\\n    address spender,\\n    uint256 addedValue\\n  ) public virtual returns (bool) {\\n    address owner = _msgSender();\\n    _approve(owner, spender, allowance(owner, spender) + addedValue);\\n    return true;\\n  }\\n\\n  /**\\n   * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n   *\\n   * This is an alternative to {approve} that can be used as a mitigation for\\n   * problems described in {IERC20-approve}.\\n   *\\n   * Emits an {Approval} event indicating the updated allowance.\\n   *\\n   * Requirements:\\n   *\\n   * - `spender` cannot be the zero address.\\n   * - `spender` must have allowance for the caller of at least\\n   * `subtractedValue`.\\n   */\\n  function decreaseAllowance(\\n    address spender,\\n    uint256 subtractedValue\\n  ) public virtual returns (bool) {\\n    address owner = _msgSender();\\n    uint256 currentAllowance = allowance(owner, spender);\\n    require(\\n      currentAllowance >= subtractedValue,\\n      \\\"ERC20: decreased allowance below zero\\\"\\n    );\\n    unchecked {\\n      _approve(owner, spender, currentAllowance - subtractedValue);\\n    }\\n\\n    return true;\\n  }\\n\\n  /**\\n   * @dev Moves `amount` of tokens from `from` to `to`.\\n   *\\n   * This internal function is equivalent to {transfer}, and can be used to\\n   * e.g. implement automatic token fees, slashing mechanisms, etc.\\n   *\\n   * Emits a {Transfer} event.\\n   *\\n   * Requirements:\\n   *\\n   * - `from` cannot be the zero address.\\n   * - `to` cannot be the zero address.\\n   * - `from` must have a balance of at least `amount`.\\n   */\\n  function _transfer(\\n    address from,\\n    address to,\\n    uint256 amount\\n  ) internal virtual {\\n    require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n    require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n    _beforeTokenTransfer(from, to, amount);\\n\\n    uint256 fromBalance = _balances[from];\\n    require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n    unchecked {\\n      _balances[from] = fromBalance - amount;\\n      // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n      // decrementing then incrementing.\\n      _balances[to] += amount;\\n    }\\n\\n    emit Transfer(from, to, amount);\\n\\n    _afterTokenTransfer(from, to, amount);\\n  }\\n\\n  /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n   * the total supply.\\n   *\\n   * Emits a {Transfer} event with `from` set to the zero address.\\n   *\\n   * Requirements:\\n   *\\n   * - `account` cannot be the zero address.\\n   */\\n  function _mint(address account, uint256 amount) internal virtual {\\n    require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n    _beforeTokenTransfer(address(0), account, amount);\\n\\n    _totalSupply += amount;\\n    unchecked {\\n      // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n      _balances[account] += amount;\\n    }\\n    emit Transfer(address(0), account, amount);\\n\\n    _afterTokenTransfer(address(0), account, amount);\\n  }\\n\\n  /**\\n   * @dev Destroys `amount` tokens from `account`, reducing the\\n   * total supply.\\n   *\\n   * Emits a {Transfer} event with `to` set to the zero address.\\n   *\\n   * Requirements:\\n   *\\n   * - `account` cannot be the zero address.\\n   * - `account` must have at least `amount` tokens.\\n   */\\n  function _burn(address account, uint256 amount) internal virtual {\\n    require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n    _beforeTokenTransfer(account, address(0), amount);\\n\\n    uint256 accountBalance = _balances[account];\\n    require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n    unchecked {\\n      _balances[account] = accountBalance - amount;\\n      // Overflow not possible: amount <= accountBalance <= totalSupply.\\n      _totalSupply -= amount;\\n    }\\n\\n    emit Transfer(account, address(0), amount);\\n\\n    _afterTokenTransfer(account, address(0), amount);\\n  }\\n\\n  /**\\n   * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n   *\\n   * This internal function is equivalent to `approve`, and can be used to\\n   * e.g. set automatic allowances for certain subsystems, etc.\\n   *\\n   * Emits an {Approval} event.\\n   *\\n   * Requirements:\\n   *\\n   * - `owner` cannot be the zero address.\\n   * - `spender` cannot be the zero address.\\n   */\\n  function _approve(\\n    address owner,\\n    address spender,\\n    uint256 amount\\n  ) internal virtual {\\n    require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n    require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n    _allowances[owner][spender] = amount;\\n    emit Approval(owner, spender, amount);\\n  }\\n\\n  /**\\n   * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n   *\\n   * Does not update the allowance amount in case of infinite allowance.\\n   * Revert if not enough allowance is available.\\n   *\\n   * Might emit an {Approval} event.\\n   */\\n  function _spendAllowance(\\n    address owner,\\n    address spender,\\n    uint256 amount\\n  ) internal virtual {\\n    uint256 currentAllowance = allowance(owner, spender);\\n    if (currentAllowance != type(uint256).max) {\\n      require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n      unchecked {\\n        _approve(owner, spender, currentAllowance - amount);\\n      }\\n    }\\n  }\\n\\n  /**\\n   * @dev Hook that is called before any transfer of tokens. This includes\\n   * minting and burning.\\n   *\\n   * Calling conditions:\\n   *\\n   * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n   * will be transferred to `to`.\\n   * - when `from` is zero, `amount` tokens will be minted for `to`.\\n   * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n   * - `from` and `to` are never both zero.\\n   *\\n   * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n   */\\n  function _beforeTokenTransfer(\\n    address from,\\n    address to,\\n    uint256 amount\\n  ) internal virtual {}\\n\\n  /**\\n   * @dev Hook that is called after any transfer of tokens. This includes\\n   * minting and burning.\\n   *\\n   * Calling conditions:\\n   *\\n   * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n   * has been transferred to `to`.\\n   * - when `from` is zero, `amount` tokens have been minted for `to`.\\n   * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n   * - `from` and `to` are never both zero.\\n   *\\n   * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n   */\\n  function _afterTokenTransfer(\\n    address from,\\n    address to,\\n    uint256 amount\\n  ) internal virtual {}\\n}\\n\\ncontract AntiMEV is ERC20, Ownable {\\n  using SafeMath for uint256;\\n\\n  uint256 public _totalSupply;\\n\\n  mapping(address => bool) public isBOT; // MEV bots\\n  mapping(address => bool) public isVIP; // VIP addresses\\n  mapping(address => uint256) public lastTxBlock; // block number for address's last tx\\n\\n  bool public detectMEV;\\n  uint256 public maxWallet;\\n  uint256 public mineBlocks;\\n  uint256 public gasDelta;\\n  uint256 public maxSample;\\n  uint256 public avgGasPrice;\\n  uint256 public txCounter;\\n\\n  IUniswapV2Router02 private immutable uniswapV2Router;\\n  address public uniswapV2Pair;\\n\\n  address private dev;\\n  address private burns;\\n  address private airdrop;\\n\\n  event Burned(address indexed user, uint256 amount);\\n  event VIPAdded(address indexed account, bool isVIP);\\n  event BotAdded(address indexed account, bool isBot);\\n  event MEVUpdated(\\n    bool detectMEV,\\n    uint256 mineBlocks,\\n    uint256 gasDelta,\\n    uint256 maxSample,\\n    uint256 avgGasPrice\\n  );\\n\\n  constructor(\\n    address _dev,\\n    address _burns,\\n    address _airdrop\\n  ) payable ERC20(\\\"AntiMEV\\\", \\\"AntiMEV\\\") {\\n    _totalSupply = 1123581321 * 1e18; // 1.12 Billion Fibonacci\\n\\n    maxWallet = _totalSupply.mul(49).div(1000); // 4.9% of total supply\\n    detectMEV = true; // enable MEV detection\\n    mineBlocks = 3; // blocks to mine before 2nd tx\\n    avgGasPrice = 1e9; // initial rolling average gas price\\n    gasDelta = 25; // increase in gas price to be considered bribe\\n    maxSample = 10; // number of blocks to calculate average gas price\\n    txCounter = 0; // counter used to calculate average gas price\\n\\n    IUniswapV2Router02 _uniswapV2Router = IUniswapV2Router02(\\n      0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D\\n    );\\n    uniswapV2Router = _uniswapV2Router;\\n\\n    uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(\\n      address(this),\\n      _uniswapV2Router.WETH()\\n    );\\n\\n    dev = address(_dev);\\n    burns = address(_burns);\\n    airdrop = address(_airdrop);\\n\\n    setVIP(msg.sender, true);\\n    setVIP(address(this), true);\\n    setVIP(dev, true);\\n    setVIP(burns, true);\\n    setVIP(airdrop, true);\\n    setVIP(uniswapV2Pair, true);\\n    setVIP(address(_uniswapV2Router), true);\\n\\n    _mint(msg.sender, _totalSupply.mul(90).div(100));\\n    _mint(dev, _totalSupply.mul(3).div(100));\\n    _mint(burns, _totalSupply.mul(3).div(100));\\n    _mint(airdrop, _totalSupply.mul(4).div(100));\\n  }\\n\\n  function _checkMEV(\\n    address from,\\n    address to,\\n    uint256 amount\\n  ) internal virtual {\\n    require(!isBOT[from] && !isBOT[to], \\\"AntiMEV: Known MEV Bot\\\");\\n    // test for max wallet\\n    if (!isVIP[to]) {\\n      require(\\n        balanceOf(to) + amount <= maxWallet,\\n        \\\"AntiMEV: Max wallet exceeded\\\"\\n      );\\n    }\\n    if (\\n      !isVIP[from] &&\\n      to != address(uniswapV2Router) &&\\n      to != address(uniswapV2Pair)\\n    ) {\\n      // test for sandwich attack\\n      require(\\n        lastTxBlock[from] + mineBlocks < block.number,\\n        \\\"AntiMEV: Detected sandwich attack, mine more blocks\\\"\\n      );\\n      lastTxBlock[from] = block.number;\\n\\n      // test for gas bribe\\n      txCounter += 1;\\n      avgGasPrice =\\n        (avgGasPrice * (txCounter - 1)) /\\n        txCounter +\\n        tx.gasprice /\\n        txCounter;\\n      require(\\n        tx.gasprice <= avgGasPrice.add(avgGasPrice.mul(gasDelta).div(100)),\\n        \\\"AntiMEV: Detected gas bribe, possible front-run\\\"\\n      );\\n    }\\n  }\\n\\n  function _transfer(\\n    address from,\\n    address to,\\n    uint256 amount\\n  ) internal virtual override {\\n    if (detectMEV) {\\n      _checkMEV(from, to, amount);\\n    }\\n    super._transfer(from, to, amount);\\n  }\\n\\n  function setMEV(\\n    bool _detectMEV,\\n    uint256 _mineBlocks,\\n    uint256 _gasDelta,\\n    uint256 _maxSample,\\n    uint256 _avgGasPrice\\n  ) external onlyOwner {\\n    detectMEV = _detectMEV;\\n    mineBlocks = _mineBlocks;\\n    gasDelta = _gasDelta;\\n    maxSample = _maxSample;\\n    avgGasPrice = _avgGasPrice;\\n    emit MEVUpdated(\\n      _detectMEV,\\n      _mineBlocks,\\n      _gasDelta,\\n      _maxSample,\\n      _avgGasPrice\\n    );\\n  }\\n\\n  function setBOT(address _address, bool _isBot) public {\\n    require(\\n      msg.sender == owner() || msg.sender == address(this),\\n      \\\"AntiMEV: Only contract owner or the contract itself can set BOT\\\"\\n    );\\n    require(!isVIP[_address], \\\"AntiMEV: Cannot set VIP to BOT\\\");\\n    isBOT[_address] = _isBot;\\n    emit BotAdded(_address, _isBot);\\n  }\\n\\n  function setVIP(address _address, bool _isVIP) public {\\n    require(\\n      msg.sender == owner() || msg.sender == address(this),\\n      \\\"AntiMEV: Only contract owner or the contract itself can set VIP\\\"\\n    );\\n    require(!isBOT[_address], \\\"AntiMEV: Cannot set BOT to VIP\\\");\\n    isVIP[_address] = _isVIP;\\n    emit VIPAdded(_address, _isVIP);\\n  }\\n\\n  function setMaxWallet(uint256 _maxWallet) external onlyOwner {\\n    maxWallet = _maxWallet;\\n  }\\n\\n  function setWallets(\\n    address _dev,\\n    address _burns,\\n    address _airdrop\\n  ) external onlyOwner {\\n    dev = _dev;\\n    burns = _burns;\\n    airdrop = _airdrop;\\n  }\\n\\n  function setUniswapV2Pair(address _uniswapV2Pair) external onlyOwner {\\n    uniswapV2Pair = address(_uniswapV2Pair);\\n  }\\n\\n  function burn(uint256 value) external onlyOwner {\\n    _burn(msg.sender, value);\\n    emit Burned(msg.sender, value);\\n  }\\n\\n  receive() external payable {}\\n}\\n\",\"keccak256\":\"0xaf3ef227f073135d1f8c2959a93470869524942aa09f6aa22e0fa148b9930745\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405260405162002119380380620021198339810160408190526200002691620006e7565b60408051808201825260078082526620b73a34a6a2ab60c91b6020808401829052845180860190955291845290830152906003620000658382620007d5565b506004620000748282620007d5565b505050620000916200008b6200042c60201b60201c565b62000430565b6b03a1679975a96fc068840000600681905550620000dc6103e8620000c860316006546200048260201b62000c5c1790919060201c565b6200049960201b62000c6f1790919060201c565b600b55600a805460ff191660011781556003600c55633b9aca00600f556019600d55600e556000601055737a250d5630b4cf539739df2c5dacb4c659f2488d60808190526040805163c45a015560e01b81529051829163c45a01559160048083019260209291908290030181865afa1580156200015d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001839190620008a1565b6001600160a01b031663c9c6539630836001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015620001d1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001f79190620008a1565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af115801562000245573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200026b9190620008a1565b601180546001600160a01b03199081166001600160a01b039384161790915560128054821687841617905560138054821686841617905560148054909116918416919091179055620002bf336001620004a7565b620002cc306001620004a7565b601254620002e5906001600160a01b03166001620004a7565b601354620002fe906001600160a01b03166001620004a7565b60145462000317906001600160a01b03166001620004a7565b60115462000330906001600160a01b03166001620004a7565b6200033d816001620004a7565b6200036b33620003656064620000c8605a6006546200048260201b62000c5c1790919060201c565b62000602565b620003a8601260009054906101000a90046001600160a01b0316620003656064620000c860036006546200048260201b62000c5c1790919060201c565b620003e5601360009054906101000a90046001600160a01b0316620003656064620000c860036006546200048260201b62000c5c1790919060201c565b62000422601460009054906101000a90046001600160a01b0316620003656064620000c860046006546200048260201b62000c5c1790919060201c565b5050505062000928565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000620004908284620008d5565b90505b92915050565b6000620004908284620008ef565b6005546001600160a01b0316331480620004c057503330145b620005385760405162461bcd60e51b815260206004820152603f60248201527f416e74694d45563a204f6e6c7920636f6e7472616374206f776e6572206f722060448201527f74686520636f6e747261637420697473656c662063616e20736574205649500060648201526084015b60405180910390fd5b6001600160a01b03821660009081526007602052604090205460ff1615620005a35760405162461bcd60e51b815260206004820152601e60248201527f416e74694d45563a2043616e6e6f742073657420424f5420746f20564950000060448201526064016200052f565b6001600160a01b038216600081815260086020908152604091829020805460ff191685151590811790915591519182527fda633a71264a27905632c474143536c3964c692d30dbf9384cf1f2e87659d64c910160405180910390a25050565b6001600160a01b0382166200065a5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016200052f565b80600260008282546200066e919062000912565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b505050565b80516001600160a01b0381168114620006e257600080fd5b919050565b600080600060608486031215620006fd57600080fd5b6200070884620006ca565b92506200071860208501620006ca565b91506200072860408501620006ca565b90509250925092565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200075c57607f821691505b6020821081036200077d57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620006c557600081815260208120601f850160051c81016020861015620007ac5750805b601f850160051c820191505b81811015620007cd57828155600101620007b8565b505050505050565b81516001600160401b03811115620007f157620007f162000731565b620008098162000802845462000747565b8462000783565b602080601f831160018114620008415760008415620008285750858301515b600019600386901b1c1916600185901b178555620007cd565b600085815260208120601f198616915b82811015620008725788860151825594840194600190910190840162000851565b5085821015620008915787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208284031215620008b457600080fd5b6200049082620006ca565b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417620004935762000493620008bf565b6000826200090d57634e487b7160e01b600052601260045260246000fd5b500490565b80820180821115620004935762000493620008bf565b6080516117d562000944600039600061116501526117d56000f3fe6080604052600436106101f25760003560e01c806374f079b81161010d578063a7ae210a116100a0578063dd62ed3e1161006f578063dd62ed3e14610587578063e6584238146105a7578063f2fde38b146105c7578063f4201c3c146105e7578063f8b45b051461061757600080fd5b8063a7ae210a146104f4578063a9059cbb1461050a578063ceb88a161461052a578063d89491401461055757600080fd5b806394b8fb16116100dc57806394b8fb161461047f57806395d89b411461049f578063a29a6089146104b4578063a457c2d7146104d457600080fd5b806374f079b81461041157806375cb1bd1146104275780638da5cb5b1461044757806392181ec61461046557600080fd5b80633eaaf86b116101855780636381f2b1116101545780636381f2b11461039057806369ab300d146103a657806370a08231146103c6578063715018a6146103fc57600080fd5b80633eaaf86b1461030057806342966c681461031657806349bd5a5e146103385780635d0044ca1461037057600080fd5b806323b872dd116101c157806323b872dd1461028e578063265b957b146102ae578063313ce567146102c457806339509351146102e057600080fd5b806306fdde03146101fe578063095ea7b31461022957806318160ddd1461025957806321c609c21461027857600080fd5b366101f957005b600080fd5b34801561020a57600080fd5b5061021361062d565b60405161022091906114fa565b60405180910390f35b34801561023557600080fd5b50610249610244366004611564565b6106bf565b6040519015158152602001610220565b34801561026557600080fd5b506002545b604051908152602001610220565b34801561028457600080fd5b5061026a600c5481565b34801561029a57600080fd5b506102496102a936600461158e565b6106d9565b3480156102ba57600080fd5b5061026a600d5481565b3480156102d057600080fd5b5060405160128152602001610220565b3480156102ec57600080fd5b506102496102fb366004611564565b6106fd565b34801561030c57600080fd5b5061026a60065481565b34801561032257600080fd5b506103366103313660046115ca565b61071f565b005b34801561034457600080fd5b50601154610358906001600160a01b031681565b6040516001600160a01b039091168152602001610220565b34801561037c57600080fd5b5061033661038b3660046115ca565b610769565b34801561039c57600080fd5b5061026a600e5481565b3480156103b257600080fd5b506103366103c13660046115f3565b610776565b3480156103d257600080fd5b5061026a6103e1366004611626565b6001600160a01b031660009081526020819052604090205490565b34801561040857600080fd5b506103366108ce565b34801561041d57600080fd5b5061026a60105481565b34801561043357600080fd5b50610336610442366004611641565b6108e2565b34801561045357600080fd5b506005546001600160a01b0316610358565b34801561047157600080fd5b50600a546102499060ff1681565b34801561048b57600080fd5b5061033661049a366004611684565b610929565b3480156104ab57600080fd5b506102136109ab565b3480156104c057600080fd5b506103366104cf366004611626565b6109ba565b3480156104e057600080fd5b506102496104ef366004611564565b6109e4565b34801561050057600080fd5b5061026a600f5481565b34801561051657600080fd5b50610249610525366004611564565b610a5f565b34801561053657600080fd5b5061026a610545366004611626565b60096020526000908152604090205481565b34801561056357600080fd5b50610249610572366004611626565b60076020526000908152604090205460ff1681565b34801561059357600080fd5b5061026a6105a23660046116c6565b610a6d565b3480156105b357600080fd5b506103366105c23660046115f3565b610a98565b3480156105d357600080fd5b506103366105e2366004611626565b610be3565b3480156105f357600080fd5b50610249610602366004611626565b60086020526000908152604090205460ff1681565b34801561062357600080fd5b5061026a600b5481565b60606003805461063c906116f0565b80601f0160208091040260200160405190810160405280929190818152602001828054610668906116f0565b80156106b55780601f1061068a576101008083540402835291602001916106b5565b820191906000526020600020905b81548152906001019060200180831161069857829003601f168201915b5050505050905090565b6000336106cd818585610c7b565b60019150505b92915050565b6000336106e7858285610d9f565b6106f2858585610e19565b506001949350505050565b6000336106cd8185856107108383610a6d565b61071a9190611740565b610c7b565b610727610e3f565b6107313382610e99565b60405181815233907f696de425f79f4a40bc6d2122ca50507f0efbeabbff86a84871b7196ab8ea8df79060200160405180910390a250565b610771610e3f565b600b55565b6005546001600160a01b031633148061078e57503330145b6108055760405162461bcd60e51b815260206004820152603f60248201527f416e74694d45563a204f6e6c7920636f6e7472616374206f776e6572206f722060448201527f74686520636f6e747261637420697473656c662063616e20736574205649500060648201526084015b60405180910390fd5b6001600160a01b03821660009081526007602052604090205460ff161561086e5760405162461bcd60e51b815260206004820152601e60248201527f416e74694d45563a2043616e6e6f742073657420424f5420746f20564950000060448201526064016107fc565b6001600160a01b038216600081815260086020908152604091829020805460ff191685151590811790915591519182527fda633a71264a27905632c474143536c3964c692d30dbf9384cf1f2e87659d64c91015b60405180910390a25050565b6108d6610e3f565b6108e06000610fcb565b565b6108ea610e3f565b601280546001600160a01b039485166001600160a01b031991821617909155601380549385169382169390931790925560148054919093169116179055565b610931610e3f565b600a805460ff1916861515908117909155600c859055600d849055600e839055600f8290556040805191825260208201869052810184905260608101839052608081018290527f16b4359a97b6eb33ca4088fa945b541cf984dbebb7e1e6313b00db35cf030e309060a00160405180910390a15050505050565b60606004805461063c906116f0565b6109c2610e3f565b601180546001600160a01b0319166001600160a01b0392909216919091179055565b600033816109f28286610a6d565b905083811015610a525760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016107fc565b6106f28286868403610c7b565b6000336106cd818585610e19565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6005546001600160a01b0316331480610ab057503330145b610b225760405162461bcd60e51b815260206004820152603f60248201527f416e74694d45563a204f6e6c7920636f6e7472616374206f776e6572206f722060448201527f74686520636f6e747261637420697473656c662063616e2073657420424f540060648201526084016107fc565b6001600160a01b03821660009081526008602052604090205460ff1615610b8b5760405162461bcd60e51b815260206004820152601e60248201527f416e74694d45563a2043616e6e6f74207365742056495020746f20424f54000060448201526064016107fc565b6001600160a01b038216600081815260076020908152604091829020805460ff191685151590811790915591519182527f0cc5910ce116d1d71aa48f1ccd5e978315791068133c0c6aa7540ab8c9a8796d91016108c2565b610beb610e3f565b6001600160a01b038116610c505760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016107fc565b610c5981610fcb565b50565b6000610c688284611753565b9392505050565b6000610c68828461176a565b6001600160a01b038316610cdd5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016107fc565b6001600160a01b038216610d3e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016107fc565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610dab8484610a6d565b90506000198114610e135781811015610e065760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016107fc565b610e138484848403610c7b565b50505050565b600a5460ff1615610e2f57610e2f83838361101d565b610e3a83838361134a565b505050565b6005546001600160a01b031633146108e05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016107fc565b6001600160a01b038216610ef95760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016107fc565b6001600160a01b03821660009081526020819052604090205481811015610f6d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016107fc565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03831660009081526007602052604090205460ff1615801561105f57506001600160a01b03821660009081526007602052604090205460ff16155b6110a45760405162461bcd60e51b8152602060048201526016602482015275105b9d1a5351558e8812db9bdddb8813515588109bdd60521b60448201526064016107fc565b6001600160a01b03821660009081526008602052604090205460ff1661113f57600b54816110e7846001600160a01b031660009081526020819052604090205490565b6110f19190611740565b111561113f5760405162461bcd60e51b815260206004820152601c60248201527f416e74694d45563a204d61782077616c6c65742065786365656465640000000060448201526064016107fc565b6001600160a01b03831660009081526008602052604090205460ff1615801561119a57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b031614155b80156111b457506011546001600160a01b03838116911614155b15610e3a57600c546001600160a01b03841660009081526009602052604090205443916111e091611740565b106112495760405162461bcd60e51b815260206004820152603360248201527f416e74694d45563a2044657465637465642073616e64776963682061747461636044820152726b2c206d696e65206d6f726520626c6f636b7360681b60648201526084016107fc565b6001600160a01b03831660009081526009602052604081204390556010805460019290611277908490611740565b9091555050601054611289903a61176a565b60105461129760018261178c565b600f546112a49190611753565b6112ae919061176a565b6112b89190611740565b600f819055600d546112e3916112da916064916112d491610c5c565b90610c6f565b600f54906114ee565b3a1115610e3a5760405162461bcd60e51b815260206004820152602f60248201527f416e74694d45563a204465746563746564206761732062726962652c20706f7360448201526e39b4b1363290333937b73a16b93ab760891b60648201526084016107fc565b6001600160a01b0383166113ae5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016107fc565b6001600160a01b0382166114105760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016107fc565b6001600160a01b038316600090815260208190526040902054818110156114885760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016107fc565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610e13565b6000610c688284611740565b600060208083528351808285015260005b818110156115275785810183015185820160400152820161150b565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461155f57600080fd5b919050565b6000806040838503121561157757600080fd5b61158083611548565b946020939093013593505050565b6000806000606084860312156115a357600080fd5b6115ac84611548565b92506115ba60208501611548565b9150604084013590509250925092565b6000602082840312156115dc57600080fd5b5035919050565b8035801515811461155f57600080fd5b6000806040838503121561160657600080fd5b61160f83611548565b915061161d602084016115e3565b90509250929050565b60006020828403121561163857600080fd5b610c6882611548565b60008060006060848603121561165657600080fd5b61165f84611548565b925061166d60208501611548565b915061167b60408501611548565b90509250925092565b600080600080600060a0868803121561169c57600080fd5b6116a5866115e3565b97602087013597506040870135966060810135965060800135945092505050565b600080604083850312156116d957600080fd5b6116e283611548565b915061161d60208401611548565b600181811c9082168061170457607f821691505b60208210810361172457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156106d3576106d361172a565b80820281158282048414176106d3576106d361172a565b60008261178757634e487b7160e01b600052601260045260246000fd5b500490565b818103818111156106d3576106d361172a56fea2646970667358221220f3fcdcbbae3e51ef56bd58afce9532f928462a3435b86421f2a933fcbc7910e564736f6c63430008120033",
  "deployedBytecode": "0x6080604052600436106101f25760003560e01c806374f079b81161010d578063a7ae210a116100a0578063dd62ed3e1161006f578063dd62ed3e14610587578063e6584238146105a7578063f2fde38b146105c7578063f4201c3c146105e7578063f8b45b051461061757600080fd5b8063a7ae210a146104f4578063a9059cbb1461050a578063ceb88a161461052a578063d89491401461055757600080fd5b806394b8fb16116100dc57806394b8fb161461047f57806395d89b411461049f578063a29a6089146104b4578063a457c2d7146104d457600080fd5b806374f079b81461041157806375cb1bd1146104275780638da5cb5b1461044757806392181ec61461046557600080fd5b80633eaaf86b116101855780636381f2b1116101545780636381f2b11461039057806369ab300d146103a657806370a08231146103c6578063715018a6146103fc57600080fd5b80633eaaf86b1461030057806342966c681461031657806349bd5a5e146103385780635d0044ca1461037057600080fd5b806323b872dd116101c157806323b872dd1461028e578063265b957b146102ae578063313ce567146102c457806339509351146102e057600080fd5b806306fdde03146101fe578063095ea7b31461022957806318160ddd1461025957806321c609c21461027857600080fd5b366101f957005b600080fd5b34801561020a57600080fd5b5061021361062d565b60405161022091906114fa565b60405180910390f35b34801561023557600080fd5b50610249610244366004611564565b6106bf565b6040519015158152602001610220565b34801561026557600080fd5b506002545b604051908152602001610220565b34801561028457600080fd5b5061026a600c5481565b34801561029a57600080fd5b506102496102a936600461158e565b6106d9565b3480156102ba57600080fd5b5061026a600d5481565b3480156102d057600080fd5b5060405160128152602001610220565b3480156102ec57600080fd5b506102496102fb366004611564565b6106fd565b34801561030c57600080fd5b5061026a60065481565b34801561032257600080fd5b506103366103313660046115ca565b61071f565b005b34801561034457600080fd5b50601154610358906001600160a01b031681565b6040516001600160a01b039091168152602001610220565b34801561037c57600080fd5b5061033661038b3660046115ca565b610769565b34801561039c57600080fd5b5061026a600e5481565b3480156103b257600080fd5b506103366103c13660046115f3565b610776565b3480156103d257600080fd5b5061026a6103e1366004611626565b6001600160a01b031660009081526020819052604090205490565b34801561040857600080fd5b506103366108ce565b34801561041d57600080fd5b5061026a60105481565b34801561043357600080fd5b50610336610442366004611641565b6108e2565b34801561045357600080fd5b506005546001600160a01b0316610358565b34801561047157600080fd5b50600a546102499060ff1681565b34801561048b57600080fd5b5061033661049a366004611684565b610929565b3480156104ab57600080fd5b506102136109ab565b3480156104c057600080fd5b506103366104cf366004611626565b6109ba565b3480156104e057600080fd5b506102496104ef366004611564565b6109e4565b34801561050057600080fd5b5061026a600f5481565b34801561051657600080fd5b50610249610525366004611564565b610a5f565b34801561053657600080fd5b5061026a610545366004611626565b60096020526000908152604090205481565b34801561056357600080fd5b50610249610572366004611626565b60076020526000908152604090205460ff1681565b34801561059357600080fd5b5061026a6105a23660046116c6565b610a6d565b3480156105b357600080fd5b506103366105c23660046115f3565b610a98565b3480156105d357600080fd5b506103366105e2366004611626565b610be3565b3480156105f357600080fd5b50610249610602366004611626565b60086020526000908152604090205460ff1681565b34801561062357600080fd5b5061026a600b5481565b60606003805461063c906116f0565b80601f0160208091040260200160405190810160405280929190818152602001828054610668906116f0565b80156106b55780601f1061068a576101008083540402835291602001916106b5565b820191906000526020600020905b81548152906001019060200180831161069857829003601f168201915b5050505050905090565b6000336106cd818585610c7b565b60019150505b92915050565b6000336106e7858285610d9f565b6106f2858585610e19565b506001949350505050565b6000336106cd8185856107108383610a6d565b61071a9190611740565b610c7b565b610727610e3f565b6107313382610e99565b60405181815233907f696de425f79f4a40bc6d2122ca50507f0efbeabbff86a84871b7196ab8ea8df79060200160405180910390a250565b610771610e3f565b600b55565b6005546001600160a01b031633148061078e57503330145b6108055760405162461bcd60e51b815260206004820152603f60248201527f416e74694d45563a204f6e6c7920636f6e7472616374206f776e6572206f722060448201527f74686520636f6e747261637420697473656c662063616e20736574205649500060648201526084015b60405180910390fd5b6001600160a01b03821660009081526007602052604090205460ff161561086e5760405162461bcd60e51b815260206004820152601e60248201527f416e74694d45563a2043616e6e6f742073657420424f5420746f20564950000060448201526064016107fc565b6001600160a01b038216600081815260086020908152604091829020805460ff191685151590811790915591519182527fda633a71264a27905632c474143536c3964c692d30dbf9384cf1f2e87659d64c91015b60405180910390a25050565b6108d6610e3f565b6108e06000610fcb565b565b6108ea610e3f565b601280546001600160a01b039485166001600160a01b031991821617909155601380549385169382169390931790925560148054919093169116179055565b610931610e3f565b600a805460ff1916861515908117909155600c859055600d849055600e839055600f8290556040805191825260208201869052810184905260608101839052608081018290527f16b4359a97b6eb33ca4088fa945b541cf984dbebb7e1e6313b00db35cf030e309060a00160405180910390a15050505050565b60606004805461063c906116f0565b6109c2610e3f565b601180546001600160a01b0319166001600160a01b0392909216919091179055565b600033816109f28286610a6d565b905083811015610a525760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016107fc565b6106f28286868403610c7b565b6000336106cd818585610e19565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6005546001600160a01b0316331480610ab057503330145b610b225760405162461bcd60e51b815260206004820152603f60248201527f416e74694d45563a204f6e6c7920636f6e7472616374206f776e6572206f722060448201527f74686520636f6e747261637420697473656c662063616e2073657420424f540060648201526084016107fc565b6001600160a01b03821660009081526008602052604090205460ff1615610b8b5760405162461bcd60e51b815260206004820152601e60248201527f416e74694d45563a2043616e6e6f74207365742056495020746f20424f54000060448201526064016107fc565b6001600160a01b038216600081815260076020908152604091829020805460ff191685151590811790915591519182527f0cc5910ce116d1d71aa48f1ccd5e978315791068133c0c6aa7540ab8c9a8796d91016108c2565b610beb610e3f565b6001600160a01b038116610c505760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016107fc565b610c5981610fcb565b50565b6000610c688284611753565b9392505050565b6000610c68828461176a565b6001600160a01b038316610cdd5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016107fc565b6001600160a01b038216610d3e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016107fc565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610dab8484610a6d565b90506000198114610e135781811015610e065760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016107fc565b610e138484848403610c7b565b50505050565b600a5460ff1615610e2f57610e2f83838361101d565b610e3a83838361134a565b505050565b6005546001600160a01b031633146108e05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016107fc565b6001600160a01b038216610ef95760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016107fc565b6001600160a01b03821660009081526020819052604090205481811015610f6d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016107fc565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03831660009081526007602052604090205460ff1615801561105f57506001600160a01b03821660009081526007602052604090205460ff16155b6110a45760405162461bcd60e51b8152602060048201526016602482015275105b9d1a5351558e8812db9bdddb8813515588109bdd60521b60448201526064016107fc565b6001600160a01b03821660009081526008602052604090205460ff1661113f57600b54816110e7846001600160a01b031660009081526020819052604090205490565b6110f19190611740565b111561113f5760405162461bcd60e51b815260206004820152601c60248201527f416e74694d45563a204d61782077616c6c65742065786365656465640000000060448201526064016107fc565b6001600160a01b03831660009081526008602052604090205460ff1615801561119a57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b031614155b80156111b457506011546001600160a01b03838116911614155b15610e3a57600c546001600160a01b03841660009081526009602052604090205443916111e091611740565b106112495760405162461bcd60e51b815260206004820152603360248201527f416e74694d45563a2044657465637465642073616e64776963682061747461636044820152726b2c206d696e65206d6f726520626c6f636b7360681b60648201526084016107fc565b6001600160a01b03831660009081526009602052604081204390556010805460019290611277908490611740565b9091555050601054611289903a61176a565b60105461129760018261178c565b600f546112a49190611753565b6112ae919061176a565b6112b89190611740565b600f819055600d546112e3916112da916064916112d491610c5c565b90610c6f565b600f54906114ee565b3a1115610e3a5760405162461bcd60e51b815260206004820152602f60248201527f416e74694d45563a204465746563746564206761732062726962652c20706f7360448201526e39b4b1363290333937b73a16b93ab760891b60648201526084016107fc565b6001600160a01b0383166113ae5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016107fc565b6001600160a01b0382166114105760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016107fc565b6001600160a01b038316600090815260208190526040902054818110156114885760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016107fc565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610e13565b6000610c688284611740565b600060208083528351808285015260005b818110156115275785810183015185820160400152820161150b565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461155f57600080fd5b919050565b6000806040838503121561157757600080fd5b61158083611548565b946020939093013593505050565b6000806000606084860312156115a357600080fd5b6115ac84611548565b92506115ba60208501611548565b9150604084013590509250925092565b6000602082840312156115dc57600080fd5b5035919050565b8035801515811461155f57600080fd5b6000806040838503121561160657600080fd5b61160f83611548565b915061161d602084016115e3565b90509250929050565b60006020828403121561163857600080fd5b610c6882611548565b60008060006060848603121561165657600080fd5b61165f84611548565b925061166d60208501611548565b915061167b60408501611548565b90509250925092565b600080600080600060a0868803121561169c57600080fd5b6116a5866115e3565b97602087013597506040870135966060810135965060800135945092505050565b600080604083850312156116d957600080fd5b6116e283611548565b915061161d60208401611548565b600181811c9082168061170457607f821691505b60208210810361172457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156106d3576106d361172a565b80820281158282048414176106d3576106d361172a565b60008261178757634e487b7160e01b600052601260045260246000fd5b500490565b818103818111156106d3576106d361172a56fea2646970667358221220f3fcdcbbae3e51ef56bd58afce9532f928462a3435b86421f2a933fcbc7910e564736f6c63430008120033",
  "devdoc": {
    "events": {
      "Approval(address,address,uint256)": {
        "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
      },
      "Transfer(address,address,uint256)": {
        "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
      }
    },
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 581,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "_balances",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 587,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "_allowances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 589,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 591,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "_name",
        "offset": 0,
        "slot": "3",
        "type": "t_string_storage"
      },
      {
        "astId": 593,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "_symbol",
        "offset": 0,
        "slot": "4",
        "type": "t_string_storage"
      },
      {
        "astId": 26,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "_owner",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 1161,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 1165,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "isBOT",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 1169,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "isVIP",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 1173,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "lastTxBlock",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 1175,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "detectMEV",
        "offset": 0,
        "slot": "10",
        "type": "t_bool"
      },
      {
        "astId": 1177,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "maxWallet",
        "offset": 0,
        "slot": "11",
        "type": "t_uint256"
      },
      {
        "astId": 1179,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "mineBlocks",
        "offset": 0,
        "slot": "12",
        "type": "t_uint256"
      },
      {
        "astId": 1181,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "gasDelta",
        "offset": 0,
        "slot": "13",
        "type": "t_uint256"
      },
      {
        "astId": 1183,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "maxSample",
        "offset": 0,
        "slot": "14",
        "type": "t_uint256"
      },
      {
        "astId": 1185,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "avgGasPrice",
        "offset": 0,
        "slot": "15",
        "type": "t_uint256"
      },
      {
        "astId": 1187,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "txCounter",
        "offset": 0,
        "slot": "16",
        "type": "t_uint256"
      },
      {
        "astId": 1192,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "uniswapV2Pair",
        "offset": 0,
        "slot": "17",
        "type": "t_address"
      },
      {
        "astId": 1194,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "dev",
        "offset": 0,
        "slot": "18",
        "type": "t_address"
      },
      {
        "astId": 1196,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "burns",
        "offset": 0,
        "slot": "19",
        "type": "t_address"
      },
      {
        "astId": 1198,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "airdrop",
        "offset": 0,
        "slot": "20",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}