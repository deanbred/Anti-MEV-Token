{
  "address": "0x556c3E80a2Bc69c024B449Ed2631E9cd25cD1a0a",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_totalSupply",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "blockDelay",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "bots",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "enabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxWallet",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_address",
          "type": "address[]"
        },
        {
          "internalType": "bool[]",
          "name": "_isBot",
          "type": "bool[]"
        }
      ],
      "name": "setBots",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_enabled",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_maxWallet",
          "type": "uint256"
        },
        {
          "internalType": "uint16",
          "name": "_blockDelay",
          "type": "uint16"
        },
        {
          "internalType": "address",
          "name": "_uniswapV2Pair",
          "type": "address"
        }
      ],
      "name": "setVars",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "uniswapV2Pair",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x66e3111449376b6dff4b34e5609d2a7bcc5c8dcb5171e9f41e802bad62339d58",
  "receipt": {
    "to": null,
    "from": "0x8ee9B41620d01dAF068019fEE95D3aC855648B50",
    "contractAddress": "0x556c3E80a2Bc69c024B449Ed2631E9cd25cD1a0a",
    "transactionIndex": 0,
    "gasUsed": "1349136",
    "logsBloom": "0x
    "blockHash": "0xa51ae78cd966d0ed8ea0d8b28778082d36900933b8f7c24586062dbe347373cb",
    "transactionHash": "0x66e3111449376b6dff4b34e5609d2a7bcc5c8dcb5171e9f41e802bad62339d58",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 9065771,
        "transactionHash": "0x66e3111449376b6dff4b34e5609d2a7bcc5c8dcb5171e9f41e802bad62339d58",
        "address": "0x556c3E80a2Bc69c024B449Ed2631E9cd25cD1a0a",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000008ee9b41620d01daf068019fee95d3ac855648b50"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0xa51ae78cd966d0ed8ea0d8b28778082d36900933b8f7c24586062dbe347373cb"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 9065771,
        "transactionHash": "0x66e3111449376b6dff4b34e5609d2a7bcc5c8dcb5171e9f41e802bad62339d58",
        "address": "0x556c3E80a2Bc69c024B449Ed2631E9cd25cD1a0a",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000008ee9b41620d01daf068019fee95d3ac855648b50"
        ],
        "data": "0x000000000000000000000000000000000000000003a1679975a96fc068840000",
        "logIndex": 1,
        "blockHash": "0xa51ae78cd966d0ed8ea0d8b28778082d36900933b8f7c24586062dbe347373cb"
      }
    ],
    "blockNumber": 9065771,
    "cumulativeGasUsed": "1349136",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "1123581321000000000000000000"
  ],
  "numDeployments": 3,
  "solcInputHash": "02c2fe659eefdef0a8251d592234aaaf",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_totalSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"blockDelay\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"bots\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxWallet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_address\",\"type\":\"address[]\"},{\"internalType\":\"bool[]\",\"name\":\"_isBot\",\"type\":\"bool[]\"}],\"name\":\"setBots\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_enabled\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_maxWallet\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"_blockDelay\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"_uniswapV2Pair\",\"type\":\"address\"}],\"name\":\"setVars\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Pair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AntiMEV.sol\":\"AntiMEV\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/AntiMEV.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nabstract contract Context {\\n  function _msgSender() internal view virtual returns (address) {\\n    return msg.sender;\\n  }\\n\\n  function _msgData() internal view virtual returns (bytes calldata) {\\n    return msg.data;\\n  }\\n}\\n\\nabstract contract Ownable is Context {\\n  address private _owner;\\n\\n  event OwnershipTransferred(\\n    address indexed previousOwner,\\n    address indexed newOwner\\n  );\\n\\n  constructor() {\\n    _transferOwnership(_msgSender());\\n  }\\n\\n  function owner() public view virtual returns (address) {\\n    return _owner;\\n  }\\n\\n  modifier onlyOwner() {\\n    require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    _;\\n  }\\n\\n  function renounceOwnership() public virtual onlyOwner {\\n    _transferOwnership(address(0));\\n  }\\n\\n  function transferOwnership(address newOwner) public virtual onlyOwner {\\n    require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n    _transferOwnership(newOwner);\\n  }\\n\\n  function _transferOwnership(address newOwner) internal virtual {\\n    address oldOwner = _owner;\\n    _owner = newOwner;\\n    emit OwnershipTransferred(oldOwner, newOwner);\\n  }\\n}\\n\\ninterface IERC20 {\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n  function totalSupply() external view returns (uint256);\\n\\n  function balanceOf(address account) external view returns (uint256);\\n\\n  function transfer(address to, uint256 amount) external returns (bool);\\n\\n  function allowance(\\n    address owner,\\n    address spender\\n  ) external view returns (uint256);\\n\\n  function approve(address spender, uint256 amount) external returns (bool);\\n\\n  function transferFrom(\\n    address from,\\n    address to,\\n    uint256 amount\\n  ) external returns (bool);\\n}\\n\\ninterface IERC20Metadata is IERC20 {\\n  /**\\n   * @dev Returns the name of the token.\\n   */\\n  function name() external view returns (string memory);\\n\\n  /**\\n   * @dev Returns the symbol of the token.\\n   */\\n  function symbol() external view returns (string memory);\\n\\n  /**\\n   * @dev Returns the decimals places of the token.\\n   */\\n  function decimals() external view returns (uint8);\\n}\\n\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n  mapping(address => uint256) private _balances;\\n  mapping(address => mapping(address => uint256)) private _allowances;\\n\\n  string private _name;\\n  string private _symbol;\\n  uint256 private _totalSupply;\\n\\n  constructor(string memory name_, string memory symbol_) {\\n    _name = name_;\\n    _symbol = symbol_;\\n  }\\n\\n  function name() public view virtual override returns (string memory) {\\n    return _name;\\n  }\\n\\n  function symbol() public view virtual override returns (string memory) {\\n    return _symbol;\\n  }\\n\\n  function decimals() public view virtual override returns (uint8) {\\n    return 18;\\n  }\\n\\n  function totalSupply() public view virtual override returns (uint256) {\\n    return _totalSupply;\\n  }\\n\\n  function balanceOf(\\n    address account\\n  ) public view virtual override returns (uint256) {\\n    return _balances[account];\\n  }\\n\\n  function transfer(\\n    address recipient,\\n    uint256 amount\\n  ) public virtual override returns (bool) {\\n    _transfer(_msgSender(), recipient, amount);\\n    return true;\\n  }\\n\\n  function allowance(\\n    address owner,\\n    address spender\\n  ) public view virtual override returns (uint256) {\\n    return _allowances[owner][spender];\\n  }\\n\\n  function approve(\\n    address spender,\\n    uint256 amount\\n  ) public virtual override returns (bool) {\\n    _approve(_msgSender(), spender, amount);\\n    return true;\\n  }\\n\\n  function transferFrom(\\n    address sender,\\n    address recipient,\\n    uint256 amount\\n  ) public virtual override returns (bool) {\\n    _transfer(sender, recipient, amount);\\n\\n    uint256 currentAllowance = _allowances[sender][_msgSender()];\\n    require(\\n      currentAllowance >= amount,\\n      \\\"ERC20: transfer amount exceeds allowance\\\"\\n    );\\n    unchecked {\\n      _approve(sender, _msgSender(), currentAllowance - amount);\\n    }\\n\\n    return true;\\n  }\\n\\n  function increaseAllowance(\\n    address spender,\\n    uint256 addedValue\\n  ) public virtual returns (bool) {\\n    _approve(\\n      _msgSender(),\\n      spender,\\n      _allowances[_msgSender()][spender] + addedValue\\n    );\\n    return true;\\n  }\\n\\n  function decreaseAllowance(\\n    address spender,\\n    uint256 subtractedValue\\n  ) public virtual returns (bool) {\\n    uint256 currentAllowance = _allowances[_msgSender()][spender];\\n    require(\\n      currentAllowance >= subtractedValue,\\n      \\\"ERC20: decreased allowance below zero\\\"\\n    );\\n    unchecked {\\n      _approve(_msgSender(), spender, currentAllowance - subtractedValue);\\n    }\\n\\n    return true;\\n  }\\n\\n  /**\\n   * @dev Moves `amount` of tokens from `sender` to `recipient`.\\n   *\\n   * This internal function is equivalent to {transfer}, and can be used to\\n   * e.g. implement automatic token fees, slashing mechanisms, etc.\\n   *\\n   * Emits a {Transfer} event.\\n   *\\n   * Requirements:\\n   *\\n   * - `sender` cannot be the zero address.\\n   * - `recipient` cannot be the zero address.\\n   * - `sender` must have a balance of at least `amount`.\\n   */\\n  function _transfer(\\n    address sender,\\n    address recipient,\\n    uint256 amount\\n  ) internal virtual {\\n    require(sender != address(0), \\\"ERC20: transfer from the zero address\\\");\\n    require(recipient != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n    _beforeTokenTransfer(sender, recipient, amount);\\n\\n    uint256 senderBalance = _balances[sender];\\n    require(senderBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n    unchecked {\\n      _balances[sender] = senderBalance - amount;\\n    }\\n    _balances[recipient] += amount;\\n\\n    emit Transfer(sender, recipient, amount);\\n\\n    _afterTokenTransfer(sender, recipient, amount);\\n  }\\n\\n  function _mint(address account, uint256 amount) internal virtual {\\n    require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n    _beforeTokenTransfer(address(0), account, amount);\\n\\n    _totalSupply += amount;\\n    _balances[account] += amount;\\n    emit Transfer(address(0), account, amount);\\n\\n    _afterTokenTransfer(address(0), account, amount);\\n  }\\n\\n  function _burn(address account, uint256 amount) internal virtual {\\n    require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n    _beforeTokenTransfer(account, address(0), amount);\\n\\n    uint256 accountBalance = _balances[account];\\n    require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n    unchecked {\\n      _balances[account] = accountBalance - amount;\\n    }\\n    _totalSupply -= amount;\\n\\n    emit Transfer(account, address(0), amount);\\n\\n    _afterTokenTransfer(account, address(0), amount);\\n  }\\n\\n  function _approve(\\n    address owner,\\n    address spender,\\n    uint256 amount\\n  ) internal virtual {\\n    require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n    require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n    _allowances[owner][spender] = amount;\\n    emit Approval(owner, spender, amount);\\n  }\\n\\n  function _beforeTokenTransfer(\\n    address from,\\n    address to,\\n    uint256 amount\\n  ) internal virtual {}\\n\\n  function _afterTokenTransfer(\\n    address from,\\n    address to,\\n    uint256 amount\\n  ) internal virtual {}\\n}\\n\\ncontract AntiMEV is ERC20, Ownable {\\n  bool public enabled = true;\\n  uint256 public maxWallet = 1123581321 * 1e16; // 1% of supply\\n  uint16 public blockDelay = 3;\\n  address public uniswapV2Pair;\\n\\n  mapping(address => bool) public bots;\\n  mapping(address => uint256) private lastTxBlock;\\n\\n  constructor(uint256 _totalSupply) ERC20(\\\"AntiMEV\\\", \\\"aMEV\\\") {\\n    _mint(msg.sender, _totalSupply);\\n  }\\n\\n  function setVars(\\n    bool _enabled,\\n    uint256 _maxWallet,\\n    uint16 _blockDelay,\\n    address _uniswapV2Pair\\n  ) external onlyOwner {\\n    enabled = _enabled;\\n    maxWallet = _maxWallet;\\n    blockDelay = _blockDelay;\\n    uniswapV2Pair = _uniswapV2Pair;\\n  }\\n\\n  function setBots(\\n    address[] memory _address,\\n    bool[] memory _isBot\\n  ) external onlyOwner {\\n    for (uint256 i = 0; i < _address.length; i++) {\\n      require(_address[i] != address(this) && _address[i] != owner());\\n      bots[_address[i]] = _isBot[i];\\n    }\\n  }\\n\\n  function _beforeTokenTransfer(\\n    address from,\\n    address to,\\n    uint256 amount\\n  ) internal virtual override {\\n    require(enabled);\\n\\n    // check if known MEV bot\\n    require(!bots[to] && !bots[from], \\\"MEV BOT!\\\");\\n\\n    // check if trading is live\\n    if (uniswapV2Pair == address(0)) {\\n      require(from == owner() || to == owner(), \\\"PAIR NOT SET!\\\");\\n      return;\\n    }\\n\\n    // enforce max wallet size\\n    if (enabled && from == uniswapV2Pair) {\\n      require(super.balanceOf(to) + amount <= maxWallet, \\\"MAX WALLET!\\\");\\n    }\\n  }\\n\\n  function transfer(\\n    address recipient,\\n    uint256 amount\\n  ) public override returns (bool) {\\n    require(\\n      block.number > lastTxBlock[msg.sender] + blockDelay,\\n      \\\"AntiMEVToken: Cannot transfer twice in the same block\\\"\\n    );\\n    lastTxBlock[msg.sender] = block.number;\\n    return super.transfer(recipient, amount);\\n  }\\n\\n  function transferFrom(\\n    address sender,\\n    address recipient,\\n    uint256 amount\\n  ) public override returns (bool) {\\n    require(\\n      block.number > lastTxBlock[sender] + blockDelay,\\n      \\\"AntiMEVToken: Cannot transfer twice in the same block\\\"\\n    );\\n    lastTxBlock[sender] = block.number;\\n    return super.transferFrom(sender, recipient, amount);\\n  }\\n\\n  function burn(uint256 value) external onlyOwner {\\n    _burn(msg.sender, value);\\n  }\\n}\\n\",\"keccak256\":\"0xf4f6bc3659248c2318a65976d622c755f4a4dd9767630ce4afedc7a0bc9bdbb6\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040526005805460ff60a01b1916600160a01b1790556a094b46a7939d470b4900006006556007805461ffff191660031790553480156200004157600080fd5b50604051620019d3380380620019d3833981016040819052620000649162000407565b6040518060400160405280600781526020016620b73a34a6a2ab60c91b8152506040518060400160405280600481526020016330a6a2ab60e11b8152508160029081620000b29190620004c5565b506003620000c18282620004c5565b505050620000de620000d8620000f160201b60201c565b620000f5565b620000ea338262000147565b50620005b9565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216620001a35760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064015b60405180910390fd5b620001b1600083836200023e565b8060046000828254620001c5919062000591565b90915550506001600160a01b03821660009081526020819052604081208054839290620001f490849062000591565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600554600160a01b900460ff166200025557600080fd5b6001600160a01b03821660009081526008602052604090205460ff161580156200029857506001600160a01b03831660009081526008602052604090205460ff16155b620002d15760405162461bcd60e51b81526020600482015260086024820152674d455620424f542160c01b60448201526064016200019a565b6007546201000090046001600160a01b031662000355576005546001600160a01b03848116911614806200031257506005546001600160a01b038381169116145b620003505760405162461bcd60e51b815260206004820152600d60248201526c50414952204e4f54205345542160981b60448201526064016200019a565b505050565b600554600160a01b900460ff1680156200038257506007546001600160a01b038481166201000090920416145b15620003505760065481620003a284620003ec60201b6200060a1760201c565b620003ae919062000591565b1115620003505760405162461bcd60e51b815260206004820152600b60248201526a4d41582057414c4c45542160a81b60448201526064016200019a565b6001600160a01b031660009081526020819052604090205490565b6000602082840312156200041a57600080fd5b5051919050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200044c57607f821691505b6020821081036200046d57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200035057600081815260208120601f850160051c810160208610156200049c5750805b601f850160051c820191505b81811015620004bd57828155600101620004a8565b505050505050565b81516001600160401b03811115620004e157620004e162000421565b620004f981620004f2845462000437565b8462000473565b602080601f831160018114620005315760008415620005185750858301515b600019600386901b1c1916600185901b178555620004bd565b600085815260208120601f198616915b82811015620005625788860151825594840194600190910190840162000541565b5085821015620005815787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b80820180821115620005b357634e487b7160e01b600052601160045260246000fd5b92915050565b61140a80620005c96000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c8063715018a6116100b8578063bfd792841161007c578063bfd7928414610296578063d98f6088146102b9578063dd62ed3e146102da578063e41b7a2c14610313578063f2fde38b14610326578063f8b45b051461033957600080fd5b8063715018a61461024f5780638da5cb5b1461025757806395d89b4114610268578063a457c2d714610270578063a9059cbb1461028357600080fd5b806323b872dd1161010a57806323b872dd146101c3578063313ce567146101d657806339509351146101e557806342966c68146101f857806349bd5a5e1461020b57806370a082311461023c57600080fd5b806306fdde0314610147578063095ea7b3146101655780630ee0347c1461018857806318160ddd1461019d578063238dafe0146101af575b600080fd5b61014f610342565b60405161015c9190610f6b565b60405180910390f35b610178610173366004610fd5565b6103d4565b604051901515815260200161015c565b61019b6101963660046110ec565b6103eb565b005b6004545b60405190815260200161015c565b60055461017890600160a01b900460ff1681565b6101786101d13660046111ac565b61051d565b6040516012815260200161015c565b6101786101f3366004610fd5565b610597565b61019b6102063660046111e8565b6105d3565b600754610224906201000090046001600160a01b031681565b6040516001600160a01b03909116815260200161015c565b6101a161024a366004611201565b61060a565b61019b610625565b6005546001600160a01b0316610224565b61014f61065b565b61017861027e366004610fd5565b61066a565b610178610291366004610fd5565b610703565b6101786102a4366004611201565b60086020526000908152604090205460ff1681565b6007546102c79061ffff1681565b60405161ffff909116815260200161015c565b6101a16102e836600461121c565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61019b61032136600461124f565b610769565b61019b610334366004611201565b6107e8565b6101a160065481565b606060028054610351906112a5565b80601f016020809104026020016040519081016040528092919081815260200182805461037d906112a5565b80156103ca5780601f1061039f576101008083540402835291602001916103ca565b820191906000526020600020905b8154815290600101906020018083116103ad57829003601f168201915b5050505050905090565b60006103e1338484610880565b5060015b92915050565b6005546001600160a01b0316331461041e5760405162461bcd60e51b8152600401610415906112df565b60405180910390fd5b60005b825181101561051857306001600160a01b031683828151811061044657610446611314565b60200260200101516001600160a01b03161415801561049b57506005546001600160a01b03166001600160a01b031683828151811061048757610487611314565b60200260200101516001600160a01b031614155b6104a457600080fd5b8181815181106104b6576104b6611314565b6020026020010151600860008584815181106104d4576104d4611314565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790558061051081611340565b915050610421565b505050565b6007546001600160a01b038416600090815260096020526040812054909161054b9161ffff90911690611359565b43116105695760405162461bcd60e51b81526004016104159061136c565b6001600160a01b038416600090815260096020526040902043905561058f8484846109a4565b949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916103e19185906105ce908690611359565b610880565b6005546001600160a01b031633146105fd5760405162461bcd60e51b8152600401610415906112df565b6106073382610a4e565b50565b6001600160a01b031660009081526020819052604090205490565b6005546001600160a01b0316331461064f5760405162461bcd60e51b8152600401610415906112df565b6106596000610ba8565b565b606060038054610351906112a5565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156106ec5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610415565b6106f93385858403610880565b5060019392505050565b6007543360009081526009602052604081205490916107289161ffff90911690611359565b43116107465760405162461bcd60e51b81526004016104159061136c565b3360009081526009602052604090204390556107628383610bfa565b9392505050565b6005546001600160a01b031633146107935760405162461bcd60e51b8152600401610415906112df565b60058054941515600160a01b0260ff60a01b1990951694909417909355600691909155600780546001600160a01b0390931662010000026001600160b01b031990931661ffff90921691909117919091179055565b6005546001600160a01b031633146108125760405162461bcd60e51b8152600401610415906112df565b6001600160a01b0381166108775760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610415565b61060781610ba8565b6001600160a01b0383166108e25760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610415565b6001600160a01b0382166109435760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610415565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006109b1848484610c03565b6001600160a01b038416600090815260016020908152604080832033845290915290205482811015610a365760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b6064820152608401610415565b610a438533858403610880565b506001949350505050565b6001600160a01b038216610aae5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610415565b610aba82600083610ddd565b6001600160a01b03821660009081526020819052604090205481811015610b2e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610415565b6001600160a01b0383166000908152602081905260408120838303905560048054849290610b5d9084906113c1565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006103e13384845b6001600160a01b038316610c675760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610415565b6001600160a01b038216610cc95760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610415565b610cd4838383610ddd565b6001600160a01b03831660009081526020819052604090205481811015610d4c5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610415565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610d83908490611359565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610dcf91815260200190565b60405180910390a350505050565b600554600160a01b900460ff16610df357600080fd5b6001600160a01b03821660009081526008602052604090205460ff16158015610e3557506001600160a01b03831660009081526008602052604090205460ff16155b610e6c5760405162461bcd60e51b81526020600482015260086024820152674d455620424f542160c01b6044820152606401610415565b6007546201000090046001600160a01b0316610ee7576005546001600160a01b0384811691161480610eab57506005546001600160a01b038381169116145b6105185760405162461bcd60e51b815260206004820152600d60248201526c50414952204e4f54205345542160981b6044820152606401610415565b600554600160a01b900460ff168015610f1357506007546001600160a01b038481166201000090920416145b156105185760065481610f258461060a565b610f2f9190611359565b11156105185760405162461bcd60e51b815260206004820152600b60248201526a4d41582057414c4c45542160a81b6044820152606401610415565b600060208083528351808285015260005b81811015610f9857858101830151858201604001528201610f7c565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610fd057600080fd5b919050565b60008060408385031215610fe857600080fd5b610ff183610fb9565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561103e5761103e610fff565b604052919050565b600067ffffffffffffffff82111561106057611060610fff565b5060051b60200190565b80358015158114610fd057600080fd5b600082601f83011261108b57600080fd5b813560206110a061109b83611046565b611015565b82815260059290921b840181019181810190868411156110bf57600080fd5b8286015b848110156110e1576110d48161106a565b83529183019183016110c3565b509695505050505050565b600080604083850312156110ff57600080fd5b823567ffffffffffffffff8082111561111757600080fd5b818501915085601f83011261112b57600080fd5b8135602061113b61109b83611046565b82815260059290921b8401810191818101908984111561115a57600080fd5b948201945b8386101561117f5761117086610fb9565b8252948201949082019061115f565b9650508601359250508082111561119557600080fd5b506111a28582860161107a565b9150509250929050565b6000806000606084860312156111c157600080fd5b6111ca84610fb9565b92506111d860208501610fb9565b9150604084013590509250925092565b6000602082840312156111fa57600080fd5b5035919050565b60006020828403121561121357600080fd5b61076282610fb9565b6000806040838503121561122f57600080fd5b61123883610fb9565b915061124660208401610fb9565b90509250929050565b6000806000806080858703121561126557600080fd5b61126e8561106a565b935060208501359250604085013561ffff8116811461128c57600080fd5b915061129a60608601610fb9565b905092959194509250565b600181811c908216806112b957607f821691505b6020821081036112d957634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016113525761135261132a565b5060010190565b808201808211156103e5576103e561132a565b60208082526035908201527f416e74694d4556546f6b656e3a2043616e6e6f74207472616e7366657220747760408201527469636520696e207468652073616d6520626c6f636b60581b606082015260800190565b818103818111156103e5576103e561132a56fea264697066735822122039dfd8eb5e6aff7e85ac5c19a57547155bdfcad46afad41995f93e13661042ae64736f6c63430008120033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "decimals()": {
        "details": "Returns the decimals places of the token."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 213,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "_balances",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 219,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "_allowances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 221,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "_name",
        "offset": 0,
        "slot": "2",
        "type": "t_string_storage"
      },
      {
        "astId": 223,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "_symbol",
        "offset": 0,
        "slot": "3",
        "type": "t_string_storage"
      },
      {
        "astId": 225,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 24,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "_owner",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 733,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "enabled",
        "offset": 20,
        "slot": "5",
        "type": "t_bool"
      },
      {
        "astId": 738,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "maxWallet",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 741,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "blockDelay",
        "offset": 0,
        "slot": "7",
        "type": "t_uint16"
      },
      {
        "astId": 743,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "uniswapV2Pair",
        "offset": 2,
        "slot": "7",
        "type": "t_address"
      },
      {
        "astId": 747,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "bots",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 751,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "lastTxBlock",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint16": {
        "encoding": "inplace",
        "label": "uint16",
        "numberOfBytes": "2"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}