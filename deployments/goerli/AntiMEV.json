{
  "address": "0x3b17e369C222D92f78536805Ff346AA972235233",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isBot",
          "type": "bool"
        }
      ],
      "name": "BotAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Burned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "mineBlocks",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gasDelta",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "maxSample",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "avgGasPrice",
          "type": "uint256"
        }
      ],
      "name": "MEVUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isVIP",
          "type": "bool"
        }
      ],
      "name": "VIPAdded",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "avgGasPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "detectMEV",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gasCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gasDelta",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isBOT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isVIP",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "lastTxBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxSample",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxWallet",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mineBlocks",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_address",
          "type": "address[]"
        },
        {
          "internalType": "bool[]",
          "name": "_isBot",
          "type": "bool[]"
        }
      ],
      "name": "setBots",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_detectMEV",
          "type": "bool"
        }
      ],
      "name": "setDetectMEV",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_mineBlocks",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_gasDelta",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxSample",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_avgGasPrice",
          "type": "uint256"
        }
      ],
      "name": "setMEV",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_maxWallet",
          "type": "uint256"
        }
      ],
      "name": "setMaxWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_uniswapV2Pair",
          "type": "address"
        }
      ],
      "name": "setUniswapV2Pair",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isVIP",
          "type": "bool"
        }
      ],
      "name": "setVIP",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_devWallet",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_burnWallet",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_airdropWallet",
          "type": "address"
        }
      ],
      "name": "setWallets",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "uniswapV2Pair",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "uniswapV2Router",
      "outputs": [
        {
          "internalType": "contract IUniswapV2Router02",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x247e71fd86efd8bdc71d16c57af058473ccd680920220420947d838acdcf712b",
  "receipt": {
    "to": null,
    "from": "0x5b3eC3A39403202A9C5a9e3496FbB3793B244B44",
    "contractAddress": "0x3b17e369C222D92f78536805Ff346AA972235233",
    "transactionIndex": 0,
    "gasUsed": "4617342",
    "logsBloom": "0x00800008000000000000000000100000000000000000000000810000000000000000040000000000000000000402000000000000000000000000000000010000000000000000004000000008000000000011000001000000000000100000000000000000820400000000000040048820000000000000000000000010000000400000000800000000004000000000100000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000180000100000402400000000000100000000040000000000800000000000000000020000000000000000020080000000000000000000000000080100010000000000000",
    "blockHash": "0x01cd036882d1dc2e9992f5ccb9a3cfcc2cfb466f1340ac119ff64a391b3b8ef2",
    "transactionHash": "0x247e71fd86efd8bdc71d16c57af058473ccd680920220420947d838acdcf712b",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 9280933,
        "transactionHash": "0x247e71fd86efd8bdc71d16c57af058473ccd680920220420947d838acdcf712b",
        "address": "0x3b17e369C222D92f78536805Ff346AA972235233",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000005b3ec3a39403202a9c5a9e3496fbb3793b244b44"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x01cd036882d1dc2e9992f5ccb9a3cfcc2cfb466f1340ac119ff64a391b3b8ef2"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 9280933,
        "transactionHash": "0x247e71fd86efd8bdc71d16c57af058473ccd680920220420947d838acdcf712b",
        "address": "0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f",
        "topics": [
          "0x0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9",
          "0x0000000000000000000000003b17e369c222d92f78536805ff346aa972235233",
          "0x000000000000000000000000b4fbf271143f4fbf7b91a5ded31805e42b2208d6"
        ],
        "data": "0x000000000000000000000000d92e58aedbeb8857e4cc64b50c6bf00b0dcda24d00000000000000000000000000000000000000000000000000000000000100e4",
        "logIndex": 1,
        "blockHash": "0x01cd036882d1dc2e9992f5ccb9a3cfcc2cfb466f1340ac119ff64a391b3b8ef2"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 9280933,
        "transactionHash": "0x247e71fd86efd8bdc71d16c57af058473ccd680920220420947d838acdcf712b",
        "address": "0x3b17e369C222D92f78536805Ff346AA972235233",
        "topics": [
          "0xda633a71264a27905632c474143536c3964c692d30dbf9384cf1f2e87659d64c",
          "0x0000000000000000000000003b17e369c222d92f78536805ff346aa972235233"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000001",
        "logIndex": 2,
        "blockHash": "0x01cd036882d1dc2e9992f5ccb9a3cfcc2cfb466f1340ac119ff64a391b3b8ef2"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 9280933,
        "transactionHash": "0x247e71fd86efd8bdc71d16c57af058473ccd680920220420947d838acdcf712b",
        "address": "0x3b17e369C222D92f78536805Ff346AA972235233",
        "topics": [
          "0xda633a71264a27905632c474143536c3964c692d30dbf9384cf1f2e87659d64c",
          "0x000000000000000000000000c2657176e213ddf18646efce08f36d656abe3396"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000001",
        "logIndex": 3,
        "blockHash": "0x01cd036882d1dc2e9992f5ccb9a3cfcc2cfb466f1340ac119ff64a391b3b8ef2"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 9280933,
        "transactionHash": "0x247e71fd86efd8bdc71d16c57af058473ccd680920220420947d838acdcf712b",
        "address": "0x3b17e369C222D92f78536805Ff346AA972235233",
        "topics": [
          "0xda633a71264a27905632c474143536c3964c692d30dbf9384cf1f2e87659d64c",
          "0x0000000000000000000000008b30998a9492610f074784aed7afdd682b23b416"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000001",
        "logIndex": 4,
        "blockHash": "0x01cd036882d1dc2e9992f5ccb9a3cfcc2cfb466f1340ac119ff64a391b3b8ef2"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 9280933,
        "transactionHash": "0x247e71fd86efd8bdc71d16c57af058473ccd680920220420947d838acdcf712b",
        "address": "0x3b17e369C222D92f78536805Ff346AA972235233",
        "topics": [
          "0xda633a71264a27905632c474143536c3964c692d30dbf9384cf1f2e87659d64c",
          "0x000000000000000000000000e276d3ea57c5af859e52d51c2c11f5decb4c4838"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000001",
        "logIndex": 5,
        "blockHash": "0x01cd036882d1dc2e9992f5ccb9a3cfcc2cfb466f1340ac119ff64a391b3b8ef2"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 9280933,
        "transactionHash": "0x247e71fd86efd8bdc71d16c57af058473ccd680920220420947d838acdcf712b",
        "address": "0x3b17e369C222D92f78536805Ff346AA972235233",
        "topics": [
          "0xda633a71264a27905632c474143536c3964c692d30dbf9384cf1f2e87659d64c",
          "0x000000000000000000000000d92e58aedbeb8857e4cc64b50c6bf00b0dcda24d"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000001",
        "logIndex": 6,
        "blockHash": "0x01cd036882d1dc2e9992f5ccb9a3cfcc2cfb466f1340ac119ff64a391b3b8ef2"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 9280933,
        "transactionHash": "0x247e71fd86efd8bdc71d16c57af058473ccd680920220420947d838acdcf712b",
        "address": "0x3b17e369C222D92f78536805Ff346AA972235233",
        "topics": [
          "0xda633a71264a27905632c474143536c3964c692d30dbf9384cf1f2e87659d64c",
          "0x0000000000000000000000007a250d5630b4cf539739df2c5dacb4c659f2488d"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000001",
        "logIndex": 7,
        "blockHash": "0x01cd036882d1dc2e9992f5ccb9a3cfcc2cfb466f1340ac119ff64a391b3b8ef2"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 9280933,
        "transactionHash": "0x247e71fd86efd8bdc71d16c57af058473ccd680920220420947d838acdcf712b",
        "address": "0x3b17e369C222D92f78536805Ff346AA972235233",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000005b3ec3a39403202a9c5a9e3496fbb3793b244b44"
        ],
        "data": "0x0000000000000000000000000000000000000000034dc21d9178e84102f30000",
        "logIndex": 8,
        "blockHash": "0x01cd036882d1dc2e9992f5ccb9a3cfcc2cfb466f1340ac119ff64a391b3b8ef2"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 9280933,
        "transactionHash": "0x247e71fd86efd8bdc71d16c57af058473ccd680920220420947d838acdcf712b",
        "address": "0x3b17e369C222D92f78536805Ff346AA972235233",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000c2657176e213ddf18646efce08f36d656abe3396"
        ],
        "data": "0x0000000000000000000000000000000000000000001be1d3f6bad7d521db0000",
        "logIndex": 9,
        "blockHash": "0x01cd036882d1dc2e9992f5ccb9a3cfcc2cfb466f1340ac119ff64a391b3b8ef2"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 9280933,
        "transactionHash": "0x247e71fd86efd8bdc71d16c57af058473ccd680920220420947d838acdcf712b",
        "address": "0x3b17e369C222D92f78536805Ff346AA972235233",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000008b30998a9492610f074784aed7afdd682b23b416"
        ],
        "data": "0x0000000000000000000000000000000000000000001be1d3f6bad7d521db0000",
        "logIndex": 10,
        "blockHash": "0x01cd036882d1dc2e9992f5ccb9a3cfcc2cfb466f1340ac119ff64a391b3b8ef2"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 9280933,
        "transactionHash": "0x247e71fd86efd8bdc71d16c57af058473ccd680920220420947d838acdcf712b",
        "address": "0x3b17e369C222D92f78536805Ff346AA972235233",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000e276d3ea57c5af859e52d51c2c11f5decb4c4838"
        ],
        "data": "0x0000000000000000000000000000000000000000001be1d3f6bad7d521db0000",
        "logIndex": 11,
        "blockHash": "0x01cd036882d1dc2e9992f5ccb9a3cfcc2cfb466f1340ac119ff64a391b3b8ef2"
      }
    ],
    "blockNumber": 9280933,
    "cumulativeGasUsed": "4617342",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 6,
  "solcInputHash": "4b9c3e27b6ab6c99e137a35eb79d09ce",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isBot\",\"type\":\"bool\"}],\"name\":\"BotAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Burned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mineBlocks\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gasDelta\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxSample\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"avgGasPrice\",\"type\":\"uint256\"}],\"name\":\"MEVUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isVIP\",\"type\":\"bool\"}],\"name\":\"VIPAdded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"avgGasPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"detectMEV\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gasCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gasDelta\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isBOT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isVIP\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastTxBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSample\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxWallet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mineBlocks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_address\",\"type\":\"address[]\"},{\"internalType\":\"bool[]\",\"name\":\"_isBot\",\"type\":\"bool[]\"}],\"name\":\"setBots\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_detectMEV\",\"type\":\"bool\"}],\"name\":\"setDetectMEV\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_mineBlocks\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_gasDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxSample\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_avgGasPrice\",\"type\":\"uint256\"}],\"name\":\"setMEV\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxWallet\",\"type\":\"uint256\"}],\"name\":\"setMaxWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_uniswapV2Pair\",\"type\":\"address\"}],\"name\":\"setUniswapV2Pair\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isVIP\",\"type\":\"bool\"}],\"name\":\"setVIP\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_devWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_burnWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_airdropWallet\",\"type\":\"address\"}],\"name\":\"setWallets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Pair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Router\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router02\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AntiMEV.sol\":\"AntiMEV\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/AntiMEV.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n/*\\n  The Anti-MEV token: https://antimev.io\\n\\n  Twitter: https://twitter.com/Anti_MEV\\n\\n  Telegram: https://t.me/antimev\\n*/\\n\\npragma solidity ^0.8.17;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n  function _msgSender() internal view virtual returns (address) {\\n    return msg.sender;\\n  }\\n\\n  function _msgData() internal view virtual returns (bytes calldata) {\\n    return msg.data;\\n  }\\n}\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n  address private _owner;\\n\\n  event OwnershipTransferred(\\n    address indexed previousOwner,\\n    address indexed newOwner\\n  );\\n\\n  /**\\n   * @dev Initializes the contract setting the deployer as the initial owner.\\n   */\\n  constructor() {\\n    _transferOwnership(_msgSender());\\n  }\\n\\n  /**\\n   * @dev Throws if called by any account other than the owner.\\n   */\\n  modifier onlyOwner() {\\n    _checkOwner();\\n    _;\\n  }\\n\\n  /**\\n   * @dev Returns the address of the current owner.\\n   */\\n  function owner() public view virtual returns (address) {\\n    return _owner;\\n  }\\n\\n  /**\\n   * @dev Throws if the sender is not the owner.\\n   */\\n  function _checkOwner() internal view virtual {\\n    require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n  }\\n\\n  /**\\n   * @dev Leaves the contract without owner. It will not be possible to call\\n   * `onlyOwner` functions. Can only be called by the current owner.\\n   *\\n   * NOTE: Renouncing ownership will leave the contract without an owner,\\n   * thereby disabling any functionality that is only available to the owner.\\n   */\\n  function renounceOwnership() public virtual onlyOwner {\\n    _transferOwnership(address(0));\\n  }\\n\\n  /**\\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n   * Can only be called by the current owner.\\n   */\\n  function transferOwnership(address newOwner) public virtual onlyOwner {\\n    require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n    _transferOwnership(newOwner);\\n  }\\n\\n  /**\\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n   * Internal function without access restriction.\\n   */\\n  function _transferOwnership(address newOwner) internal virtual {\\n    address oldOwner = _owner;\\n    _owner = newOwner;\\n    emit OwnershipTransferred(oldOwner, newOwner);\\n  }\\n}\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n  /**\\n   * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n   *\\n   * _Available since v3.4._\\n   */\\n  function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n    unchecked {\\n      uint256 c = a + b;\\n      if (c < a) return (false, 0);\\n      return (true, c);\\n    }\\n  }\\n\\n  /**\\n   * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n   *\\n   * _Available since v3.4._\\n   */\\n  function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n    unchecked {\\n      if (b > a) return (false, 0);\\n      return (true, a - b);\\n    }\\n  }\\n\\n  /**\\n   * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n   *\\n   * _Available since v3.4._\\n   */\\n  function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n    unchecked {\\n      // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n      // benefit is lost if 'b' is also tested.\\n      // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n      if (a == 0) return (true, 0);\\n      uint256 c = a * b;\\n      if (c / a != b) return (false, 0);\\n      return (true, c);\\n    }\\n  }\\n\\n  /**\\n   * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n   *\\n   * _Available since v3.4._\\n   */\\n  function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n    unchecked {\\n      if (b == 0) return (false, 0);\\n      return (true, a / b);\\n    }\\n  }\\n\\n  /**\\n   * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n   *\\n   * _Available since v3.4._\\n   */\\n  function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n    unchecked {\\n      if (b == 0) return (false, 0);\\n      return (true, a % b);\\n    }\\n  }\\n\\n  /**\\n   * @dev Returns the addition of two unsigned integers, reverting on\\n   * overflow.\\n   *\\n   * Counterpart to Solidity's `+` operator.\\n   *\\n   * Requirements:\\n   *\\n   * - Addition cannot overflow.\\n   */\\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return a + b;\\n  }\\n\\n  /**\\n   * @dev Returns the subtraction of two unsigned integers, reverting on\\n   * overflow (when the result is negative).\\n   *\\n   * Counterpart to Solidity's `-` operator.\\n   *\\n   * Requirements:\\n   *\\n   * - Subtraction cannot overflow.\\n   */\\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return a - b;\\n  }\\n\\n  /**\\n   * @dev Returns the multiplication of two unsigned integers, reverting on\\n   * overflow.\\n   *\\n   * Counterpart to Solidity's `*` operator.\\n   *\\n   * Requirements:\\n   *\\n   * - Multiplication cannot overflow.\\n   */\\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return a * b;\\n  }\\n\\n  /**\\n   * @dev Returns the integer division of two unsigned integers, reverting on\\n   * division by zero. The result is rounded towards zero.\\n   *\\n   * Counterpart to Solidity's `/` operator.\\n   *\\n   * Requirements:\\n   *\\n   * - The divisor cannot be zero.\\n   */\\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return a / b;\\n  }\\n\\n  /**\\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n   * reverting when dividing by zero.\\n   *\\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\\n   * invalid opcode to revert (consuming all remaining gas).\\n   *\\n   * Requirements:\\n   *\\n   * - The divisor cannot be zero.\\n   */\\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return a % b;\\n  }\\n\\n  /**\\n   * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n   * overflow (when the result is negative).\\n   *\\n   * CAUTION: This function is deprecated because it requires allocating memory for the error\\n   * message unnecessarily. For custom revert reasons use {trySub}.\\n   *\\n   * Counterpart to Solidity's `-` operator.\\n   *\\n   * Requirements:\\n   *\\n   * - Subtraction cannot overflow.\\n   */\\n  function sub(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    unchecked {\\n      require(b <= a, errorMessage);\\n      return a - b;\\n    }\\n  }\\n\\n  /**\\n   * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n   * division by zero. The result is rounded towards zero.\\n   *\\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n   * uses an invalid opcode to revert (consuming all remaining gas).\\n   *\\n   * Requirements:\\n   *\\n   * - The divisor cannot be zero.\\n   */\\n  function div(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    unchecked {\\n      require(b > 0, errorMessage);\\n      return a / b;\\n    }\\n  }\\n\\n  /**\\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n   * reverting with custom message when dividing by zero.\\n   *\\n   * CAUTION: This function is deprecated because it requires allocating memory for the error\\n   * message unnecessarily. For custom revert reasons use {tryMod}.\\n   *\\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\\n   * invalid opcode to revert (consuming all remaining gas).\\n   *\\n   * Requirements:\\n   *\\n   * - The divisor cannot be zero.\\n   */\\n  function mod(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    unchecked {\\n      require(b > 0, errorMessage);\\n      return a % b;\\n    }\\n  }\\n}\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n  /**\\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n   * another (`to`).\\n   *\\n   * Note that `value` may be zero.\\n   */\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n  /**\\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n   * a call to {approve}. `value` is the new allowance.\\n   */\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n  /**\\n   * @dev Returns the amount of tokens in existence.\\n   */\\n  function totalSupply() external view returns (uint256);\\n\\n  /**\\n   * @dev Returns the amount of tokens owned by `account`.\\n   */\\n  function balanceOf(address account) external view returns (uint256);\\n\\n  /**\\n   * @dev Moves `amount` tokens from the caller's account to `to`.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * Emits a {Transfer} event.\\n   */\\n  function transfer(address to, uint256 amount) external returns (bool);\\n\\n  /**\\n   * @dev Returns the remaining number of tokens that `spender` will be\\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n   * zero by default.\\n   *\\n   * This value changes when {approve} or {transferFrom} are called.\\n   */\\n  function allowance(\\n    address owner,\\n    address spender\\n  ) external view returns (uint256);\\n\\n  /**\\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n   * that someone may use both the old and the new allowance by unfortunate\\n   * transaction ordering. One possible solution to mitigate this race\\n   * condition is to first reduce the spender's allowance to 0 and set the\\n   * desired value afterwards:\\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n   *\\n   * Emits an {Approval} event.\\n   */\\n  function approve(address spender, uint256 amount) external returns (bool);\\n\\n  /**\\n   * @dev Moves `amount` tokens from `from` to `to` using the\\n   * allowance mechanism. `amount` is then deducted from the caller's\\n   * allowance.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * Emits a {Transfer} event.\\n   */\\n  function transferFrom(\\n    address from,\\n    address to,\\n    uint256 amount\\n  ) external returns (bool);\\n}\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n  /**\\n   * @dev Returns the name of the token.\\n   */\\n  function name() external view returns (string memory);\\n\\n  /**\\n   * @dev Returns the symbol of the token.\\n   */\\n  function symbol() external view returns (string memory);\\n\\n  /**\\n   * @dev Returns the decimals places of the token.\\n   */\\n  function decimals() external view returns (uint8);\\n}\\n\\ninterface IUniswapV2Factory {\\n  event PairCreated(\\n    address indexed token0,\\n    address indexed token1,\\n    address pair,\\n    uint\\n  );\\n\\n  function createPair(\\n    address tokenA,\\n    address tokenB\\n  ) external returns (address pair);\\n}\\n\\ninterface IUniswapV2Router02 {\\n  function factory() external pure returns (address);\\n\\n  function WETH() external pure returns (address);\\n}\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n  mapping(address => uint256) private _balances;\\n  mapping(address => mapping(address => uint256)) private _allowances;\\n\\n  uint256 private _totalSupply;\\n  string private _name;\\n  string private _symbol;\\n\\n  /**\\n   * @dev Sets the values for {name} and {symbol}.\\n   *\\n   * All two of these values are immutable: they can only be set once during\\n   * construction.\\n   */\\n  constructor(string memory name_, string memory symbol_) {\\n    _name = name_;\\n    _symbol = symbol_;\\n  }\\n\\n  /**\\n   * @dev Returns the name of the token.\\n   */\\n  function name() public view virtual override returns (string memory) {\\n    return _name;\\n  }\\n\\n  /**\\n   * @dev Returns the symbol of the token, usually a shorter version of the\\n   * name.\\n   */\\n  function symbol() public view virtual override returns (string memory) {\\n    return _symbol;\\n  }\\n\\n  /**\\n   * @dev Returns the number of decimals used to get its user representation.\\n   * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n   * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n   *\\n   * Tokens usually opt for a value of 18, imitating the relationship between\\n   * Ether and Wei. This is the default value returned by this function, unless\\n   * it's overridden.\\n   *\\n   * NOTE: This information is only used for _display_ purposes: it in\\n   * no way affects any of the arithmetic of the contract, including\\n   * {IERC20-balanceOf} and {IERC20-transfer}.\\n   */\\n  function decimals() public view virtual override returns (uint8) {\\n    return 18;\\n  }\\n\\n  /**\\n   * @dev See {IERC20-totalSupply}.\\n   */\\n  function totalSupply() public view virtual override returns (uint256) {\\n    return _totalSupply;\\n  }\\n\\n  /**\\n   * @dev See {IERC20-balanceOf}.\\n   */\\n  function balanceOf(\\n    address account\\n  ) public view virtual override returns (uint256) {\\n    return _balances[account];\\n  }\\n\\n  /**\\n   * @dev See {IERC20-transfer}.\\n   *\\n   * Requirements:\\n   *\\n   * - `to` cannot be the zero address.\\n   * - the caller must have a balance of at least `amount`.\\n   */\\n  function transfer(\\n    address to,\\n    uint256 amount\\n  ) public virtual override returns (bool) {\\n    address owner = _msgSender();\\n    _transfer(owner, to, amount);\\n    return true;\\n  }\\n\\n  /**\\n   * @dev See {IERC20-allowance}.\\n   */\\n  function allowance(\\n    address owner,\\n    address spender\\n  ) public view virtual override returns (uint256) {\\n    return _allowances[owner][spender];\\n  }\\n\\n  /**\\n   * @dev See {IERC20-approve}.\\n   *\\n   * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n   * `transferFrom`. This is semantically equivalent to an infinite approval.\\n   *\\n   * Requirements:\\n   *\\n   * - `spender` cannot be the zero address.\\n   */\\n  function approve(\\n    address spender,\\n    uint256 amount\\n  ) public virtual override returns (bool) {\\n    address owner = _msgSender();\\n    _approve(owner, spender, amount);\\n    return true;\\n  }\\n\\n  /**\\n   * @dev See {IERC20-transferFrom}.\\n   *\\n   * Emits an {Approval} event indicating the updated allowance. This is not\\n   * required by the EIP. See the note at the beginning of {ERC20}.\\n   *\\n   * NOTE: Does not update the allowance if the current allowance\\n   * is the maximum `uint256`.\\n   *\\n   * Requirements:\\n   *\\n   * - `from` and `to` cannot be the zero address.\\n   * - `from` must have a balance of at least `amount`.\\n   * - the caller must have allowance for ``from``'s tokens of at least\\n   * `amount`.\\n   */\\n  function transferFrom(\\n    address from,\\n    address to,\\n    uint256 amount\\n  ) public virtual override returns (bool) {\\n    address spender = _msgSender();\\n    _spendAllowance(from, spender, amount);\\n    _transfer(from, to, amount);\\n    return true;\\n  }\\n\\n  /**\\n   * @dev Atomically increases the allowance granted to `spender` by the caller.\\n   *\\n   * This is an alternative to {approve} that can be used as a mitigation for\\n   * problems described in {IERC20-approve}.\\n   *\\n   * Emits an {Approval} event indicating the updated allowance.\\n   *\\n   * Requirements:\\n   *\\n   * - `spender` cannot be the zero address.\\n   */\\n  function increaseAllowance(\\n    address spender,\\n    uint256 addedValue\\n  ) public virtual returns (bool) {\\n    address owner = _msgSender();\\n    _approve(owner, spender, allowance(owner, spender) + addedValue);\\n    return true;\\n  }\\n\\n  /**\\n   * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n   *\\n   * This is an alternative to {approve} that can be used as a mitigation for\\n   * problems described in {IERC20-approve}.\\n   *\\n   * Emits an {Approval} event indicating the updated allowance.\\n   *\\n   * Requirements:\\n   *\\n   * - `spender` cannot be the zero address.\\n   * - `spender` must have allowance for the caller of at least\\n   * `subtractedValue`.\\n   */\\n  function decreaseAllowance(\\n    address spender,\\n    uint256 subtractedValue\\n  ) public virtual returns (bool) {\\n    address owner = _msgSender();\\n    uint256 currentAllowance = allowance(owner, spender);\\n    require(\\n      currentAllowance >= subtractedValue,\\n      \\\"ERC20: decreased allowance below zero\\\"\\n    );\\n    unchecked {\\n      _approve(owner, spender, currentAllowance - subtractedValue);\\n    }\\n\\n    return true;\\n  }\\n\\n  /**\\n   * @dev Moves `amount` of tokens from `from` to `to`.\\n   *\\n   * This internal function is equivalent to {transfer}, and can be used to\\n   * e.g. implement automatic token fees, slashing mechanisms, etc.\\n   *\\n   * Emits a {Transfer} event.\\n   *\\n   * Requirements:\\n   *\\n   * - `from` cannot be the zero address.\\n   * - `to` cannot be the zero address.\\n   * - `from` must have a balance of at least `amount`.\\n   */\\n  function _transfer(\\n    address from,\\n    address to,\\n    uint256 amount\\n  ) internal virtual {\\n    require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n    require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n    _beforeTokenTransfer(from, to, amount);\\n\\n    uint256 fromBalance = _balances[from];\\n    require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n    unchecked {\\n      _balances[from] = fromBalance - amount;\\n      // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n      // decrementing then incrementing.\\n      _balances[to] += amount;\\n    }\\n\\n    emit Transfer(from, to, amount);\\n\\n    _afterTokenTransfer(from, to, amount);\\n  }\\n\\n  /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n   * the total supply.\\n   *\\n   * Emits a {Transfer} event with `from` set to the zero address.\\n   *\\n   * Requirements:\\n   *\\n   * - `account` cannot be the zero address.\\n   */\\n  function _mint(address account, uint256 amount) internal virtual {\\n    require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n    _beforeTokenTransfer(address(0), account, amount);\\n\\n    _totalSupply += amount;\\n    unchecked {\\n      // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n      _balances[account] += amount;\\n    }\\n    emit Transfer(address(0), account, amount);\\n\\n    _afterTokenTransfer(address(0), account, amount);\\n  }\\n\\n  /**\\n   * @dev Destroys `amount` tokens from `account`, reducing the\\n   * total supply.\\n   *\\n   * Emits a {Transfer} event with `to` set to the zero address.\\n   *\\n   * Requirements:\\n   *\\n   * - `account` cannot be the zero address.\\n   * - `account` must have at least `amount` tokens.\\n   */\\n  function _burn(address account, uint256 amount) internal virtual {\\n    require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n    _beforeTokenTransfer(account, address(0), amount);\\n\\n    uint256 accountBalance = _balances[account];\\n    require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n    unchecked {\\n      _balances[account] = accountBalance - amount;\\n      // Overflow not possible: amount <= accountBalance <= totalSupply.\\n      _totalSupply -= amount;\\n    }\\n\\n    emit Transfer(account, address(0), amount);\\n\\n    _afterTokenTransfer(account, address(0), amount);\\n  }\\n\\n  /**\\n   * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n   *\\n   * This internal function is equivalent to `approve`, and can be used to\\n   * e.g. set automatic allowances for certain subsystems, etc.\\n   *\\n   * Emits an {Approval} event.\\n   *\\n   * Requirements:\\n   *\\n   * - `owner` cannot be the zero address.\\n   * - `spender` cannot be the zero address.\\n   */\\n  function _approve(\\n    address owner,\\n    address spender,\\n    uint256 amount\\n  ) internal virtual {\\n    require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n    require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n    _allowances[owner][spender] = amount;\\n    emit Approval(owner, spender, amount);\\n  }\\n\\n  /**\\n   * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n   *\\n   * Does not update the allowance amount in case of infinite allowance.\\n   * Revert if not enough allowance is available.\\n   *\\n   * Might emit an {Approval} event.\\n   */\\n  function _spendAllowance(\\n    address owner,\\n    address spender,\\n    uint256 amount\\n  ) internal virtual {\\n    uint256 currentAllowance = allowance(owner, spender);\\n    if (currentAllowance != type(uint256).max) {\\n      require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n      unchecked {\\n        _approve(owner, spender, currentAllowance - amount);\\n      }\\n    }\\n  }\\n\\n  /**\\n   * @dev Hook that is called before any transfer of tokens. This includes\\n   * minting and burning.\\n   *\\n   * Calling conditions:\\n   *\\n   * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n   * will be transferred to `to`.\\n   * - when `from` is zero, `amount` tokens will be minted for `to`.\\n   * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n   * - `from` and `to` are never both zero.\\n   *\\n   * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n   */\\n  function _beforeTokenTransfer(\\n    address from,\\n    address to,\\n    uint256 amount\\n  ) internal virtual {}\\n\\n  /**\\n   * @dev Hook that is called after any transfer of tokens. This includes\\n   * minting and burning.\\n   *\\n   * Calling conditions:\\n   *\\n   * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n   * has been transferred to `to`.\\n   * - when `from` is zero, `amount` tokens have been minted for `to`.\\n   * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n   * - `from` and `to` are never both zero.\\n   *\\n   * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n   */\\n  function _afterTokenTransfer(\\n    address from,\\n    address to,\\n    uint256 amount\\n  ) internal virtual {}\\n}\\n\\ncontract AntiMEV is ERC20, Ownable {\\n  using SafeMath for uint256;\\n\\n  bool public detectMEV;\\n  uint256 public maxWallet;\\n  uint256 public mineBlocks;\\n  uint256 public gasDelta;\\n  uint256 public maxSample;\\n  uint256 public avgGasPrice;\\n  uint256 public gasCounter;\\n\\n  mapping(address => bool) public isBOT; // MEV bots\\n  mapping(address => bool) public isVIP; // VIP addresses\\n  mapping(address => uint256) public lastTxBlock; // block number for address's last tx\\n\\n  IUniswapV2Router02 public immutable uniswapV2Router;\\n  address public uniswapV2Pair;\\n\\n  address payable private devWallet;\\n  address payable private burnWallet;\\n  address payable private airdropWallet;\\n\\n  event Burned(address indexed user, uint256 amount);\\n  event VIPAdded(address indexed account, bool isVIP);\\n  event BotAdded(address indexed account, bool isBot);\\n  event MEVUpdated(\\n    uint256 mineBlocks,\\n    uint256 gasDelta,\\n    uint256 maxSample,\\n    uint256 avgGasPrice\\n  );\\n\\n  constructor() payable ERC20(\\\"AntiMEV\\\", \\\"AntiMEV\\\") {\\n    uint256 _totalSupply = 1123581321 * 10 ** 18; // 1.12 Billion Fibonacci\\n    maxWallet = _totalSupply.mul(49).div(1000); // 4.9% of total supply\\n\\n    detectMEV = true; // enable MEV detection\\n    mineBlocks = 3; // blocks to mine before 2nd tx\\n    avgGasPrice = 0; // rolling average gas price\\n    gasDelta = 30; // increase in gas price to be considered bribe\\n    maxSample = 10; // number of blocks to calculate average gas price\\n    gasCounter = 0; // counter used to calculate average gas price\\n\\n    IUniswapV2Router02 _uniswapV2Router = IUniswapV2Router02(\\n      0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D\\n    );\\n    uniswapV2Router = _uniswapV2Router;\\n\\n    uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(\\n      address(this),\\n      _uniswapV2Router.WETH()\\n    );\\n\\n    devWallet = payable(0xc2657176e213DDF18646eFce08F36D656aBE3396);\\n    burnWallet = payable(0x8B30998a9492610F074784Aed7aFDd682B23B416);\\n    airdropWallet = payable(0xe276d3ea57c5AF859e52d51C2C11f5deCb4C4838);\\n\\n    setVIP(address(this), true);\\n    setVIP(address(devWallet), true);\\n    setVIP(address(burnWallet), true);\\n    setVIP(address(airdropWallet), true);\\n    setVIP(address(uniswapV2Pair), true);\\n    setVIP(address(uniswapV2Router), true);\\n\\n    _mint(msg.sender, _totalSupply.mul(91).div(100)); // 91% of total supply\\n    _mint(devWallet, _totalSupply.mul(3).div(100)); // 3% of total supply\\n    _mint(burnWallet, _totalSupply.mul(3).div(100)); // 3% of total supply\\n    _mint(airdropWallet, _totalSupply.mul(3).div(100)); // 3% of total supply\\n  }\\n\\n  // calculate rolling average of gas price for last maxSample blocks\\n  function detectGasBribe(address from, address to) private {\\n    gasCounter += 1;\\n    avgGasPrice =\\n      (avgGasPrice * (gasCounter - 1)) /\\n      gasCounter +\\n      tx.gasprice /\\n      gasCounter;\\n\\n    // reset avgGasPrice if sample size too large\\n    if (gasCounter > maxSample) {\\n      avgGasPrice = tx.gasprice;\\n      gasCounter = 0;\\n    }\\n\\n    // detect bribes by comparing tx price to rolling average\\n    if (!isVIP[from] && !isVIP[to]) {\\n      if (\\n        tx.gasprice >= avgGasPrice.add(avgGasPrice.mul(gasDelta).div(100)) &&\\n        gasCounter > 1\\n      ) {\\n        revert(\\\"AntiMEV: Gas bribe detected, possible front-run\\\");\\n      }\\n    }\\n  }\\n\\n  function detectSandwich(address from, address to) private {\\n    // handle buys\\n    if (from == uniswapV2Pair && !isVIP[to]) {\\n      if (block.number > lastTxBlock[to] + mineBlocks) {\\n        lastTxBlock[to] = block.number;\\n      } else if (block.number == lastTxBlock[to]) {\\n        if (!isVIP[to]) {\\n          isBOT[to] = true;\\n          emit BotAdded(to, true);\\n        }\\n      } else {\\n        revert(\\\"AntiMEV: Transfers too frequent, possible sandwich attack\\\");\\n      }\\n    }\\n\\n    // handle sells\\n    if (to == uniswapV2Pair && !isVIP[from]) {\\n      if (block.number > lastTxBlock[from] + mineBlocks) {\\n        lastTxBlock[from] = block.number;\\n      } else if (block.number == lastTxBlock[from]) {\\n        if (!isVIP[from]) {\\n          isBOT[from] = true;\\n          emit BotAdded(from, true);\\n        }\\n        revert(\\\"AntiMEV: Sandwich attack detected, added to bots\\\");\\n      } else {\\n        revert(\\\"AntiMEV: Transfers too frequent, possible sandwich attack\\\");\\n      }\\n    }\\n  }\\n\\n  function _beforeTokenTransfer(\\n    address from,\\n    address to,\\n    uint256 amount\\n  ) internal virtual override {\\n    require(!isBOT[to] && !isBOT[from], \\\"AntiMEV: Known MEV bot\\\");\\n    if (from == uniswapV2Pair && !isVIP[to]) {\\n      require(\\n        super.balanceOf(to) + amount <= maxWallet,\\n        \\\"Max wallet exceeded!\\\"\\n      );\\n    }\\n  }\\n\\n  function transfer(address to, uint256 amount) public override returns (bool) {\\n    if (detectMEV) {\\n      // test for sandwich attack\\n      detectSandwich(msg.sender, to);\\n      // test for frontrunner\\n      detectGasBribe(msg.sender, to);\\n    }\\n    return super.transfer(to, amount);\\n  }\\n\\n  function transferFrom(\\n    address from,\\n    address to,\\n    uint256 amount\\n  ) public override returns (bool) {\\n    if (detectMEV) {\\n      // test for sandwich attack\\n      detectSandwich(from, to);\\n      // test for frontrunner\\n      detectGasBribe(from, to);\\n    }\\n    return super.transferFrom(from, to, amount);\\n  }\\n\\n  function setDetectMEV(bool _detectMEV) external onlyOwner {\\n    detectMEV = _detectMEV;\\n  }\\n\\n  function setMEV(\\n    uint256 _mineBlocks,\\n    uint256 _gasDelta,\\n    uint256 _maxSample,\\n    uint256 _avgGasPrice\\n  ) external onlyOwner {\\n    mineBlocks = _mineBlocks;\\n    gasDelta = _gasDelta;\\n    maxSample = _maxSample;\\n    avgGasPrice = _avgGasPrice;\\n    emit MEVUpdated(_mineBlocks, _gasDelta, _maxSample, _avgGasPrice);\\n  }\\n\\n  function setUniswapV2Pair(address _uniswapV2Pair) external onlyOwner {\\n    uniswapV2Pair = _uniswapV2Pair;\\n  }\\n\\n  function setVIP(address _address, bool _isVIP) public onlyOwner {\\n    isVIP[_address] = _isVIP;\\n    emit VIPAdded(_address, _isVIP);\\n  }\\n\\n  function setBots(\\n    address[] memory _address,\\n    bool[] memory _isBot\\n  ) external onlyOwner {\\n    for (uint256 i = 0; i < _address.length; i++) {\\n      require(\\n        _address[i] != owner() &&\\n          _address[i] != address(this) &&\\n          _address[i] != uniswapV2Pair &&\\n          _address[i] != address(uniswapV2Router),\\n        \\\"AntiMEV: Invalid address\\\"\\n      );\\n      isBOT[_address[i]] = _isBot[i];\\n      emit BotAdded(_address[i], _isBot[i]);\\n    }\\n  }\\n\\n  function setMaxWallet(uint256 _maxWallet) external onlyOwner {\\n    maxWallet = _maxWallet;\\n  }\\n\\n  function setWallets(\\n    address _devWallet,\\n    address _burnWallet,\\n    address _airdropWallet\\n  ) external onlyOwner {\\n    devWallet = payable(_devWallet);\\n    burnWallet = payable(_burnWallet);\\n    airdropWallet = payable(_airdropWallet);\\n  }\\n\\n  function burn(uint256 value) external onlyOwner {\\n    _burn(msg.sender, value);\\n    emit Burned(msg.sender, value);\\n  }\\n}\\n\",\"keccak256\":\"0xd9463de9db15276f1b52269a19b471e835affbb70884e42ef6703d6d5971ca3d\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x600760a08181526620b73a34a6a2ab60c91b60c081905261012060405260e09283526101005290600362000034838262000811565b50600462000043828262000811565b505050620000606200005a620003f260201b60201c565b620003f6565b6b03a1679975a96fc068840000620000a16103e86200008d83603162000448602090811b62000b8117901c565b6200045f60201b62000b8d1790919060201c565b6006556005805460ff60a01b1916600160a01b17905560036007556000600a818155601e600855600955600b55737a250d5630b4cf539739df2c5dacb4c659f2488d60808190526040805163c45a015560e01b81529051829163c45a01559160048083019260209291908290030181865afa15801562000125573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200014b9190620008dd565b6001600160a01b031663c9c6539630836001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000199573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001bf9190620008dd565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af11580156200020d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002339190620008dd565b600f80546001600160a01b03929092166001600160a01b031992831617905560108054821673c2657176e213ddf18646efce08f36d656abe3396179055601180548216738b30998a9492610f074784aed7afdd682b23b4161790556012805490911673e276d3ea57c5af859e52d51c2c11f5decb4c4838179055620002ba3060016200046d565b601054620002d3906001600160a01b031660016200046d565b601154620002ec906001600160a01b031660016200046d565b60125462000305906001600160a01b031660016200046d565b600f546200031e906001600160a01b031660016200046d565b6080516200032e9060016200046d565b6200035a336200035460646200008d605b876200044860201b62000b811790919060201c565b620004d6565b6010546200038a906001600160a01b03166200035460646200008d86600362000448602090811b62000b8117901c565b601154620003ba906001600160a01b03166200035460646200008d86600362000448602090811b62000b8117901c565b601254620003ea906001600160a01b03166200035460646200008d86600362000448602090811b62000b8117901c565b505062000978565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600062000456828462000925565b90505b92915050565b60006200045682846200093f565b62000477620005ab565b6001600160a01b0382166000818152600d6020908152604091829020805460ff191685151590811790915591519182527fda633a71264a27905632c474143536c3964c692d30dbf9384cf1f2e87659d64c910160405180910390a25050565b6001600160a01b038216620005325760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064015b60405180910390fd5b620005406000838362000609565b806002600082825462000554919062000962565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6005546001600160a01b03163314620006075760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640162000529565b565b6001600160a01b0382166000908152600c602052604090205460ff161580156200064c57506001600160a01b0383166000908152600c602052604090205460ff16155b6200069a5760405162461bcd60e51b815260206004820152601660248201527f416e74694d45563a204b6e6f776e204d455620626f7400000000000000000000604482015260640162000529565b600f546001600160a01b038481169116148015620006d157506001600160a01b0382166000908152600d602052604090205460ff16155b156200074d5760065481620006f1846200075260201b620009041760201c565b620006fd919062000962565b11156200074d5760405162461bcd60e51b815260206004820152601460248201527f4d61782077616c6c657420657863656564656421000000000000000000000000604482015260640162000529565b505050565b6001600160a01b031660009081526020819052604090205490565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200079857607f821691505b602082108103620007b957634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200074d57600081815260208120601f850160051c81016020861015620007e85750805b601f850160051c820191505b818110156200080957828155600101620007f4565b505050505050565b81516001600160401b038111156200082d576200082d6200076d565b62000845816200083e845462000783565b84620007bf565b602080601f8311600181146200087d5760008415620008645750858301515b600019600386901b1c1916600185901b17855562000809565b600085815260208120601f198616915b82811015620008ae578886015182559484019460019091019084016200088d565b5085821015620008cd5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208284031215620008f057600080fd5b81516001600160a01b03811681146200090857600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176200045957620004596200090f565b6000826200095d57634e487b7160e01b600052601260045260246000fd5b500490565b808201808211156200045957620004596200090f565b608051611b446200099b60003960008181610278015261064c0152611b446000f3fe608060405234801561001057600080fd5b50600436106102055760003560e01c8063715018a61161011a578063a6ccf7e5116100ad578063d89491401161007c578063d894914014610439578063dd62ed3e1461045c578063f2fde38b1461046f578063f4201c3c14610482578063f8b45b05146104a557600080fd5b8063a6ccf7e5146103ea578063a7ae210a146103fd578063a9059cbb14610406578063ceb88a161461041957600080fd5b806395bb5db6116100e957806395bb5db6146103b357806395d89b41146103bc578063a29a6089146103c4578063a457c2d7146103d757600080fd5b8063715018a61461037357806375cb1bd11461037b5780638da5cb5b1461038e57806392181ec61461039f57600080fd5b8063265b957b1161019d57806349bd5a5e1161016c57806349bd5a5e1461031e5780635d0044ca146103315780636381f2b11461034457806369ab300d1461034d57806370a082311461036057600080fd5b8063265b957b146102e0578063313ce567146102e957806339509351146102f857806342966c681461030b57600080fd5b80631694505e116101d95780631694505e1461027357806318160ddd146102b257806321c609c2146102c457806323b872dd146102cd57600080fd5b80623a91a51461020a57806306fdde031461021f578063095ea7b31461023d5780630ee0347c14610260575b600080fd5b61021d6102183660046116a7565b6104ae565b005b6102276104d4565b60405161023491906116c2565b60405180910390f35b61025061024b366004611727565b610566565b6040519015158152602001610234565b61021d61026e36600461182e565b610580565b61029a7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610234565b6002545b604051908152602001610234565b6102b660075481565b6102506102db3660046118ee565b6107e8565b6102b660085481565b60405160128152602001610234565b610250610306366004611727565b610824565b61021d61031936600461192a565b610846565b600f5461029a906001600160a01b031681565b61021d61033f36600461192a565b610890565b6102b660095481565b61021d61035b366004611943565b61089d565b6102b661036e366004611976565b610904565b61021d61091f565b61021d610389366004611991565b610933565b6005546001600160a01b031661029a565b60055461025090600160a01b900460ff1681565b6102b6600b5481565b61022761097a565b61021d6103d2366004611976565b610989565b6102506103e5366004611727565b6109b3565b61021d6103f83660046119d4565b610a39565b6102b6600a5481565b610250610414366004611727565b610aa3565b6102b6610427366004611976565b600e6020526000908152604090205481565b610250610447366004611976565b600c6020526000908152604090205460ff1681565b6102b661046a366004611a06565b610add565b61021d61047d366004611976565b610b08565b610250610490366004611976565b600d6020526000908152604090205460ff1681565b6102b660065481565b6104b6610b99565b60058054911515600160a01b0260ff60a01b19909216919091179055565b6060600380546104e390611a30565b80601f016020809104026020016040519081016040528092919081815260200182805461050f90611a30565b801561055c5780601f106105315761010080835404028352916020019161055c565b820191906000526020600020905b81548152906001019060200180831161053f57829003601f168201915b5050505050905090565b600033610574818585610bf3565b60019150505b92915050565b610588610b99565b60005b82518110156107e3576005546001600160a01b03166001600160a01b03168382815181106105bb576105bb611a6a565b60200260200101516001600160a01b0316141580156106055750306001600160a01b03168382815181106105f1576105f1611a6a565b60200260200101516001600160a01b031614155b80156106435750600f5483516001600160a01b039091169084908390811061062f5761062f611a6a565b60200260200101516001600160a01b031614155b801561069a57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031683828151811061068657610686611a6a565b60200260200101516001600160a01b031614155b6106eb5760405162461bcd60e51b815260206004820152601860248201527f416e74694d45563a20496e76616c69642061646472657373000000000000000060448201526064015b60405180910390fd5b8181815181106106fd576106fd611a6a565b6020026020010151600c600085848151811061071b5761071b611a6a565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff02191690831515021790555082818151811061076c5761076c611a6a565b60200260200101516001600160a01b03167f0cc5910ce116d1d71aa48f1ccd5e978315791068133c0c6aa7540ab8c9a8796d8383815181106107b0576107b0611a6a565b60200260200101516040516107c9911515815260200190565b60405180910390a2806107db81611a96565b91505061058b565b505050565b600554600090600160a01b900460ff1615610811576108078484610d17565b6108118484611030565b61081c848484611188565b949350505050565b6000336105748185856108378383610add565b6108419190611aaf565b610bf3565b61084e610b99565b61085833826111a1565b60405181815233907f696de425f79f4a40bc6d2122ca50507f0efbeabbff86a84871b7196ab8ea8df79060200160405180910390a250565b610898610b99565b600655565b6108a5610b99565b6001600160a01b0382166000818152600d6020908152604091829020805460ff191685151590811790915591519182527fda633a71264a27905632c474143536c3964c692d30dbf9384cf1f2e87659d64c910160405180910390a25050565b6001600160a01b031660009081526020819052604090205490565b610927610b99565b61093160006112df565b565b61093b610b99565b601080546001600160a01b039485166001600160a01b031991821617909155601180549385169382169390931790925560128054919093169116179055565b6060600480546104e390611a30565b610991610b99565b600f80546001600160a01b0319166001600160a01b0392909216919091179055565b600033816109c18286610add565b905083811015610a215760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016106e2565b610a2e8286868403610bf3565b506001949350505050565b610a41610b99565b600784905560088390556009829055600a8190556040805185815260208101859052908101839052606081018290527f14fd6f32fdaec8482ac6b00207414b60d714be451bc189769f2cdf1e85e881209060800160405180910390a150505050565b600554600090600160a01b900460ff1615610acc57610ac23384610d17565b610acc3384611030565b610ad68383611331565b9392505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610b10610b99565b6001600160a01b038116610b755760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106e2565b610b7e816112df565b50565b6000610ad68284611ac2565b6000610ad68284611ad9565b6005546001600160a01b031633146109315760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106e2565b6001600160a01b038316610c555760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016106e2565b6001600160a01b038216610cb65760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016106e2565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600f546001600160a01b038381169116148015610d4d57506001600160a01b0381166000908152600d602052604090205460ff16155b15610eac576007546001600160a01b0382166000908152600e6020526040902054610d789190611aaf565b431115610d9f576001600160a01b0381166000908152600e60205260409020439055610eac565b6001600160a01b0381166000908152600e60205260409020544303610e3e576001600160a01b0381166000908152600d602052604090205460ff16610e39576001600160a01b0381166000818152600c6020908152604091829020805460ff1916600190811790915591519182527f0cc5910ce116d1d71aa48f1ccd5e978315791068133c0c6aa7540ab8c9a8796d910160405180910390a25b610eac565b60405162461bcd60e51b815260206004820152603960248201527f416e74694d45563a205472616e736665727320746f6f206672657175656e742c60448201527f20706f737369626c652073616e64776963682061747461636b0000000000000060648201526084016106e2565b600f546001600160a01b038281169116148015610ee257506001600160a01b0382166000908152600d602052604090205460ff16155b1561102c576007546001600160a01b0383166000908152600e6020526040902054610f0d9190611aaf565b431115610f3157506001600160a01b03166000908152600e60205260409020439055565b6001600160a01b0382166000908152600e60205260409020544303610e3e576001600160a01b0382166000908152600d602052604090205460ff16610fcb576001600160a01b0382166000818152600c6020908152604091829020805460ff1916600190811790915591519182527f0cc5910ce116d1d71aa48f1ccd5e978315791068133c0c6aa7540ab8c9a8796d910160405180910390a25b60405162461bcd60e51b815260206004820152603060248201527f416e74694d45563a2053616e64776963682061747461636b206465746563746560448201526f642c20616464656420746f20626f747360801b60648201526084016106e2565b5050565b6001600b60008282546110439190611aaf565b9091555050600b54611055903a611ad9565b600b54611063600182611afb565b600a546110709190611ac2565b61107a9190611ad9565b6110849190611aaf565b600a55600954600b54111561109d573a600a556000600b555b6001600160a01b0382166000908152600d602052604090205460ff161580156110df57506001600160a01b0381166000908152600d602052604090205460ff16155b1561102c576111126111096064611103600854600a54610b8190919063ffffffff16565b90610b8d565b600a549061133f565b3a1015801561112357506001600b54115b1561102c5760405162461bcd60e51b815260206004820152602f60248201527f416e74694d45563a204761732062726962652064657465637465642c20706f7360448201526e39b4b1363290333937b73a16b93ab760891b60648201526084016106e2565b60003361119685828561134b565b610a2e8585856113c5565b6001600160a01b0382166112015760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016106e2565b61120d82600083611574565b6001600160a01b038216600090815260208190526040902054818110156112815760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016106e2565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000336105748185856113c5565b6000610ad68284611aaf565b60006113578484610add565b905060001981146113bf57818110156113b25760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016106e2565b6113bf8484848403610bf3565b50505050565b6001600160a01b0383166114295760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016106e2565b6001600160a01b03821661148b5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016106e2565b611496838383611574565b6001600160a01b0383166000908152602081905260409020548181101561150e5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016106e2565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36113bf565b6001600160a01b0382166000908152600c602052604090205460ff161580156115b657506001600160a01b0383166000908152600c602052604090205460ff16155b6115fb5760405162461bcd60e51b8152602060048201526016602482015275105b9d1a5351558e8812db9bdddb8813515588189bdd60521b60448201526064016106e2565b600f546001600160a01b03848116911614801561163157506001600160a01b0382166000908152600d602052604090205460ff16155b156107e3576006548161164384610904565b61164d9190611aaf565b11156107e35760405162461bcd60e51b81526020600482015260146024820152734d61782077616c6c65742065786365656465642160601b60448201526064016106e2565b803580151581146116a257600080fd5b919050565b6000602082840312156116b957600080fd5b610ad682611692565b600060208083528351808285015260005b818110156116ef578581018301518582016040015282016116d3565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146116a257600080fd5b6000806040838503121561173a57600080fd5b61174383611710565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561179057611790611751565b604052919050565b600067ffffffffffffffff8211156117b2576117b2611751565b5060051b60200190565b600082601f8301126117cd57600080fd5b813560206117e26117dd83611798565b611767565b82815260059290921b8401810191818101908684111561180157600080fd5b8286015b848110156118235761181681611692565b8352918301918301611805565b509695505050505050565b6000806040838503121561184157600080fd5b823567ffffffffffffffff8082111561185957600080fd5b818501915085601f83011261186d57600080fd5b8135602061187d6117dd83611798565b82815260059290921b8401810191818101908984111561189c57600080fd5b948201945b838610156118c1576118b286611710565b825294820194908201906118a1565b965050860135925050808211156118d757600080fd5b506118e4858286016117bc565b9150509250929050565b60008060006060848603121561190357600080fd5b61190c84611710565b925061191a60208501611710565b9150604084013590509250925092565b60006020828403121561193c57600080fd5b5035919050565b6000806040838503121561195657600080fd5b61195f83611710565b915061196d60208401611692565b90509250929050565b60006020828403121561198857600080fd5b610ad682611710565b6000806000606084860312156119a657600080fd5b6119af84611710565b92506119bd60208501611710565b91506119cb60408501611710565b90509250925092565b600080600080608085870312156119ea57600080fd5b5050823594602084013594506040840135936060013592509050565b60008060408385031215611a1957600080fd5b611a2283611710565b915061196d60208401611710565b600181811c90821680611a4457607f821691505b602082108103611a6457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611aa857611aa8611a80565b5060010190565b8082018082111561057a5761057a611a80565b808202811582820484141761057a5761057a611a80565b600082611af657634e487b7160e01b600052601260045260246000fd5b500490565b8181038181111561057a5761057a611a8056fea26469706673582212205d5d02ec637f143a9fa7a704575472e2ef5ff79cef4b43c054b9b9d6f122dc0264736f6c63430008120033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106102055760003560e01c8063715018a61161011a578063a6ccf7e5116100ad578063d89491401161007c578063d894914014610439578063dd62ed3e1461045c578063f2fde38b1461046f578063f4201c3c14610482578063f8b45b05146104a557600080fd5b8063a6ccf7e5146103ea578063a7ae210a146103fd578063a9059cbb14610406578063ceb88a161461041957600080fd5b806395bb5db6116100e957806395bb5db6146103b357806395d89b41146103bc578063a29a6089146103c4578063a457c2d7146103d757600080fd5b8063715018a61461037357806375cb1bd11461037b5780638da5cb5b1461038e57806392181ec61461039f57600080fd5b8063265b957b1161019d57806349bd5a5e1161016c57806349bd5a5e1461031e5780635d0044ca146103315780636381f2b11461034457806369ab300d1461034d57806370a082311461036057600080fd5b8063265b957b146102e0578063313ce567146102e957806339509351146102f857806342966c681461030b57600080fd5b80631694505e116101d95780631694505e1461027357806318160ddd146102b257806321c609c2146102c457806323b872dd146102cd57600080fd5b80623a91a51461020a57806306fdde031461021f578063095ea7b31461023d5780630ee0347c14610260575b600080fd5b61021d6102183660046116a7565b6104ae565b005b6102276104d4565b60405161023491906116c2565b60405180910390f35b61025061024b366004611727565b610566565b6040519015158152602001610234565b61021d61026e36600461182e565b610580565b61029a7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610234565b6002545b604051908152602001610234565b6102b660075481565b6102506102db3660046118ee565b6107e8565b6102b660085481565b60405160128152602001610234565b610250610306366004611727565b610824565b61021d61031936600461192a565b610846565b600f5461029a906001600160a01b031681565b61021d61033f36600461192a565b610890565b6102b660095481565b61021d61035b366004611943565b61089d565b6102b661036e366004611976565b610904565b61021d61091f565b61021d610389366004611991565b610933565b6005546001600160a01b031661029a565b60055461025090600160a01b900460ff1681565b6102b6600b5481565b61022761097a565b61021d6103d2366004611976565b610989565b6102506103e5366004611727565b6109b3565b61021d6103f83660046119d4565b610a39565b6102b6600a5481565b610250610414366004611727565b610aa3565b6102b6610427366004611976565b600e6020526000908152604090205481565b610250610447366004611976565b600c6020526000908152604090205460ff1681565b6102b661046a366004611a06565b610add565b61021d61047d366004611976565b610b08565b610250610490366004611976565b600d6020526000908152604090205460ff1681565b6102b660065481565b6104b6610b99565b60058054911515600160a01b0260ff60a01b19909216919091179055565b6060600380546104e390611a30565b80601f016020809104026020016040519081016040528092919081815260200182805461050f90611a30565b801561055c5780601f106105315761010080835404028352916020019161055c565b820191906000526020600020905b81548152906001019060200180831161053f57829003601f168201915b5050505050905090565b600033610574818585610bf3565b60019150505b92915050565b610588610b99565b60005b82518110156107e3576005546001600160a01b03166001600160a01b03168382815181106105bb576105bb611a6a565b60200260200101516001600160a01b0316141580156106055750306001600160a01b03168382815181106105f1576105f1611a6a565b60200260200101516001600160a01b031614155b80156106435750600f5483516001600160a01b039091169084908390811061062f5761062f611a6a565b60200260200101516001600160a01b031614155b801561069a57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031683828151811061068657610686611a6a565b60200260200101516001600160a01b031614155b6106eb5760405162461bcd60e51b815260206004820152601860248201527f416e74694d45563a20496e76616c69642061646472657373000000000000000060448201526064015b60405180910390fd5b8181815181106106fd576106fd611a6a565b6020026020010151600c600085848151811061071b5761071b611a6a565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff02191690831515021790555082818151811061076c5761076c611a6a565b60200260200101516001600160a01b03167f0cc5910ce116d1d71aa48f1ccd5e978315791068133c0c6aa7540ab8c9a8796d8383815181106107b0576107b0611a6a565b60200260200101516040516107c9911515815260200190565b60405180910390a2806107db81611a96565b91505061058b565b505050565b600554600090600160a01b900460ff1615610811576108078484610d17565b6108118484611030565b61081c848484611188565b949350505050565b6000336105748185856108378383610add565b6108419190611aaf565b610bf3565b61084e610b99565b61085833826111a1565b60405181815233907f696de425f79f4a40bc6d2122ca50507f0efbeabbff86a84871b7196ab8ea8df79060200160405180910390a250565b610898610b99565b600655565b6108a5610b99565b6001600160a01b0382166000818152600d6020908152604091829020805460ff191685151590811790915591519182527fda633a71264a27905632c474143536c3964c692d30dbf9384cf1f2e87659d64c910160405180910390a25050565b6001600160a01b031660009081526020819052604090205490565b610927610b99565b61093160006112df565b565b61093b610b99565b601080546001600160a01b039485166001600160a01b031991821617909155601180549385169382169390931790925560128054919093169116179055565b6060600480546104e390611a30565b610991610b99565b600f80546001600160a01b0319166001600160a01b0392909216919091179055565b600033816109c18286610add565b905083811015610a215760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016106e2565b610a2e8286868403610bf3565b506001949350505050565b610a41610b99565b600784905560088390556009829055600a8190556040805185815260208101859052908101839052606081018290527f14fd6f32fdaec8482ac6b00207414b60d714be451bc189769f2cdf1e85e881209060800160405180910390a150505050565b600554600090600160a01b900460ff1615610acc57610ac23384610d17565b610acc3384611030565b610ad68383611331565b9392505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610b10610b99565b6001600160a01b038116610b755760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106e2565b610b7e816112df565b50565b6000610ad68284611ac2565b6000610ad68284611ad9565b6005546001600160a01b031633146109315760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106e2565b6001600160a01b038316610c555760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016106e2565b6001600160a01b038216610cb65760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016106e2565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600f546001600160a01b038381169116148015610d4d57506001600160a01b0381166000908152600d602052604090205460ff16155b15610eac576007546001600160a01b0382166000908152600e6020526040902054610d789190611aaf565b431115610d9f576001600160a01b0381166000908152600e60205260409020439055610eac565b6001600160a01b0381166000908152600e60205260409020544303610e3e576001600160a01b0381166000908152600d602052604090205460ff16610e39576001600160a01b0381166000818152600c6020908152604091829020805460ff1916600190811790915591519182527f0cc5910ce116d1d71aa48f1ccd5e978315791068133c0c6aa7540ab8c9a8796d910160405180910390a25b610eac565b60405162461bcd60e51b815260206004820152603960248201527f416e74694d45563a205472616e736665727320746f6f206672657175656e742c60448201527f20706f737369626c652073616e64776963682061747461636b0000000000000060648201526084016106e2565b600f546001600160a01b038281169116148015610ee257506001600160a01b0382166000908152600d602052604090205460ff16155b1561102c576007546001600160a01b0383166000908152600e6020526040902054610f0d9190611aaf565b431115610f3157506001600160a01b03166000908152600e60205260409020439055565b6001600160a01b0382166000908152600e60205260409020544303610e3e576001600160a01b0382166000908152600d602052604090205460ff16610fcb576001600160a01b0382166000818152600c6020908152604091829020805460ff1916600190811790915591519182527f0cc5910ce116d1d71aa48f1ccd5e978315791068133c0c6aa7540ab8c9a8796d910160405180910390a25b60405162461bcd60e51b815260206004820152603060248201527f416e74694d45563a2053616e64776963682061747461636b206465746563746560448201526f642c20616464656420746f20626f747360801b60648201526084016106e2565b5050565b6001600b60008282546110439190611aaf565b9091555050600b54611055903a611ad9565b600b54611063600182611afb565b600a546110709190611ac2565b61107a9190611ad9565b6110849190611aaf565b600a55600954600b54111561109d573a600a556000600b555b6001600160a01b0382166000908152600d602052604090205460ff161580156110df57506001600160a01b0381166000908152600d602052604090205460ff16155b1561102c576111126111096064611103600854600a54610b8190919063ffffffff16565b90610b8d565b600a549061133f565b3a1015801561112357506001600b54115b1561102c5760405162461bcd60e51b815260206004820152602f60248201527f416e74694d45563a204761732062726962652064657465637465642c20706f7360448201526e39b4b1363290333937b73a16b93ab760891b60648201526084016106e2565b60003361119685828561134b565b610a2e8585856113c5565b6001600160a01b0382166112015760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016106e2565b61120d82600083611574565b6001600160a01b038216600090815260208190526040902054818110156112815760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016106e2565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000336105748185856113c5565b6000610ad68284611aaf565b60006113578484610add565b905060001981146113bf57818110156113b25760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016106e2565b6113bf8484848403610bf3565b50505050565b6001600160a01b0383166114295760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016106e2565b6001600160a01b03821661148b5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016106e2565b611496838383611574565b6001600160a01b0383166000908152602081905260409020548181101561150e5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016106e2565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36113bf565b6001600160a01b0382166000908152600c602052604090205460ff161580156115b657506001600160a01b0383166000908152600c602052604090205460ff16155b6115fb5760405162461bcd60e51b8152602060048201526016602482015275105b9d1a5351558e8812db9bdddb8813515588189bdd60521b60448201526064016106e2565b600f546001600160a01b03848116911614801561163157506001600160a01b0382166000908152600d602052604090205460ff16155b156107e3576006548161164384610904565b61164d9190611aaf565b11156107e35760405162461bcd60e51b81526020600482015260146024820152734d61782077616c6c65742065786365656465642160601b60448201526064016106e2565b803580151581146116a257600080fd5b919050565b6000602082840312156116b957600080fd5b610ad682611692565b600060208083528351808285015260005b818110156116ef578581018301518582016040015282016116d3565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146116a257600080fd5b6000806040838503121561173a57600080fd5b61174383611710565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561179057611790611751565b604052919050565b600067ffffffffffffffff8211156117b2576117b2611751565b5060051b60200190565b600082601f8301126117cd57600080fd5b813560206117e26117dd83611798565b611767565b82815260059290921b8401810191818101908684111561180157600080fd5b8286015b848110156118235761181681611692565b8352918301918301611805565b509695505050505050565b6000806040838503121561184157600080fd5b823567ffffffffffffffff8082111561185957600080fd5b818501915085601f83011261186d57600080fd5b8135602061187d6117dd83611798565b82815260059290921b8401810191818101908984111561189c57600080fd5b948201945b838610156118c1576118b286611710565b825294820194908201906118a1565b965050860135925050808211156118d757600080fd5b506118e4858286016117bc565b9150509250929050565b60008060006060848603121561190357600080fd5b61190c84611710565b925061191a60208501611710565b9150604084013590509250925092565b60006020828403121561193c57600080fd5b5035919050565b6000806040838503121561195657600080fd5b61195f83611710565b915061196d60208401611692565b90509250929050565b60006020828403121561198857600080fd5b610ad682611710565b6000806000606084860312156119a657600080fd5b6119af84611710565b92506119bd60208501611710565b91506119cb60408501611710565b90509250925092565b600080600080608085870312156119ea57600080fd5b5050823594602084013594506040840135936060013592509050565b60008060408385031215611a1957600080fd5b611a2283611710565b915061196d60208401611710565b600181811c90821680611a4457607f821691505b602082108103611a6457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611aa857611aa8611a80565b5060010190565b8082018082111561057a5761057a611a80565b808202811582820484141761057a5761057a611a80565b600082611af657634e487b7160e01b600052601260045260246000fd5b500490565b8181038181111561057a5761057a611a8056fea26469706673582212205d5d02ec637f143a9fa7a704575472e2ef5ff79cef4b43c054b9b9d6f122dc0264736f6c63430008120033",
  "devdoc": {
    "events": {
      "Approval(address,address,uint256)": {
        "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
      },
      "Transfer(address,address,uint256)": {
        "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
      }
    },
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 581,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "_balances",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 587,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "_allowances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 589,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 591,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "_name",
        "offset": 0,
        "slot": "3",
        "type": "t_string_storage"
      },
      {
        "astId": 593,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "_symbol",
        "offset": 0,
        "slot": "4",
        "type": "t_string_storage"
      },
      {
        "astId": 26,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "_owner",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 1161,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "detectMEV",
        "offset": 20,
        "slot": "5",
        "type": "t_bool"
      },
      {
        "astId": 1163,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "maxWallet",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 1165,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "mineBlocks",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 1167,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "gasDelta",
        "offset": 0,
        "slot": "8",
        "type": "t_uint256"
      },
      {
        "astId": 1169,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "maxSample",
        "offset": 0,
        "slot": "9",
        "type": "t_uint256"
      },
      {
        "astId": 1171,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "avgGasPrice",
        "offset": 0,
        "slot": "10",
        "type": "t_uint256"
      },
      {
        "astId": 1173,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "gasCounter",
        "offset": 0,
        "slot": "11",
        "type": "t_uint256"
      },
      {
        "astId": 1177,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "isBOT",
        "offset": 0,
        "slot": "12",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 1181,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "isVIP",
        "offset": 0,
        "slot": "13",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 1185,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "lastTxBlock",
        "offset": 0,
        "slot": "14",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 1190,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "uniswapV2Pair",
        "offset": 0,
        "slot": "15",
        "type": "t_address"
      },
      {
        "astId": 1192,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "devWallet",
        "offset": 0,
        "slot": "16",
        "type": "t_address_payable"
      },
      {
        "astId": 1194,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "burnWallet",
        "offset": 0,
        "slot": "17",
        "type": "t_address_payable"
      },
      {
        "astId": 1196,
        "contract": "contracts/AntiMEV.sol:AntiMEV",
        "label": "airdropWallet",
        "offset": 0,
        "slot": "18",
        "type": "t_address_payable"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}